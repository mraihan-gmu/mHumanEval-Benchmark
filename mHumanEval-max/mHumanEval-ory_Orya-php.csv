task_id,nl,pl,prompt,canonical_solution,tests
HumanEval_0,ory_Orya,php,"<?php
//ଏହି ତ୍ରୟୋଦଶ ବର୍ଷରେ//ଯାଞ୍ଚ କରନ୍ତୁ ଯେ, କୌଣସି ଦୁଇଟି ସଂଖ୍ୟା  ଠାରୁ ପରସ୍ପରର ନିକଟତର କି ନୁହେଁ ।// >>> has_close_elements(array(1.0, 2.0, 3.0), 0.5)
// false
// >>> has_close_elements(array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0), 0.3)
// true
function has_close_elements($numbers, $threshold) {
","function has_close_elements($numbers, $threshold) {
    $count = count($numbers);
    for ($i = 0; $i < $count; $i++) {
        for ($j = $i + 1; $j < $count; $j++) {
            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {
                return true;
            }
        }
    }
    return false;
}","function candidate(...$args) {
    return has_close_elements(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_1,ory_Orya,php,"<?php
//ପ୍ରବେଶ ସଂକେତରେ ଥିବା ସମସ୍ତ ସ୍ପେସକୁ ଅଣଦେଖା କରନ୍ତୁ.//ଅଲଗା ଅଲଗା ଗୋଷ୍ଠୀ ସନ୍ତୁଳିତ (ପ୍ରତ୍ୟେକ ଖୋଲା କଣ୍ଟା ସଠିକ ଭାବରେ ବନ୍ଦ) ଏବଂ ପରସ୍ପର ମଧ୍ୟରେ ନାଇଷ୍ଟ୍ ହୋଇନଥାଏ _//ସେହି ସମୂହକୁ ପୃଥକ ଧାଡ଼ିରେ ଅଲଗା କରନ୍ତୁ ଏବଂ ସେହିଗୁଡ଼ିକର ସରଳୀକରଣ ଫେରାନ୍ତୁ.//ଏହି ଫଳନକୁ ଇନପୁଟ୍ କରିବା ପାଇଁ ଗୋଟିଏ ଷ୍ଟ୍ରିଙ୍ଗ ଅଛି ଯେଉଁଥିରେ ନେଷ୍ଟ୍ ବାକ୍ୟଖଣ୍ଡର ଏକାଧିକ ଗୋଷ୍ଠୀ ଅଛି. ଆପଣଙ୍କର ଲକ୍ଷ୍ୟ ହେଉଛି // >>> separate_paren_groups(""( ) (( )) (( )( ))"")
// array(""()"", ""(())"", ""(()())"")
function separate_paren_groups($paren_string) {
","function separate_paren_groups($paren_string) {
    $paren_string = str_replace(' ', '', $paren_string);
    $groups = [];
    $balance = 0;
    $currentGroup = '';

    for ($i = 0; $i < strlen($paren_string); $i++) {
        $char = $paren_string[$i];
        $currentGroup .= $char;

        if ($char === '(') {
            $balance++;
        } elseif ($char === ')') {
            $balance--;
        }

        if ($balance === 0 && $currentGroup !== '') {
            $groups[] = $currentGroup;
            $currentGroup = '';
        }
    }

    return $groups;
}","function candidate(...$args) {
    return separate_paren_groups(...$args);
}

function test(): void {
    if (candidate(""(()()) ((())) () ((())()())"") !== array(""(()())"", ""((()))"", ""()"", ""((())()())"")) { throw new Exception(""Test failed!""); }
    if (candidate(""() (()) ((())) (((())))"") !== array(""()"", ""(())"", ""((()))"", ""(((())))"")) { throw new Exception(""Test failed!""); }
    if (candidate(""(()(())((())))"") !== array(""(()(())((())))"")) { throw new Exception(""Test failed!""); }
    if (candidate(""( ) (( )) (( )( ))"") !== array(""()"", ""(())"", ""(()())"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_2,ory_Orya,php,"<?php
//ସଂଖ୍ୟାର ଦଶମିକ ଅଂଶକୁ ଫେରାଇଦିଅନ୍ତୁ.//(ବଳକା ଅଂଶ ସବୁବେଳେ ୧ ରୁ କମ୍) ।//ଏବଂ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଅଂଶ (ଦତ୍ତ ସଂଖ୍ୟା ଠାରୁ ବଡ଼ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା) ଏବଂ ଦଶମିକ ସଂଖ୍ୟା //ଏକ ସକାରାତ୍ମକ ଭାସମାନ ବିନ୍ଦୁ ସଂଖ୍ୟା ଦିଆଗଲା, ଏହାକୁ  ରେ ବିଭକ୍ତ କରାଯାଇପାରିବ// >>> truncate_number(3.5)
// 0.5
function truncate_number($number) {
","function truncate_number($number) {
    $integerPart = floor($number);  // Get the integer part using floor
    return $number - $integerPart;  // Subtract the integer part from the original number to get the decimal part
}","function candidate(...$args) {
    return truncate_number(...$args);
}

function test(): void {
    if (candidate(3.5) !== 0.5) { throw new Exception(""Test failed!""); }
    if (candidate(1.25) !== 0.25) { throw new Exception(""Test failed!""); }
    if (candidate(123.0) !== 0.0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_3,ory_Orya,php,"<?php
//ସେହି ସମୟରେ ଫଳନଟି true ଫେରାଇବ । ଅନ୍ୟଥା ଏହା false ଫେରାଇବ ।//ଶୂନ ସନ୍ତୁଳନ. ଆପଣଙ୍କର କାମ ହେଉଛି ଯେ କୌଣସି ସମୟରେ ଖାତାର ସନ୍ତୁଳନ ଶୂନ ତଳକୁ ଖସିଗଲେ, ଏବଂ //ଆପଣଙ୍କୁ ଏକ ବ୍ୟାଙ୍କ ଖାତାରେ ଜମା ଓ ଉଠାଣର ଏକ ଶୃଙ୍ଖଳ ଦିଆଯାଇଛି ଯାହା  ସହିତ ଆରମ୍ଭ ହୋଇଥାଏ// >>> below_zero(array(1, 2, 3))
// false
// >>> below_zero(array(1, 2, -4, 5))
// true
function below_zero($operations) {
","function below_zero($operations) {
    $balance = 0;
    foreach ($operations as $operation) {
        $balance += $operation;
        if ($balance < 0) {
            return true;
        }
    }
    return false;
}","function candidate(...$args) {
    return below_zero(...$args);
}

function test(): void {
    if (candidate(array()) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_4,ory_Orya,php,"<?php
//MAD = ହାରାହାରି  x - x_mean //ଉପାଦାନ ଏବଂ ଏକ କେନ୍ଦ୍ର ବିନ୍ଦୁ (ଏହି କ୍ଷେତ୍ରରେ ମଧ୍ୟମ)://ମଝି ଅବଲମ୍ବନ ବିଚ୍ୟୁତି ହେଉଛି ଉଭୟର ହାରାହାରି ଅବଲମ୍ବନ ବିଚ୍ୟୁତି ।//ଏହି ଡାଟାସେଟର ହାରାହାରି ପାଖାପାଖି ।//ଏକ ନିର୍ଦ୍ଦିଷ୍ଟ ଆରେରେ ନିବେଶ ସଂଖ୍ୟା ପାଇଁ, ମିଆଁନ ଅବ୍ ସଲ୍ୟୁଟ ଡିଭାଇଏସନ ଗଣନା କରନ୍ତୁ // >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))
// 1.0
function mean_absolute_deviation($numbers) {
","function mean_absolute_deviation($numbers) {
    $n = count($numbers);
    if ($n == 0) return 0;
    
    $mean = array_sum($numbers) / $n;
    $absoluteDifferences = array_map(function($x) use ($mean) {
        return abs($x - $mean);
    }, $numbers);
    
    return array_sum($absoluteDifferences) / $n;
}","function candidate(...$args) {
    return mean_absolute_deviation(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_5,ory_Orya,php,"<?php
//ପ୍ରତ୍ୟେକ ଦୁଇ କ୍ରମିକ ଉପାଦାନ ମଧ୍ୟରେ ଏକ ସଂଖ୍ୟା 'ବ୍ୟାପକ' ଭର୍ତ୍ତି କରନ୍ତୁ _// >>> intersperse(array(), 4)
// array()
// >>> intersperse(array(1, 2, 3), 4)
// array(1, 4, 2, 4, 3)
function intersperse($numbers, $delimeter) {
","function intersperse($numbers, $delimeter) {
    if (empty($numbers)) {
        return $numbers;
    }
    $result = array();
    $count = count($numbers);
    for ($i = 0; $i < $count; $i++) {
        $result[] = $numbers[$i];
        if ($i < $count - 1) {
            $result[] = $delimeter;
        }
    }
    return $result;
}","function candidate(...$args) {
    return intersperse(...$args);
}

function test(): void {
    if (candidate(array(), 7) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_6,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ (() (()) ରେ ସର୍ବାଧିକ ଦୁଇଟି ସ୍ତର ଥିବା ବେଳେ ((())) ରେ ତିନୋଟି ସ୍ତର ରହିଛି ।//ପ୍ରତ୍ୟେକ ଗୋଷ୍ଠୀ ପାଇଁ, ବ୍ରେକହୋଲଗୁଡ଼ିକର ଗଣ୍ଠିକରଣର ଗଭୀରତମ ସ୍ତରକୁ ବାହାର କରନ୍ତୁ.//ଏହି ଫଳନକୁ ଇନପୁଟ୍ ହେଉଛି ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଯାହାକି ଅନ୍ତଃସ୍ଥଳ ବନ୍ଧନୀ ପାଇଁ ସ୍ପେସ୍ ଦ୍ୱାରା ପୃଥକ ହୋଇଥିବା ଏକାଧିକ ଗୋଷ୍ଠୀକୁ ପ୍ରତିନିଧିତ୍ୱ କରେ ।// >>> parse_nested_parens(""(()()) ((())) () ((())()())"")
// array(2, 3, 1, 3)
function parse_nested_parens($paren_string) {
","function parse_nested_parens($paren_string) {
    $groups = explode(' ', $paren_string);
    $results = [];

    foreach ($groups as $group) {
        $max_depth = 0;
        $current_depth = 0;

        for ($i = 0; $i < strlen($group); $i++) {
            if ($group[$i] === '(') {
                $current_depth++;
                if ($current_depth > $max_depth) {
                    $max_depth = $current_depth;
                }
            } elseif ($group[$i] === ')') {
                $current_depth--;
            }
        }

        $results[] = $max_depth;
    }

    return $results;
}","function candidate(...$args) {
    return parse_nested_parens(...$args);
}

function test(): void {
    if (candidate(""(()()) ((())) () ((())()())"") !== array(2, 3, 1, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(""() (()) ((())) (((())))"") !== array(1, 2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(""(()(())((())))"") !== array(4)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_7,ory_Orya,php,"<?php
//କେବଳ ସେହିଗୁଡ଼ିକ ପାଇଁ ନିବେଶ ଶୃଙ୍ଖଳାର ଏକ ମାପଦଣ୍ଡକୁ ଫିଲ୍ଟର୍ କରନ୍ତୁ ଯେଉଁଥିରେ ଦିଆଯାଇଥିବା ସବଷ୍ଟ୍ରିଙ୍ଗ ଅଛି // >>> filter_by_substring(array(), ""a"")
// array()
// >>> filter_by_substring(array(""abc"", ""bacd"", ""cde"", ""array""), ""a"")
// array(""abc"", ""bacd"", ""array"")
function filter_by_substring($strings, $substring) {
","function filter_by_substring($strings, $substring) {
    $filtered = array();
    foreach ($strings as $string) {
        if (strpos($string, $substring) !== false) {
            $filtered[] = $string;
        }
    }
    return $filtered;
}","function candidate(...$args) {
    return filter_by_substring(...$args);
}

function test(): void {
    if (candidate(array(), ""john"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""xxx"", ""asd"", ""xxy"", ""john doe"", ""xxxAAA"", ""xxx""), ""xxx"") !== array(""xxx"", ""xxxAAA"", ""xxx"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""xxx"", ""asd"", ""aaaxxy"", ""john doe"", ""xxxAAA"", ""xxx""), ""xx"") !== array(""xxx"", ""aaaxxy"", ""xxxAAA"", ""xxx"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""grunt"", ""trumpet"", ""prune"", ""gruesome""), ""run"") !== array(""grunt"", ""prune"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_8,ory_Orya,php,"<?php
//ଶୂନ୍ୟ ସମୂହ ଶୂନ ହେବା ଉଚିତ ଏବଂ ଶୂନ୍ୟ ଗୁଣନ ୧ ହେବା ଉଚିତ ।//ଏକ ନିର୍ଦ୍ଦିଷ୍ଟ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ପାଇଁ, ଏକ ସମୁଦାୟ ଏବଂ ଏକ ସମୁଦାୟରେ ସମସ୍ତ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡ଼ିକର ଉତ୍ପାଦିତ ଏକ ସରଳୀକରଣ ଫେରାନ୍ତୁ.// >>> sum_product(array())
// array(0, 1)
// >>> sum_product(array(1, 2, 3, 4))
// array(10, 24)
function sum_product($numbers) {
","function sum_product($numbers) {
    $sum = 0;
    $product = 1;
    
    foreach ($numbers as $number) {
        $sum += $number;
        $product *= $number;
    }
    
    return array($sum, $product);
}","function candidate(...$args) {
    return sum_product(...$args);
}

function test(): void {
    if (candidate(array()) !== array(0, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, 0)) !== array(100, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 5, 7)) !== array(15, 105)) { throw new Exception(""Test failed!""); }
    if (candidate(array(10)) !== array(10, 10)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_9,ory_Orya,php,"<?php
//କ୍ରମରେ ।//ଏକ ନିର୍ଦ୍ଦିଷ୍ଟ ସମୁଦାୟ ସଂଖ୍ୟାରୁ, ନିର୍ଦ୍ଦିଷ୍ଟ ମୁହୂର୍ତ୍ତ ପର୍ଯ୍ୟନ୍ତ ମିଳିଥିବା ସର୍ବାଧିକ ଉପାଦାନର ଏକ ସମୂହ ସୃଷ୍ଟି କରନ୍ତୁ // >>> rolling_max(array(1, 2, 3, 2, 3, 4, 2))
// array(1, 2, 3, 3, 3, 4, 4)
function rolling_max($numbers) {
","function rolling_max($numbers) {
    $result = [];
    $current_max = null;

    foreach ($numbers as $number) {
        if ($current_max === null || $number > $current_max) {
            $current_max = $number;
        }
        $result[] = $current_max;
    }

    return $result;
}","function candidate(...$args) {
    return rolling_max(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_10,ory_Orya,php,"<?php
//- ସ୍ଟ୍ରିଙ୍ଗର ଶେଷ ଭାଗରେ ଏକ ସ୍ଟ୍ରିଙ୍ଗ୍ ପ୍ରିଫିକ୍ସ ଯୋଡନ୍ତୁ ଯାହା ପାଲିଣ୍ଡ୍ରୋମିକ୍ ସଫିକ୍ସ ପୂର୍ବରୁ ଆସେ ।//- ପ୍ରଦାନ କରାଯାଇଥିବା ଷ୍ଟ୍ରିଙ୍ଗର ସବୁଠାରୁ ଲମ୍ବା ପୋଷ୍ଟଫିକ୍ସ ଖୋଜନ୍ତୁ ଯାହା ଏକ ପାଲିଣ୍ଡ୍ରୋମ ଅଟେ ।//ଆଲଗୋରିଦମ ଧାରଣା ସରଳ: //ସବୁଠାରୁ ଛୋଟ ପାଲିଣ୍ଡ୍ରୋମ ଖୋଜନ୍ତୁ ଯାହା ଏକ ସରଞ୍ଜାମରେ ଆରମ୍ଭ ହୋଇଥାଏ।// >>> make_palindrome("""")
// """"
// >>> make_palindrome(""cat"")
// ""catac""
// >>> make_palindrome(""cata"")
// ""catac""
function make_palindrome($string) {
","function make_palindrome($string) {
    $n = strlen($string);
    if ($n == 0) {
        return """";
    }
    
    // Check for the longest palindrome suffix
    for ($i = $n; $i >= 0; $i--) {
        if (is_palindrome(substr($string, $i))) {
            break;
        }
    }
    
    // Get the prefix before the palindromic suffix
    $prefix = substr($string, 0, $i);
    
    // Append the reverse of prefix to the end of the original string
    return $string . strrev($prefix);
}

// Helper function to check if a string is a palindrome
function is_palindrome($s) {
    return $s === strrev($s);
}","function candidate(...$args) {
    return make_palindrome(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""x"") !== ""x"") { throw new Exception(""Test failed!""); }
    if (candidate(""xyz"") !== ""xyzyx"") { throw new Exception(""Test failed!""); }
    if (candidate(""xyx"") !== ""xyx"") { throw new Exception(""Test failed!""); }
    if (candidate(""jerry"") !== ""jerryrrej"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_11,ory_Orya,php,"<?php
//ଏହି ଇନପୁଟଗୁଡ଼ିକ ଉପରେ ବାଇନାରୀ XOR କରନ୍ତୁ ଏବଂ ଫଳାଫଳକୁ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଭାବରେ ଫେରାନ୍ତୁ.//ଇନପୁଟ୍ ହେଉଛି ଦୁଇଟି ଷ୍ଟ୍ରିଙ୍ଗ୍ a ଏବଂ b ଯାହା କେବଳ 1s ଏବଂ 0s ରେ ଗଠିତ ।// >>> string_xor(""010"", ""110"")
// ""100""
function string_xor($a, $b) {
","function string_xor($a, $b) {
    $result = '';
    for ($i = 0; $i < strlen($a); $i++) {
        $result .= ($a[$i] === $b[$i]) ? '0' : '1';
    }
    return $result;
}","function candidate(...$args) {
    return string_xor(...$args);
}

function test(): void {
    if (candidate(""111000"", ""101010"") !== ""010010"") { throw new Exception(""Test failed!""); }
    if (candidate(""1"", ""1"") !== ""0"") { throw new Exception(""Test failed!""); }
    if (candidate(""0101"", ""0000"") !== ""0101"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_12,ory_Orya,php,"<?php
//ସମାନ ଲମ୍ବର ଶୃଙ୍ଖଳାଗୁଡିକ. ଯଦି ନିବେଶ ମାଲିକାନା ଖାଲି ଥାଏ ତେବେ ଶୂନ୍ୟ ଫେରାଇଥାଏ.//ସରଳୀକରଣର ସରଳୀକରଣରୁ, ଦୀର୍ଘତମକୁ ଫେରାଇଥାଏ. ଏକାଧିକ  କ୍ଷେତ୍ରରେ ପ୍ରଥମକୁ ଫେରାଇଥାଏ.// >>> longest(array())
// null
// >>> longest(array(""a"", ""b"", ""c""))
// ""a""
// >>> longest(array(""a"", ""bb"", ""ccc""))
// ""ccc""
function longest($strings) {
","function longest($strings) {
    if (empty($strings)) {
        return null;
    }

    $longestString = $strings[0];
    foreach ($strings as $string) {
        if (strlen($string) > strlen($longestString)) {
            $longestString = $string;
        }
    }

    return $longestString;
}","function candidate(...$args) {
    return longest(...$args);
}

function test(): void {
    if (candidate(array()) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""y"", ""z"")) !== ""x"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""yyy"", ""zzzz"", ""www"", ""kkkk"", ""abc"")) !== ""zzzz"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_13,ory_Orya,php,"<?php
//ଦୁଇଟି ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା a ଓ b ର ସର୍ବ ବୃହତ ସାଧାରଣ ବିଭାଜକକୁ ଫେରାଇଥାଏ // >>> greatest_common_divisor(3, 5)
// 1
// >>> greatest_common_divisor(25, 15)
// 5
function greatest_common_divisor($a, $b) {
","function greatest_common_divisor($a, $b) {
    while ($b != 0) {
        $t = $b;
        $b = $a % $b;
        $a = $t;
    }
    return $a;
}","function candidate(...$args) {
    return greatest_common_divisor(...$args);
}

function test(): void {
    if (candidate(3, 7) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(10, 15) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(49, 14) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(144, 60) !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_14,ory_Orya,php,"<?php
//ପ୍ରବେଶ ସଂକେତର ସର୍ବୋଚ୍ଚରୁ ସର୍ବୋଚ୍ଚ ପର୍ଯ୍ୟନ୍ତ ସମସ୍ତ ଉପସର୍ଗର ଏକ ସରଳୀକରଣ ଫେରାଇଥାଏ // >>> all_prefixes(""abc"")
// array(""a"", ""ab"", ""abc"")
function all_prefixes($string) {
","function all_prefixes($string) {
    $prefixes = array();
    $length = strlen($string);
    for ($i = 1; $i <= $length; $i++) {
        $prefixes[] = substr($string, 0, $i);
    }
    return $prefixes;
}","function candidate(...$args) {
    return all_prefixes(...$args);
}

function test(): void {
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""asdfgh"") !== array(""a"", ""as"", ""asd"", ""asdf"", ""asdfg"", ""asdfgh"")) { throw new Exception(""Test failed!""); }
    if (candidate(""WWW"") !== array(""W"", ""WW"", ""WWW"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_15,ory_Orya,php,"<?php
//0 ରୁ n ସମେତ ଅନ୍ତରୀଣ ସଂଖ୍ୟା ବିଶିଷ୍ଟ ଏକ ଷ୍ଟ୍ରିଙ୍ଗକୁ ଫେରାଇଥାଏ।// >>> string_sequence(0)
// ""0""
// >>> string_sequence(5)
// ""0 1 2 3 4 5""
function string_sequence($n) {
","function string_sequence($n) {
    $sequence = range(0, $n);
    return implode(' ', $sequence);
}","function candidate(...$args) {
    return string_sequence(...$args);
}

function test(): void {
    if (candidate(0) !== ""0"") { throw new Exception(""Test failed!""); }
    if (candidate(3) !== ""0 1 2 3"") { throw new Exception(""Test failed!""); }
    if (candidate(10) !== ""0 1 2 3 4 5 6 7 8 9 10"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_16,ory_Orya,php,"<?php
//ଗୋଟିଏ ଷ୍ଟ୍ରିଙ୍ଗ ଦିଆଗଲା, କେତେ ଅଲଗା ଅକ୍ଷର (କେସକୁ ନେଇ) ଅଛି ତାହା ଖୋଜନ୍ତୁ // >>> count_distinct_characters(""xyzXYZ"")
// 3
// >>> count_distinct_characters(""Jerry"")
// 4
function count_distinct_characters($string) {
","function count_distinct_characters($string) {
    $string = strtolower($string);
    $distinctChars = array_count_values(str_split($string));
    return count($distinctChars);
}","function candidate(...$args) {
    return count_distinct_characters(...$args);
}

function test(): void {
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""abcde"") !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdecadeCADE"") !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaaAAAAaaaa"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""Jerry jERRY JeRRRY"") !== 5) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_17,ory_Orya,php,"<?php
//'କକହ' - କ୍ୱାର୍ଟର ନୋଟ୍, ଗୋଟିଏ ବିଟ୍ ପର୍ଯ୍ୟନ୍ତ ରହିଥାଏ //'ଓ' କହିଲେ ଅଧା ନୋଟ୍, ଦୁଇଟା ବିଟ୍ ଯାଏଁ ।//'ଓ' - ପୁରା ନୋଟ୍, ଚାରିଟି ବିଟ୍ ପର୍ଯ୍ୟନ୍ତ ରହିଥାଏ //ଏଠାରେ ଏକ କିମ୍ବଦନ୍ତୀ ରହିଛି://ଶେଷ ନୁହେଁ ।//ଆପଣଙ୍କର କାମ ହେଉଛି ଏହି ଷ୍ଟ୍ରିଙ୍ଗକୁ ବିଶ୍ଳେଷଣ କରିବା ଏବଂ ପ୍ରତ୍ୟେକ କେତେ ବିଟ୍ କରେ ତାହା ସହିତ ସମାନ ସଂଖ୍ୟକ ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ଧାଡି ଫେରାଇବା //ଏହି ଫଳନକୁ ଇନପୁଟ୍ ହେଉଛି ଏକ ସ୍ୱତନ୍ତ୍ର ASCII ଫର୍ମାଟରେ ମ୍ୟୁଜିକାଲ୍ ନୋଟ୍ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଏକ ଷ୍ଟ୍ରିଙ୍ଗ୍ ।// >>> parse_music(""o o| .| o| o| .| .| .| .| o o"")
// array(4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4)
function parse_music($music_string) {
","function parse_music($music_string) {
    $notes = explode("" "", trim($music_string));
    $beats = [];

    foreach ($notes as $note) {
        switch ($note) {
            case 'o':
                $beats[] = 4;
                break;
            case 'o|':
                $beats[] = 2;
                break;
            case '.|':
                $beats[] = 1;
                break;
        }
    }

    return $beats;
}","function candidate(...$args) {
    return parse_music(...$args);
}

function test(): void {
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""o o o o"") !== array(4, 4, 4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate("".| .| .| .|"") !== array(1, 1, 1, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(""o| o| .| .| o o o o"") !== array(2, 2, 1, 1, 4, 4, 4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(""o| .| o| .| o o| o o|"") !== array(2, 1, 2, 1, 4, 2, 4, 2)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_18,ory_Orya,php,"<?php
//ମୂଳ ଷ୍ଟ୍ରିଙ୍ଗରେ କେତେଥର ଦିଆଯାଇଥିବା ସବଷ୍ଟ୍ରିଙ୍ଗ୍ ମିଳିପାରିବ ତାହା ଖୋଜ _ ଆଲଟପଲ୍ଲଟ କେସ୍ ଗୁଡିକୁ ଗଣନା କର _// >>> how_many_times("""", ""a"")
// 0
// >>> how_many_times(""aaa"", ""a"")
// 3
// >>> how_many_times(""aaaa"", ""aa"")
// 3
function how_many_times($string, $substring) {
","function how_many_times($string, $substring) {
    if ($substring === """") {
        return 0;
    }
    
    $count = 0;
    $position = 0;
    $subLen = strlen($substring);
    
    while (($position = strpos($string, $substring, $position)) !== false) {
        $count++;
        $position += 1;
    }
    
    return $count;
}","function candidate(...$args) {
    return how_many_times(...$args);
}

function test(): void {
    if (candidate("""", ""x"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""xyxyxyx"", ""x"") !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(""cacacacac"", ""cac"") !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(""john doe"", ""john"") !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_19,ory_Orya,php,"<?php
//ଛୋଟରୁ ବଡ଼ ପର୍ଯ୍ୟନ୍ତ ସର୍ଟ ହୋଇଥିବା ସଂଖ୍ୟା ସହିତ ଶୃଙ୍ଖଳାକୁ ଫେରାଇଥାଏ //ବୈଧ ବିକଳ୍ପଗୁଡ଼ିକ ହେଉଛି 'ଶୂନ', 'ଏକ', 'ଦୁଇ', 'ତିନି', 'ଚାରି', 'ପାଞ୍ଚ', 'ଛଅ', 'ସାତ', 'ଆଠ' ଏବଂ 'ନଅ'।//ଇନପୁଟ୍ ହେଉଛି 'ଶୂନ'ରୁ 'ନଅ' ପର୍ଯ୍ୟନ୍ତ ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ସ୍ପେସ୍-ସୀମିତ ଷ୍ଟ୍ରିଙ୍ଗ୍ ।// >>> sort_numbers(""three one five"")
// ""one three five""
function sort_numbers($numbers) {
","function sort_numbers($numbers) {
    // Define an array to map string numerals to their respective integer values
    $numeral_to_value = [
        'zero' => 0,
        'one' => 1,
        'two' => 2,
        'three' => 3,
        'four' => 4,
        'five' => 5,
        'six' => 6,
        'seven' => 7,
        'eight' => 8,
        'nine' => 9
    ];

    // Split the input string into an array of words
    $number_words = explode("" "", $numbers);

    // Sort the array using the integer values from numeral_to_value
    usort($number_words, function($a, $b) use ($numeral_to_value) {
        return $numeral_to_value[$a] - $numeral_to_value[$b];
    });

    // Join the sorted array back into a string and return it
    return implode("" "", $number_words);
}","function candidate(...$args) {
    return sort_numbers(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""three"") !== ""three"") { throw new Exception(""Test failed!""); }
    if (candidate(""three five nine"") !== ""three five nine"") { throw new Exception(""Test failed!""); }
    if (candidate(""five zero four seven nine eight"") !== ""zero four five seven eight nine"") { throw new Exception(""Test failed!""); }
    if (candidate(""six five four three two one zero"") !== ""zero one two three four five six"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_20,ory_Orya,php,"<?php
//ଅନ୍ୟକୁ କ୍ରମ ଅନୁସାରେ ଫେରାଇ ଦିଅନ୍ତୁ (ଅଧିକ ସଂଖ୍ୟା, କମ୍ ସଂଖ୍ୟା) ।//ଯୋଗାଣ କରାଯାଇଥିବା ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ଆରେ (ଅତିକମରେ ଦୁଇଟି ଲମ୍ବ) ରୁ ପ୍ରତ୍ୟେକକୁ ନିକଟତମ ଥିବା ଦୁଇଟିକୁ ବାଛନ୍ତୁ ଏବଂ ଫେରାନ୍ତୁ // >>> find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))
// array(2.0, 2.2)
// >>> find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))
// array(2.0, 2.0)
function find_closest_elements($numbers) {
","function find_closest_elements($numbers) {
    sort($numbers);
    $minDiff = PHP_FLOAT_MAX;
    $closestPair = array();

    for ($i = 0; $i < count($numbers) - 1; $i++) {
        $diff = abs($numbers[$i + 1] - $numbers[$i]);
        if ($diff < $minDiff) {
            $minDiff = $diff;
            $closestPair = array($numbers[$i], $numbers[$i + 1]);
        }
    }

    return $closestPair;
}","function candidate(...$args) {
    return find_closest_elements(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_21,ory_Orya,php,"<?php
//ତେଣୁ ଛୋଟ ସଂଖ୍ୟାଟି 0 ହେବ ଏବଂ ବଡ ସଂଖ୍ୟାଟି 1 ହେବ ।//ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ସରଳୀକୃତ ଧାରା (ଅତିକମରେ ଦୁଇଟି ଉପାଦାନର), ସେହି ସରଳୀକୃତ ଧାରାକୁ ଏକ ସରଳ ପରିବର୍ତ୍ତନ ପ୍ରୟୋଗ କରନ୍ତୁ, // >>> rescale_to_unit(array(1.0, 2.0, 3.0, 4.0, 5.0))
// array(0.0, 0.25, 0.5, 0.75, 1.0)
function rescale_to_unit($numbers) {
","function rescale_to_unit($numbers) {
    $min = min($numbers);
    $max = max($numbers);
    if ($max == $min) {
        return array_fill(0, count($numbers), 0.0);
    }
    
    $result = array_map(function($num) use ($min, $max) {
        return ($num - $min) / ($max - $min);
    }, $numbers);
    
    return $result;
}","function candidate(...$args) {
    return rescale_to_unit(...$args);
}

function test(): void {
    if (candidate(array(2.0, 49.9)) !== array(0.0, 1.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(100.0, 49.9)) !== array(1.0, 0.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== array(0.0, 0.25, 0.5, 0.75, 1.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2.0, 1.0, 5.0, 3.0, 4.0)) !== array(0.25, 0.0, 1.0, 0.5, 0.75)) { throw new Exception(""Test failed!""); }
    if (candidate(array(12.0, 11.0, 15.0, 13.0, 14.0)) !== array(0.25, 0.0, 1.0, 0.5, 0.75)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_22,ory_Orya,php,"<?php
//କେବଳ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡିକ ପାଇଁ କୌଣସି phpthon ମୂଲ୍ୟର ଦିଆଯାଇଥିବା ଆରେକୁ ଫିଲ୍ଟର୍ କରନ୍ତୁ // >>> filter_integers(array(""a"", 3.14, 5))
// array(5)
// >>> filter_integers(array(1, 2, 3, ""abc"", array(), array()))
// array(1, 2, 3)
function filter_integers($values) {
","function filter_integers($values) {
    return array_values(array_filter($values, 'is_int'));
}","function candidate(...$args) {
    return filter_integers(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, array(), array(), 23.2, 9, ""adasd"")) !== array(4, 9)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, ""c"", 3, 3, ""a"", ""b"")) !== array(3, 3, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_23,ory_Orya,php,"<?php
//ଦିଆଯାଇଥିବା ଷ୍ଟ୍ରିଙ୍ଗର ରିଟର୍ଣ୍ଣ ଲମ୍ବ // >>> strlen("""")
// 0
// >>> strlen(""abc"")
// 3
function strlen($string) {
","function strlen($string) {
    $length = 0;
    while (isset($string[$length])) {
        $length++;
    }
    return $length;
}","function candidate(...$args) {
    return strlen(...$args);
}

function test(): void {
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""x"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""asdasnakj"") !== 9) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_24,ory_Orya,php,"<?php
//କୌଣସି ଏକ n ସଂଖ୍ୟା ପାଇଁ, n ଠାରୁ ଛୋଟ, ସବୁଠାରୁ ବଡ ସଂଖ୍ୟା ଖୋଜନ୍ତୁ ଯାହା n କୁ ସମାନ ଭାବରେ ଭାଗ କରେ // >>> largest_divisor(15)
// 5
function largest_divisor($n) {
","function largest_divisor($n) {
    for ($i = $n - 1; $i > 0; $i--) {
        if ($n % $i === 0) {
            return $i;
        }
    }
    return null; // In case no divisor is found, though for n > 1 there will always be one.
}","function candidate(...$args) {
    return largest_divisor(...$args);
}

function test(): void {
    if (candidate(3) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 50) { throw new Exception(""Test failed!""); }
    if (candidate(49) !== 7) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_25,ory_Orya,php,"<?php
//ଇନପୁଟ୍ ସଂଖ୍ୟା ସବୁ ଗୁଣକର ଗୁଣନ ସହିତ ସମାନ ହେବା ଉଚିତ //ପ୍ରତ୍ୟେକ ଗୁଣକକୁ କେତେଥର ବିଭାଜନରେ ଦେଖାଯାଏ ତାହା ସହିତ ସମାନ ଭାବରେ ଆରେ କରାଯିବ _//ଛୋଟରୁ ବଡ଼ ପର୍ଯ୍ୟନ୍ତ ନିର୍ଦ୍ଦିଷ୍ଟ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ଅଶେଷ ଗୁଣକମାନଙ୍କର ଏକ ସରଳୀକରଣ ଫେରାଇଥାଏ ।// >>> factorize(8)
// array(2, 2, 2)
// >>> factorize(25)
// array(5, 5)
// >>> factorize(70)
// array(2, 5, 7)
function factorize($n) {
","function factorize($n) {
    $factors = array();
    // Check for number of twos
    while ($n % 2 == 0) {
        $factors[] = 2;
        $n = $n / 2;
    }
    // Check for odd numbers
    for ($i = 3; $i <= sqrt($n); $i += 2) {
        while ($n % $i == 0) {
            $factors[] = $i;
            $n = $n / $i;
        }
    }
    // If n becomes a prime number greater than 2
    if ($n > 2) {
        $factors[] = $n;
    }
    return $factors;
}","function candidate(...$args) {
    return factorize(...$args);
}

function test(): void {
    if (candidate(2) !== array(2)) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== array(2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(57) !== array(3, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_26,ory_Orya,php,"<?php
//ଉପାଦାନଗୁଡ଼ିକର କ୍ରମାଙ୍କକୁ ଇନପୁଟରେ ଥିବା କ୍ରମାଙ୍କ ସହିତ ସମାନ ରଖନ୍ତୁ ।//ଏକ ସମୁଦାୟ ସଂଖ୍ୟାର ଏକ ସରଳୀକୃତ ଧାରାରୁ, ସମସ୍ତ ଉପାଦାନଗୁଡ଼ିକୁ କାଢ଼ି ଦିଅନ୍ତୁ ଯାହା ଥରେରୁ ଅଧିକ ଥର ଘଟେ ।// >>> remove_duplicates(array(1, 2, 3, 2, 4))
// array(1, 3, 4)
function remove_duplicates($numbers) {
","function remove_duplicates($numbers) {
    $counts = array_count_values($numbers);
    return array_values(array_filter($numbers, function($num) use ($counts) {
        return $counts[$num] === 1;
    }));
}","function candidate(...$args) {
    return remove_duplicates(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_27,ory_Orya,php,"<?php
//କୌଣସି ଏକ ଧାଡ଼ି ପାଇଁ, ଛୋଟ ଅକ୍ଷରକୁ ବଡ଼ ଅକ୍ଷର ଓ ବଡ଼ ଅକ୍ଷରକୁ ଛୋଟ ଅକ୍ଷର ଭାବରେ ବଦଳାନ୍ତୁ.// >>> flip_case(""Hello"")
// ""hELLO""
function flip_case($string) {
","function flip_case($string) {
    $flippedString = '';
    for ($i = 0; $i < strlen($string); $i++) {
        $char = $string[$i];
        if (ctype_lower($char)) {
            $flippedString .= strtoupper($char);
        } else if (ctype_upper($char)) {
            $flippedString .= strtolower($char);
        } else {
            $flippedString .= $char;
        }
    }
    return $flippedString;
}","function candidate(...$args) {
    return flip_case(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""Hello!"") !== ""hELLO!"") { throw new Exception(""Test failed!""); }
    if (candidate(""These violent delights have violent ends"") !== ""tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_28,ory_Orya,php,"<?php
//ଗୋଟିଏ ଧାଡ଼ିରେ ଶୃଙ୍ଖଳାର ଏକତ୍ରିତ ଧାଡ଼ି // >>> concatenate(array())
// """"
// >>> concatenate(array(""a"", ""b"", ""c""))
// ""abc""
function concatenate($strings) {
","function concatenate($strings) {
    return implode('', $strings);
}","function candidate(...$args) {
    return concatenate(...$args);
}

function test(): void {
    if (candidate(array()) !== """") { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""y"", ""z"")) !== ""xyz"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""y"", ""z"", ""w"", ""k"")) !== ""xyzwk"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_29,ory_Orya,php,"<?php
//କେବଳ ସେହିଗୁଡ଼ିକ ପାଇଁ ଏକ ଇନପୁଟ୍ ଆରେ ଫିଲ୍ଟର୍ କରନ୍ତୁ ଯାହା ଏକ ନିର୍ଦ୍ଦିଷ୍ଟ ଉପସର୍ଗ ସହିତ ଆରମ୍ଭ ହୋଇଥାଏ.// >>> filter_by_prefix(array(), ""a"")
// array()
// >>> filter_by_prefix(array(""abc"", ""bcd"", ""cde"", ""array""), ""a"")
// array(""abc"", ""array"")
function filter_by_prefix($strings, $prefix) {
","function filter_by_prefix($strings, $prefix) {
    $result = array_filter($strings, function($string) use ($prefix) {
        return strpos($string, $prefix) === 0;
    });
    return array_values($result);
}","function candidate(...$args) {
    return filter_by_prefix(...$args);
}

function test(): void {
    if (candidate(array(), ""john"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""xxx"", ""asd"", ""xxy"", ""john doe"", ""xxxAAA"", ""xxx""), ""xxx"") !== array(""xxx"", ""xxxAAA"", ""xxx"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_30,ory_Orya,php,"<?php
//କେବଳ ଧନାତ୍ମକ ସଂଖ୍ୟାଗୁଡ଼ିକୁ ମାପଦଣ୍ଡରେ ଫେରାଇଥାଏ.// >>> get_positive(array(-1, 2, -4, 5, 6))
// array(2, 5, 6)
// >>> get_positive(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))
// array(5, 3, 2, 3, 9, 123, 1)
function get_positive($l) {
","function get_positive($l) {
    return array_filter($l, function($num) {
        return $num > 0;
    });
}","function candidate(...$args) {
    return get_positive(...$args);
}

function test(): void {
    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2)) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_31,ory_Orya,php,"<?php
//ଯଦି କୌଣସି ସଂଖ୍ୟା ଅଶୂନ୍ୟ ହୋଇଥାଏ ତେବେ ଏହା ସତ୍ୟ ଫେରାଇଥାଏ, ଅନ୍ୟଥା ଏହା ମିଥ୍ୟା ହୋଇଥାଏ ।// >>> is_prime(6)
// false
// >>> is_prime(101)
// true
// >>> is_prime(11)
// true
// >>> is_prime(13441)
// true
// >>> is_prime(61)
// true
// >>> is_prime(4)
// false
// >>> is_prime(1)
// false
function is_prime($n) {
","function is_prime($n) {
    if ($n <= 1) return false;
    if ($n <= 3) return true;
    if ($n % 2 == 0 || $n % 3 == 0) return false;

    for ($i = 5; $i * $i <= $n; $i += 6) {
        if ($n % $i == 0 || $n % ($i + 2) == 0) return false;
    }
    return true;
}","function candidate(...$args) {
    return is_prime(...$args);
}

function test(): void {
    if (candidate(6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(101) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(13441) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(61) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(17) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(85) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(77) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(255379) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_33,ory_Orya,php,"<?php
//କିନ୍ତୁ ଏହା ସର୍ଟ କରାଯାଇଛି ।//l' ହେଉଛି l ସହିତ ସମାନ, ଯେଉଁ ସୂଚକାଙ୍କଗୁଡ଼ିକ ତିନି ଭାଗରେ ବିଭକ୍ତ ହୋଇନଥାଏ, କିନ୍ତୁ ଏହାର ମୂଲ୍ୟଗୁଡ଼ିକ ସେହି ସୂଚକାଙ୍କଗୁଡ଼ିକରେ ସମାନ ହୋଇଥାଏ, ଯାହା ତିନି ଭାଗରେ ବିଭକ୍ତ ହୋଇଥାଏ ।//ଏହି ଫଳନ ଏକ ସରଳୀକୃତ l କୁ ନେଇଥାଏ ଏବଂ ଏକ ସରଳୀକୃତ l' କୁ ଫେରାଇଥାଏ ଯେପରିକି // >>> sort_third(array(1, 2, 3))
// array(1, 2, 3)
// >>> sort_third(array(5, 6, 3, 4, 8, 9, 2))
// array(2, 6, 3, 4, 8, 9, 5)
function sort_third($l) {
","function sort_third($l) {
    $length = count($l);
    $div_by_three_values = [];

    // Collect values at indices divisible by three
    for ($i = 0; $i < $length; $i++) {
        if ($i % 3 == 0) {
            $div_by_three_values[] = $l[$i];
        }
    }

    // Sort the collected values
    sort($div_by_three_values);

    // Replace original values with sorted ones at indices divisible by three
    $index = 0;
    for ($i = 0; $i < $length; $i++) {
        if ($i % 3 == 0) {
            $l[$i] = $div_by_three_values[$index];
            $index++;
        }
    }

    return $l;
}","function candidate(...$args) {
    return sort_third(...$args);
}

function test(): void {
    if (candidate(array(5, 6, 3, 4, 8, 9, 2)) !== array(2, 6, 3, 4, 8, 9, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 8, 3, 4, 6, 9, 2)) !== array(2, 8, 3, 4, 6, 9, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 9, 4, 8, 3, 2)) !== array(2, 6, 9, 4, 8, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 3, 4, 8, 9, 2, 1)) !== array(2, 6, 3, 4, 8, 9, 5, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_34,ory_Orya,php,"<?php
//ଗୋଟିଏ ଧାଡ଼ିରେ ସଜାଡ଼ାଯାଇଥିବା ଅନନ୍ୟ ଉପାଦାନଗୁଡ଼ିକୁ ଫେରାଇଥାଏ// >>> unique(array(5, 3, 5, 2, 3, 3, 9, 0, 123))
// array(0, 2, 3, 5, 9, 123)
function unique($l) {
","function unique($l) {
    // Use array_unique to remove duplicates
    $uniqueArray = array_unique($l);
    // Sort the result array
    sort($uniqueArray);
    return $uniqueArray;
}

// Example usage
$result = unique(array(5, 3, 5, 2, 3, 3, 9, 0, 123));
print_r($result);","function candidate(...$args) {
    return unique(...$args);
}

function test(): void {
    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_35,ory_Orya,php,"<?php
//ଆରେରେ ସର୍ବାଧିକ ଉପାଦାନକୁ ଫେରାଇଥାଏ. // >>> max_element(array(1, 2, 3))
// 3
// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))
// 123
function max_element($l) {
","function max_element($l) {
    if (empty($l)) {
        return null; // Return null if the array is empty
    }
    $max = $l[0];
    foreach ($l as $value) {
        if ($value > $max) {
            $max = $value;
        }
    }
    return $max;
}","function candidate(...$args) {
    return max_element(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_36,ory_Orya,php,"<?php
//11 କିମ୍ବା 13 ଦ୍ୱାରା ବିଭାଜନ ହେଉଥିବା n ରୁ କମ୍ ସଂଖ୍ୟାରେ 7 ସଂଖ୍ୟା କେତେ ଥର ଦେଖାଯାଏ ତାହା ଫେରାଇଥାଏ ।// >>> fizz_buzz(50)
// 0
// >>> fizz_buzz(78)
// 2
// >>> fizz_buzz(79)
// 3
function fizz_buzz($n) {
","function fizz_buzz($n) {
    $count = 0;
    for ($i = 1; $i < $n; $i++) {
        if ($i % 11 == 0 || $i % 13 == 0) {
            $digits = str_split((string)$i);
            foreach ($digits as $digit) {
                if ($digit == '7') {
                    $count++;
                }
            }
        }
    }
    return $count;
}","function candidate(...$args) {
    return fizz_buzz(...$args);
}

function test(): void {
    if (candidate(50) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(78) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(79) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(200) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(4000) !== 192) { throw new Exception(""Test failed!""); }
    if (candidate(10000) !== 639) { throw new Exception(""Test failed!""); }
    if (candidate(100000) !== 8026) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_37,ory_Orya,php,"<?php
//କିନ୍ତୁ ସର୍ଟ କରାଯାଇଛି ।//l' ଅଙ୍କରେ l ସହିତ ସମାନ, କିନ୍ତୁ ସମାନ ଅଙ୍କରେ l ସମାନ ।//ଏହି ଫଳନ ଏକ ସରଳୀକୃତ l କୁ ନେଇଥାଏ ଏବଂ ଏକ ସରଳୀକୃତ l' କୁ ଫେରାଇଥାଏ ଯେପରିକି // >>> sort_even(array(1, 2, 3))
// array(1, 2, 3)
// >>> sort_even(array(5, 6, 3, 4))
// array(3, 6, 5, 4)
function sort_even($l) {
","function sort_even($l) {
    $even_indices = [];

    // Extract values at even indices
    for ($i = 0; $i < count($l); $i += 2) {
        $even_indices[] = $l[$i];
    }

    // Sort the extracted even-indexed values
    sort($even_indices);

    // Rebuild the original array with sorted even-indexed values
    $evenIndex = 0;
    for ($i = 0; $i < count($l); $i++) {
        if ($i % 2 == 0) {
            $l[$i] = $even_indices[$evenIndex];
            $evenIndex++;
        }
    }

    return $l;
}","function candidate(...$args) {
    return sort_even(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3)) !== array(1, 2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)) !== array(-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 8, -12, 4, 23, 2, 3, 11, 12, -10)) !== array(-12, 8, 3, 4, 5, 2, 12, 11, 23, -10)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_39,ory_Orya,php,"<?php
//prime_fib n-th ସଂଖ୍ୟାକୁ ଫେରାଇଥାଏ ଯାହାକି ଏକ ଫାଇବୋନ୍ୟାଚି ସଂଖ୍ୟା ଅଟେ ଏବଂ ଏହା ମଧ୍ୟ ଅଶୂର ଅଟେ ।// >>> prime_fib(1)
// 2
// >>> prime_fib(2)
// 3
// >>> prime_fib(3)
// 5
// >>> prime_fib(4)
// 13
// >>> prime_fib(5)
// 89
function prime_fib($n) {
","function is_prime($num) {
    if ($num <= 1) return false;
    if ($num <= 3) return true;
    if ($num % 2 == 0 || $num % 3 == 0) return false;
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) return false;
    }
    return true;
}

function prime_fib($n) {
    $fib1 = 1;
    $fib2 = 1;
    $fib_index = 2;
    $prime_fib_count = 0;
    
    while (true) {
        $fib_index++;
        $fib = $fib1 + $fib2;
        $fib1 = $fib2;
        $fib2 = $fib;
        
        if (is_prime($fib)) {
            $prime_fib_count++;
            if ($prime_fib_count == $n) {
                return $fib;
            }
        }
    }
}","function candidate(...$args) {
    return prime_fib(...$args);
}

function test(): void {
    if (candidate(1) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(2) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== 13) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 89) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== 233) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== 1597) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 28657) { throw new Exception(""Test failed!""); }
    if (candidate(9) !== 514229) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 433494437) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_40,ory_Orya,php,"<?php
//ସମୂହ ଶୂନ୍ୟ, ଅନ୍ୟଥା ମିଥ୍ୟା ।//ଏହା ସତ୍ୟ ଫେରାଇଥାଏ ଯଦି ଆରେରେ ତିନୋଟି ଭିନ୍ନ ଉପାଦାନ ଅଛି ଯାହା //triples_sum_to_zero ଏକ ଇଣ୍ଟେଜର ଆରେକୁ ଇନପୁଟ ଭାବରେ ଗ୍ରହଣ କରିଥାଏ ।// >>> triples_sum_to_zero(array(1, 3, 5, 0))
// false
// >>> triples_sum_to_zero(array(1, 3, -2, 1))
// true
// >>> triples_sum_to_zero(array(1, 2, 3, 7))
// false
// >>> triples_sum_to_zero(array(2, 4, -5, 3, 9, 7))
// true
// >>> triples_sum_to_zero(array(1))
// false
function triples_sum_to_zero($l) {
","function triples_sum_to_zero($l) {
    $n = count($l);
    if ($n < 3) return false;
    sort($l);
    for ($i = 0; $i < $n - 2; $i++) {
        $left = $i + 1;
        $right = $n - 1;
        while ($left < $right) {
            $sum = $l[$i] + $l[$left] + $l[$right];
            if ($sum === 0) {
                return true;
            } elseif ($sum < 0) {
                $left++;
            } else {
                $right--;
            }
        }
    }
    return false;
}","function candidate(...$args) {
    return triples_sum_to_zero(...$args);
}

function test(): void {
    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, -2, 1)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 5, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, -5, 3, 9, 7)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, 3, 5, -100)) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_41,ory_Orya,php,"<?php
//ଏହି ଫଙ୍କସନ ସେହି ଧକ୍କାର ସଂଖ୍ୟାକୁ ଆଉଟପୁଟ କରିଥାଏ ।//ସେମାନଙ୍କ ଗତିପଥରେ ଏପରି ଭାବେ ଗତି କରୁଛି ଯେପରି ସେମାନେ ପରସ୍ପର ସହ ଧକ୍କା ହୋଇନାହାନ୍ତି ।//କିନ୍ତୁ ଏହି କାରଗୁଡିକ ଅକଳନୀୟ ଦୃଢ଼ ଓ ଶକ୍ତିଶାଳୀ, ତେଣୁ ସେମାନେ ଆଗକୁ ବଢ଼ି ଚାଲିଥାନ୍ତି ।//ଯେତେବେଳେ ବାମରୁ ଡାହାଣକୁ ଯାଉଥିବା ଏକ କାର ବାମରୁ ଡାହାଣକୁ ଯାଉଥିବା ଏକ କାରକୁ ଧକ୍କା ଦେଇଥାଏ ।//ପରସ୍ପରକୁ. ସବୁ ଗାଡି ସମାନ ବେଗରେ ଗତି କରୁଛି. ଦୁଇଟି ଗାଡି ଧକ୍କା ହେବା କଥା କୁହାଯାଉଛି.//ଦୁଇଟି ଯାକ ଗାଡ଼ିର ଆରମ୍ଭ ବହୁତ ଦୂରରେ ଥିଲା ।//nଟି କାର ବାମରୁ ଡାହାଣକୁ ଯାଉଛନ୍ତି; ଏକା ସମୟରେ, nଟି କାରର ଭିନ୍ନ ସେଟ୍ //ଏକ ସଡ଼କ କଳ୍ପନା କରନ୍ତୁ ଯାହା ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସିଧା ଅସୀମ ଦୀର୍ଘ ରେଖା ଅଟେ ।function car_race_collision($n) {
","function car_race_collision($n) {
    // Each left-to-right moving car will collide with exactly one right-to-left moving car.
    // Therefore, the number of collisions is simply equal to the number of cars in one direction, i.e., n.
    return $n;
}","function candidate(...$args) {
    return car_race_collision(...$args);
}

function test(): void {
    if (candidate(2) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== 16) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 64) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 100) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_42,ory_Orya,php,"<?php
//1 ଦ୍ବାରା ବୃଦ୍ଧି କରାଯାଇଥିବା ଉପାଦାନ ସହିତ ଆରେ ଫେରାଇଥାଏ ।// >>> incr_list(array(1, 2, 3))
// array(2, 3, 4)
// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))
// array(6, 4, 6, 3, 4, 4, 10, 1, 124)
function incr_list($l) {
","function incr_list($l) {
    return array_map(function($item) {
        return $item + 1;
    }, $l);
}","function candidate(...$args) {
    return incr_list(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_43,ory_Orya,php,"<?php
//ସମୂହ ଶୂନ୍ୟ, ଅନ୍ୟଥା ମିଥ୍ୟା ।//ଏହା ସତ୍ୟ ଫେରାଇଥାଏ ଯଦି ଆରେରେ ଦୁଇଟି ଭିନ୍ନ ଉପାଦାନ ଅଛି ଯାହା //pairs_sum_to_zero ଏକ ଇଣ୍ଟେଜର ଆରେକୁ ଇନପୁଟ ଭାବରେ ଗ୍ରହଣ କରିଥାଏ ।// >>> pairs_sum_to_zero(array(1, 3, 5, 0))
// false
// >>> pairs_sum_to_zero(array(1, 3, -2, 1))
// false
// >>> pairs_sum_to_zero(array(1, 2, 3, 7))
// false
// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))
// true
// >>> pairs_sum_to_zero(array(1))
// false
function pairs_sum_to_zero($l) {
","function pairs_sum_to_zero($l) {
    $seen = [];
    foreach ($l as $num) {
        if (isset($seen[-$num])) {
            return true;
        }
        $seen[$num] = true;
    }
    return false;
}","function candidate(...$args) {
    return pairs_sum_to_zero(...$args);
}

function test(): void {
    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, -5, 3, 5, 7)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 4, 2, 31)) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_44,ory_Orya,php,"<?php
//ଆଧାର ସଂଖ୍ୟା ୧୦ରୁ କମ୍ ।//ପରିବର୍ତ୍ତନ ପରେ ଶୃଙ୍ଖଳ ପ୍ରତିନିଧିତ୍ୱକୁ ଫେରାଇଥାଏ ।//ନିବେଶ ସଂଖ୍ୟା x ର ସଂଖ୍ୟାଗତ ଆଧାରକୁ ଆଧାରରେ ପରିବର୍ତ୍ତନ କରନ୍ତୁ.// >>> change_base(8, 3)
// ""22""
// >>> change_base(8, 2)
// ""1000""
// >>> change_base(7, 2)
// ""111""
function change_base($x, $base) {
","function change_base($x, $base) {
    if ($base < 2 || $base > 9) {
        return false; // base must be between 2 and 9
    }
    
    $result = '';
    do {
        $remainder = $x % $base;
        $result = $remainder . $result;
        $x = intdiv($x, $base);
    } while ($x > 0);
    
    return $result;
}","function candidate(...$args) {
    return change_base(...$args);
}

function test(): void {
    if (candidate(8, 3) !== ""22"") { throw new Exception(""Test failed!""); }
    if (candidate(9, 3) !== ""100"") { throw new Exception(""Test failed!""); }
    if (candidate(234, 2) !== ""11101010"") { throw new Exception(""Test failed!""); }
    if (candidate(16, 2) !== ""10000"") { throw new Exception(""Test failed!""); }
    if (candidate(8, 2) !== ""1000"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 2) !== ""111"") { throw new Exception(""Test failed!""); }
    if (candidate(2, 3) !== ""2"") { throw new Exception(""Test failed!""); }
    if (candidate(3, 4) !== ""3"") { throw new Exception(""Test failed!""); }
    if (candidate(4, 5) !== ""4"") { throw new Exception(""Test failed!""); }
    if (candidate(5, 6) !== ""5"") { throw new Exception(""Test failed!""); }
    if (candidate(6, 7) !== ""6"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 8) !== ""7"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_45,ory_Orya,php,"<?php
//ଏକ ତ୍ରିଭୁଜ ପାଇଁ ଏକ ପାର୍ଶ୍ବ ଓ ଉଚ୍ଚ ରିଟର୍ଣ୍ଣ କ୍ଷେତ୍ରର ଲମ୍ବ ଦିଆଗଲା ।// >>> triangle_area(5, 3)
// 7.5
function triangle_area($a, $h) {
","function triangle_area($a, $h) {
    return 0.5 * $a * $h;
}","function candidate(...$args) {
    return triangle_area(...$args);
}

function test(): void {
    if (candidate(5, 3) !== 7.5) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2) !== 2.0) { throw new Exception(""Test failed!""); }
    if (candidate(10, 8) !== 40.0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_46,ory_Orya,php,"<?php
//ଦୟାକରି fib4 ସଂଖ୍ଯା କ୍ରମର n-ତମ ଉପାଦାନକୁ ଦକ୍ଷତାର ସହିତ ଗଣନା କରିବା ପାଇଁ ଏକ ଫଳନ ଲେଖନ୍ତୁ. ପୁନଃପୌନିକତା ବ୍ୟବହାର କରନ୍ତୁ ନାହିଁ.//ଫିବରୋମାଇନ୍ (ଏନ) -> ଫିବରୋମାଇନ୍ (ଏନ -1) + ଫିବରୋମାଇନ୍ (ଏନ -2) + ଫିବରୋମାଇନ୍ (ଏନ -3) + ଫିବରୋମାଇନ୍ (ଏନ -4) ।//ଫିବ୍ର 4 ({3) -> 0 //ଫିବ୍ର 4 ({2) -> 2 //fib4 ((1) -> 0 //fib4 ((0) -> 0 //Fib4 ସଂଖ୍ଯା କ୍ରମ ହେଉଛି Fibbonacci କ୍ରମ ପରି ଏକ କ୍ରମ ଯାହାକି ନିମ୍ନଲିଖିତ ପରିଭାଷିତ:// >>> fib4(5)
// 4
// >>> fib4(6)
// 8
// >>> fib4(7)
// 14
function fib4($n) {
","function fib4($n) {
    if ($n == 0 || $n == 1 || $n == 3) return 0;
    if ($n == 2) return 2;

    $fib4 = [0, 0, 2, 0];
    
    for ($i = 4; $i <= $n; $i++) {
        $fib4[$i % 4] = $fib4[0] + $fib4[1] + $fib4[2] + $fib4[3];
    }

    return $fib4[$n % 4];
}","function candidate(...$args) {
    return fib4(...$args);
}

function test(): void {
    if (candidate(5) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 28) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 104) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== 386) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_47,ory_Orya,php,"<?php
//ମାପଦଣ୍ଡରେ ଥିବା ଉପାଦାନଗୁଡ଼ିକର ମଧ୍ୟମାଂଶକୁ ଫେରାଇଥାଏ l. // >>> median(array(3, 1, 2, 4, 5))
// 3
// >>> median(array(-10, 4, 6, 1000, 10, 20))
// 15.0
function median($l) {
","function median($l) {
    sort($l); // Sort the array
    $count = count($l); // Get the count of the array's elements
    
    if ($count % 2 == 0) { // If even number of elements
        $middle1 = $l[$count / 2 - 1];
        $middle2 = $l[$count / 2];
        return ($middle1 + $middle2) / 2;
    } else { // If odd number of elements
        return $l[floor($count / 2)];
    }
}","function candidate(...$args) {
    return median(...$args);
}

function test(): void {
    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(""Test failed!""); }
    if (candidate(array(5)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_48,ory_Orya,php,"<?php
//ଦିଆଯାଇଥିବା ଷ୍ଟ୍ରିଙ୍ଗ୍ ଏକ ପାଲିଣ୍ଡ୍ରୋମ୍ କି ନୁହେଁ ଯାଞ୍ଚ କରେ // >>> is_palindrome("""")
// true
// >>> is_palindrome(""aba"")
// true
// >>> is_palindrome(""aaaaa"")
// true
// >>> is_palindrome(""zbcd"")
// false
function is_palindrome($text) {
","function is_palindrome($text) {
    // Remove any white space and convert to lowercase
    $text = strtolower(str_replace(' ', '', $text));
    
    // Get the reversed version of the text
    $reversedText = strrev($text);
    
    // Check if the text is the same as the reversed version
    return $text === $reversedText;
}","function candidate(...$args) {
    return is_palindrome(...$args);
}

function test(): void {
    if (candidate("""") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""aba"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaaa"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""zbcd"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""xywyx"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""xywyz"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""xywzx"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_49,ory_Orya,php,"<?php
//2^n ମଡୁଲୋ p କୁ ଫେରାଇଦିଅନ୍ତୁ (ସଂଖ୍ୟାନ ବିଷୟରେ ସଚେତନ ରୁହନ୍ତୁ) ।// >>> modp(3, 5)
// 3
// >>> modp(1101, 101)
// 2
// >>> modp(0, 101)
// 1
// >>> modp(3, 11)
// 8
// >>> modp(100, 101)
// 1
function modp($n, $p) {
","function modp($n, $p) {
    return pow(2, $n) % $p;
}","function candidate(...$args) {
    return modp(...$args);
}

function test(): void {
    if (candidate(3, 5) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(1101, 101) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(0, 101) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(3, 11) !== 8) { throw new Exception(""Test failed!""); }
    if (candidate(100, 101) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(30, 5) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(31, 5) !== 3) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_51,ory_Orya,php,"<?php
//remove_vowels ହେଉଛି ଏକ ଫଙ୍କସନ୍ ଯାହାକି ସ୍ୱରଗୁଡ଼ିକ ବିନା string କୁ ନେଇଥାଏ ଏବଂ ଫେରାଇଥାଏ ।// >>> remove_vowels("""")
// """"
// >>> remove_vowels(""abcdef"")
// ""bcdf""
// >>> remove_vowels(""aaaaa"")
// """"
// >>> remove_vowels(""aaBAA"")
// ""B""
// >>> remove_vowels(""zbcd"")
// ""zbcd""
function remove_vowels($text) {
","function remove_vowels($text) {
    return preg_replace('/[aeiouAEIOU]/', '', $text);
}","function candidate(...$args) {
    return remove_vowels(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""abcdef\nghijklm"") !== ""bcdf\nghjklm"") { throw new Exception(""Test failed!""); }
    if (candidate(""fedcba"") !== ""fdcb"") { throw new Exception(""Test failed!""); }
    if (candidate(""eeeee"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""acBAA"") !== ""cB"") { throw new Exception(""Test failed!""); }
    if (candidate(""EcBOO"") !== ""cB"") { throw new Exception(""Test failed!""); }
    if (candidate(""ybcd"") !== ""ybcd"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_52,ory_Orya,php,"<?php
//ଯଦି ସରଳରେଖା l ର ସମସ୍ତ ସଂଖ୍ୟା ସୀମା t ତଳେ ଥାଏ ତେବେ true କୁ ଫେରାଇଥାଏ ।// >>> below_threshold(array(1, 2, 4, 10), 100)
// true
// >>> below_threshold(array(1, 20, 4, 10), 5)
// false
function below_threshold($l, $t) {
","function below_threshold($l, $t) {
    foreach ($l as $number) {
        if ($number >= $t) {
            return false;
        }
    }
    return true;
}","function candidate(...$args) {
    return below_threshold(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 4, 10), 100) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10), 5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10), 21) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10), 22) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 8, 4, 10), 11) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 8, 4, 10), 10) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_53,ory_Orya,php,"<?php
//ଦୁଇଟି ସଂଖ୍ୟା x ଓ y କୁ ମିଶାନ୍ତୁ // >>> add(2, 3)
// 5
// >>> add(5, 7)
// 12
function add($x, $y) {
","return $x + $y;
}","function candidate(...$args) {
    return add(...$args);
}

function test(): void {
    if (candidate(0, 1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(1, 0) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(2, 3) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(5, 7) !== 12) { throw new Exception(""Test failed!""); }
    if (candidate(7, 5) !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_54,ory_Orya,php,"<?php
//ଦୁଇଟି ଶବ୍ଦର ଅକ୍ଷର ସମାନ କି ନାହିଁ ଦେଖନ୍ତୁ ।// >>> same_chars(""eabcdzzzz"", ""dddzzzzzzzddeddabc"")
// true
// >>> same_chars(""abcd"", ""dddddddabc"")
// true
// >>> same_chars(""dddddddabc"", ""abcd"")
// true
// >>> same_chars(""eabcd"", ""dddddddabc"")
// false
// >>> same_chars(""abcd"", ""dddddddabce"")
// false
// >>> same_chars(""eabcdzzzz"", ""dddzzzzzzzddddabc"")
// false
function same_chars($s0, $s1) {
","function same_chars($s0, $s1) {
    $countChars = function($str) {
        $charCount = [];
        for ($i = 0; $i < strlen($str); $i++) {
            $char = $str[$i];
            if (!isset($charCount[$char])) {
                $charCount[$char] = 0;
            }
            $charCount[$char]++;
        }
        return $charCount;
    };

    $countS0 = $countChars($s0);
    $countS1 = $countChars($s1);

    foreach ($countS0 as $char => $count) {
        if (!isset($countS1[$char])) {
            return false;
        }
    }

    foreach ($countS1 as $char => $count) {
        if (!isset($countS0[$char])) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return same_chars(...$args);
}

function test(): void {
    if (candidate(""eabcdzzzz"", ""dddzzzzzzzddeddabc"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"", ""dddddddabc"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""dddddddabc"", ""abcd"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""eabcd"", ""dddddddabc"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"", ""dddddddabcf"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""eabcdzzzz"", ""dddzzzzzzzddddabc"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""aabb"", ""aaccc"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_55,ory_Orya,php,"<?php
//n-ତମ ଫିବୋନାସୀ ସଂଖ୍ୟାକୁ ଫେରାଇଦେବେ. // >>> fib(10)
// 55
// >>> fib(1)
// 1
// >>> fib(8)
// 21
function fib($n) {
","function fib($n) {
    if ($n <= 0) {
        return 0;
    } elseif ($n === 1) {
        return 1;
    }
    
    $a = 0;
    $b = 1;
    
    for ($i = 2; $i <= $n; $i++) {
        $temp = $a + $b;
        $a = $b;
        $b = $temp;
    }
    
    return $b;
}","function candidate(...$args) {
    return fib(...$args);
}

function test(): void {
    if (candidate(10) !== 55) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 21) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== 89) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== 144) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_56,ory_Orya,php,"<?php
//ଯଦି ପ୍ରତ୍ୟେକ ଖୋଲିବା ବ୍ରାକେଟରେ ସମାନ ବନ୍ଦ ବ୍ରାକେଟ ଥାଏ ତେବେ true ଫେରାଇଦେବେ//brackets ହେଉଛି ""<"" ଏବଂ "">"" ର ଏକ ଷ୍ଟ୍ରିଙ୍ଗ୍.// >>> correct_bracketing(""<"")
// false
// >>> correct_bracketing(""<>"")
// true
// >>> correct_bracketing(""<<><>>"")
// true
// >>> correct_bracketing(""><<>"")
// false
function correct_bracketing($brackets) {
","function correct_bracketing($brackets) {
    $balance = 0;
    $length = strlen($brackets);

    for ($i = 0; $i < $length; $i++) {
        if ($brackets[$i] === '<') {
            $balance++;
        } else if ($brackets[$i] === '>') {
            $balance--;
        }

        // If at any point the balance is negative, there are more closing than opening brackets
        if ($balance < 0) {
            return false;
        }
    }

    // If balance is zero, all opening brackets have been closed properly
    return $balance === 0;
}","function candidate(...$args) {
    return correct_bracketing(...$args);
}

function test(): void {
    if (candidate(""<>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<<><>>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<><>><>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<<><><>><>><<><><<>>>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<<<><>>>>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""><<>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<<<<"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("">"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<<>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<><>><>><<>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<><>><>>><>"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_57,ory_Orya,php,"<?php
//true କୁ ଫେରାଇଦିଏ, ଯଦି ଆରେ ଉପାଦାନଗୁଡ଼ିକ ଏକକ ଭାବରେ ବୃଦ୍ଧି କିମ୍ବା ହ୍ରାସ ହୁଏ ।// >>> monotonic(array(1, 2, 4, 20))
// true
// >>> monotonic(array(1, 20, 4, 10))
// false
// >>> monotonic(array(4, 1, 0, -10))
// true
function monotonic($l) {
","function monotonic($l) {
    if (count($l) <= 1) {
        return true;
    }

    $isIncreasing = true;
    $isDecreasing = true;

    for ($i = 1; $i < count($l); $i++) {
        if ($l[$i] > $l[$i - 1]) {
            $isDecreasing = false;
        }
        if ($l[$i] < $l[$i - 1]) {
            $isIncreasing = false;
        }
        if (!$isIncreasing && !$isDecreasing) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return monotonic(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_58,ory_Orya,php,"<?php
//ଦୁଇଟି ସରଳୀକରଣ ପାଇଁ ସର୍ଟ ହୋଇଥିବା ଅନନ୍ୟ ସାଧାରଣ ଉପାଦାନଗୁଡ଼ିକୁ ଫେରାଇଥାଏ.// >>> common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))
// array(1, 5, 653)
// >>> common(array(5, 3, 2, 8), array(3, 2))
// array(2, 3)
function common($l1, $l2) {
","function common($l1, $l2) {
    $intersection = array_intersect($l1, $l2);
    $unique = array_unique($intersection);
    sort($unique);
    return $unique;
}","function candidate(...$args) {
    return common(...$args);
}

function test(): void {
    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_59,ory_Orya,php,"<?php
//n ର ସବୁଠାରୁ ବଡ ଅକ୍ଷର ଫ୍ୟାକ୍ଟର ଫେରାଇ ଦିଅନ୍ତୁ _ n > 1 କୁ ଧରି ନିଅନ୍ତୁ ଏବଂ ଅକ୍ଷର ନୁହେଁ _// >>> largest_prime_factor(13195)
// 29
// >>> largest_prime_factor(2048)
// 2
function largest_prime_factor($n) {
","function largest_prime_factor($n) {
    $largestPrime = -1;

    // Divide $n by 2 until it's odd
    while ($n % 2 === 0) {
        $largestPrime = 2;
        $n /= 2;
    }

    // Check for odd factors from 3 to sqrt(n)
    for ($i = 3; $i * $i <= $n; $i += 2) {
        while ($n % $i === 0) {
            $largestPrime = $i;
            $n /= $i;
        }
    }

    // If $n is a prime number greater than 2
    if ($n > 2) {
        $largestPrime = $n;
    }

    return $largestPrime;
}","function candidate(...$args) {
    return largest_prime_factor(...$args);
}

function test(): void {
    if (candidate(15) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(27) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(63) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(330) !== 11) { throw new Exception(""Test failed!""); }
    if (candidate(13195) !== 29) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_60,ory_Orya,php,"<?php
//sum_to_n ହେଉଛି ଏକ ଫଙ୍କସନ୍ ଯାହା 1 ରୁ n ପର୍ଯ୍ୟନ୍ତ ସଂଖ୍ୟାଗୁଡିକୁ ଯୋଗ କରିଥାଏ ।// >>> sum_to_n(30)
// 465
// >>> sum_to_n(100)
// 5050
// >>> sum_to_n(5)
// 15
// >>> sum_to_n(10)
// 55
// >>> sum_to_n(1)
// 1
function sum_to_n($n) {
","function sum_to_n($n) {
    return ($n * ($n + 1)) / 2;
}","function candidate(...$args) {
    return sum_to_n(...$args);
}

function test(): void {
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== 21) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== 66) { throw new Exception(""Test failed!""); }
    if (candidate(30) !== 465) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 5050) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_61,ory_Orya,php,"<?php
//ଯଦି ପ୍ରତ୍ୟେକ ଖୋଲିବା ବ୍ରାକେଟରେ ସମାନ ବନ୍ଦ ବ୍ରାକେଟ ଥାଏ ତେବେ true ଫେରାଇଦେବେ//brackets ହେଉଛି ""("" ଏବଂ """") ର ଏକ ଷ୍ଟ୍ରିଙ୍ଗ୍.// >>> correct_bracketing(""("")
// false
// >>> correct_bracketing(""()"")
// true
// >>> correct_bracketing(""(()())"")
// true
// >>> correct_bracketing("")(()"")
// false
function correct_bracketing($brackets) {
","function correct_bracketing($brackets) {
    $balance = 0;
    $n = strlen($brackets);
    
    for ($i = 0; $i < $n; $i++) {
        if ($brackets[$i] === '(') {
            $balance++;
        } elseif ($brackets[$i] === ')') {
            $balance--;
        }
        
        if ($balance < 0) {
            return false;
        }
    }
    
    return $balance === 0;
}","function candidate(...$args) {
    return correct_bracketing(...$args);
}

function test(): void {
    if (candidate(""()"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""(()())"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""()()(()())()"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""()()((()()())())(()()(()))"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""((()())))"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("")(()"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""("") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""(((("") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("")"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""(()"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""()()(()())())(()"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""()()(()())()))()"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_62,ory_Orya,php,"<?php
//ଏହି ବହୁପଦଟିର ସମକକ୍ଷକୁ ସେହି ସମାନ ରୂପରେ ଫେରାଇଦିଅନ୍ତୁ.//xs[0] + xs[1] * x + xs[2] * x^2 + ....  ଏହା ଏକ ବର୍ଗର ଏକକ ଅଟେ ।//xs ଏକ ବହୁପଦ ର ଗୁଣକ କୁ ଦର୍ଶାଏ.// >>> derivative(array(3, 1, 2, 4, 5))
// array(1, 4, 12, 20)
// >>> derivative(array(1, 2, 3))
// array(2, 6)
function derivative($xs) {
","function derivative($xs) {
    $derivative = [];
    for ($i = 1; $i < count($xs); $i++) {
        $derivative[] = $xs[$i] * $i;
    }
    return $derivative;
}","function candidate(...$args) {
    return derivative(...$args);
}

function test(): void {
    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_63,ory_Orya,php,"<?php
//ଦୟାକରି ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଦ୍ବାରା ଫିବିବ ସଂଖ୍ଯା କ୍ରମର n-ତମ ଉପାଦାନକୁ ସଠିକ ଭାବରେ ଗଣନା କରିହେବ ।//ଫିବିବ (n) == ଫିବିବ (n-1) + ଫିବିବ (n-2) + ଫିବିବ (n-3) ।//ଫିବିବ (୨) == ୧ //ଫିବିବ (୧) == ୦ //ଫିବିବ (୦) == ୦ //ଫିବୋନାଚି କ୍ରମରେ ସମାନ କ୍ରମରେ ଫିବୋନାଚି କ୍ରମରେ ସମାନ କ୍ରମରେ ନିମ୍ନଲିଖିତ ପରିଭାଷା ଅଛି:// >>> fibfib(1)
// 0
// >>> fibfib(5)
// 4
// >>> fibfib(8)
// 24
function fibfib($n) {
","function fibfib($n) {
    if ($n === 0) return 0;
    if ($n === 1) return 0;
    if ($n === 2) return 1;

    $fibfib_values = [0, 0, 1];

    for ($i = 3; $i <= $n; $i++) {
        $fibfib_values[$i] = $fibfib_values[$i - 1] + $fibfib_values[$i - 2] + $fibfib_values[$i - 3];
    }

    return $fibfib_values[$n];
}","function candidate(...$args) {
    return fibfib(...$args);
}

function test(): void {
    if (candidate(2) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 24) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 81) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== 274) { throw new Exception(""Test failed!""); }
    if (candidate(14) !== 927) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_64,ory_Orya,php,"<?php
//ଉଦାହରଣ://ସ୍ୱର, କିନ୍ତୁ କେବଳ ଯେତେବେଳେ ଏହା ଦିଆଯାଇଥିବା ଶବ୍ଦର ଶେଷରେ ଥାଏ ।//ଏହି କ୍ଷେତ୍ରରେ ସ୍ୱରଗୁଡ଼ିକ ହେଉଛି 'a', 'e', 'i', 'o', 'u' । ଏଠାରେ 'y' ମଧ୍ୟ ଏକ //ଗୋଟିଏ ଶବ୍ଦକୁ ଇନପୁଟ୍ ଭାବରେ ବ୍ୟବହାର କରି, ସେହି ବାକ୍ୟଖଣ୍ଡରେ ଥିବା ସ୍ୱରଗୁଡ଼ିକର ସଂଖ୍ୟାକୁ ଫେରାଇଥାଏ.//ଏକ ଫଙ୍କସନ ଲେଖନ୍ତୁ, ଯେଉଁଥିରେ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ୍ ଅଛି, ଯାହା // >>> vowels_count(""abcde"")
// 2
// >>> vowels_count(""ACEDY"")
// 3
function vowels_count($s) {
","function vowels_count($s) {
    $vowels = ['a', 'e', 'i', 'o', 'u'];
    $count = 0;
    $length = strlen($s);
    
    for ($i = 0; $i < $length; $i++) {
        $char = strtolower($s[$i]);
        if (in_array($char, $vowels)) {
            $count++;
        }
        if ($char === 'y' && $i === $length - 1) {
            $count++;
        }
    }
    
    return $count;
}","function candidate(...$args) {
    return vowels_count(...$args);
}

function test(): void {
    if (candidate(""abcde"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""Alone"") !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(""key"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""bye"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""keY"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""bYe"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""ACEDY"") !== 3) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_65,ory_Orya,php,"<?php
//ଯଦି shift > ଅଙ୍କ ସଂଖ୍ୟା, ତେବେ ଅଙ୍କ ସଂଖ୍ୟାକୁ ଫେରାଇଦେବେ ।//ଏବଂ ଫଳାଫଳକୁ ଗୋଟିଏ ଧାଡ଼ି ଭାବରେ ଫେରାଇଥାଏ.//ସର୍କୁଲାର ଭାବରେ x ର ଅଙ୍କକୁ ଘୁଞ୍ଚାଇ, ଅଙ୍କକୁ ଘୁଞ୍ଚାଇ // >>> circular_shift(12, 1)
// ""21""
// >>> circular_shift(12, 2)
// ""12""
function circular_shift($x, $shift) {
","function circular_shift($x, $shift) {
    $digits = strval($x);
    $num_digits = strlen($digits);

    if ($shift > $num_digits) {
        return strrev($digits);
    }

    $shift = $shift % $num_digits;
    if ($shift == 0) {
        return $digits;
    }

    $right_part = substr($digits, -$shift);
    $left_part = substr($digits, 0, $num_digits - $shift);

    return $right_part . $left_part;
}","function candidate(...$args) {
    return circular_shift(...$args);
}

function test(): void {
    if (candidate(100, 2) !== ""001"") { throw new Exception(""Test failed!""); }
    if (candidate(12, 2) !== ""12"") { throw new Exception(""Test failed!""); }
    if (candidate(97, 8) !== ""79"") { throw new Exception(""Test failed!""); }
    if (candidate(12, 1) !== ""21"") { throw new Exception(""Test failed!""); }
    if (candidate(11, 101) !== ""11"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_66,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏଏସସିଆଇଆଇ କୋଡ ।//ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ଷ୍ଟ୍ରିଙ୍ଗକୁ ଇନପୁଟ ଭାବରେ ଗ୍ରହଣ କରେ ଏବଂ କେବଳ ଉପର ଅକ୍ଷରର ସମୁଦାୟ ଫେରାଇଥାଏ' //କାର୍ଯ୍ୟ // >>> digitSum("""")
// 0
// >>> digitSum(""abAB"")
// 131
// >>> digitSum(""abcCd"")
// 67
// >>> digitSum(""helloE"")
// 69
// >>> digitSum(""woArBld"")
// 131
// >>> digitSum(""aAaaaXa"")
// 153
function digitSum($s) {
","function digitSum($s) {
    $sum = 0;
    for ($i = 0; $i < strlen($s); $i++) {
        if (ctype_upper($s[$i])) {
            $sum += ord($s[$i]);
        }
    }
    return $sum;
}","function candidate(...$args) {
    return digitSum(...$args);
}

function test(): void {
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""abAB"") !== 131) { throw new Exception(""Test failed!""); }
    if (candidate(""abcCd"") !== 67) { throw new Exception(""Test failed!""); }
    if (candidate(""helloE"") !== 69) { throw new Exception(""Test failed!""); }
    if (candidate(""woArBld"") !== 131) { throw new Exception(""Test failed!""); }
    if (candidate(""aAaaaXa"") !== 153) { throw new Exception(""Test failed!""); }
    if (candidate("" How are yOu?"") !== 151) { throw new Exception(""Test failed!""); }
    if (candidate(""You arE Very Smart"") !== 327) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_67,ory_Orya,php,"<?php
//ଏକ୍ସାମ୍ବଲ ପାଇଁ: //ବାସ୍କେଟରେ ଥିବା ଆମ୍ବ ଫଳର ସଂଖ୍ୟାକୁ ଫେରାଇବ ।//ଆଳୁ ଓ ଆପଲ୍ ଏବଂ ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଯାହା ଫଳଗୁଡ଼ିକର ସମୁଦାୟ ସଂଖ୍ୟାକୁ ପ୍ରତିନିଧିତ୍ୱ କରେ _//ଆପଲ୍, କମଳା, ଏବଂ ଆମ୍ବ ଫଳ.//ଫଳ ବାସ୍କେଟରେ ବଣ୍ଟନ କରା ଯାଇଥିବା ଫଳ ଏହି ବାସ୍କେଟରେ ଅଛି ।//ଏହି କାମରେ, ଆପଣଙ୍କୁ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଦିଆଯିବ ଯାହା ଆପଲ୍ ଓ କମଳା ସଂଖ୍ୟାକୁ ପ୍ରତିନିଧିତ୍ୱ କରିବ // >>> fruit_distribution(""5 apples and 6 oranges"", 19)
// 8
// >>> fruit_distribution(""0 apples and 1 oranges"", 3)
// 2
// >>> fruit_distribution(""2 apples and 3 oranges"", 100)
// 95
// >>> fruit_distribution(""100 apples and 1 oranges"", 120)
// 19
function fruit_distribution($s, $n) {
","function fruit_distribution($s, $n) {
    // Extract numbers from the string using regular expression
    preg_match_all('!\d+!', $s, $matches);
    
    // Find out number of apples and oranges from the matches
    $apples = $matches[0][0];
    $oranges = $matches[0][1];
    
    // Calculate total mangoes
    $total_apples_and_oranges = $apples + $oranges;
    $mangoes = $n - $total_apples_and_oranges;
    
    return $mangoes;
}

// Example usage:
echo fruit_distribution(""5 apples and 6 oranges"", 19); // Output: 8","function candidate(...$args) {
    return fruit_distribution(...$args);
}

function test(): void {
    if (candidate(""5 apples and 6 oranges"", 19) !== 8) { throw new Exception(""Test failed!""); }
    if (candidate(""5 apples and 6 oranges"", 21) !== 10) { throw new Exception(""Test failed!""); }
    if (candidate(""0 apples and 1 oranges"", 3) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""1 apples and 0 oranges"", 3) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""2 apples and 3 oranges"", 100) !== 95) { throw new Exception(""Test failed!""); }
    if (candidate(""2 apples and 3 oranges"", 5) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""1 apples and 100 oranges"", 120) !== 19) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_68,ory_Orya,php,"<?php
//ଉଦାହରଣ 1: //ଯଦି କୌଣସି ଯୁଗ୍ମ ମୂଲ୍ୟ ନଥାଏ କିମ୍ବା ଦିଆଯାଇଥିବା ସରଳୀକୃତ ଶୂନ୍ୟ ହୋଇଥାଏ, ତେବେ ଫେରାଇଦେବେ [].//ଚୋରି ହୋଇଥିବା ନୋଡକୁ ଏକ ଆରେରେ ଫେରାଇଦିଆଯିବ, [ smalest_value, ଏହାର ସୂଚକାଙ୍କ ], //ଯଦି ଏକାଧିକ ନୋଡ ସମାନ ସର୍ବନିମ୍ନ ଯୁଗ୍ମ ମୂଲ୍ୟ ସହିତ ମିଳିଥାଏ ତେବେ ନୋଡକୁ ଫେରାଇଥାଏ ଯାହାର ସର୍ବନିମ୍ନ ସୂଚକାଙ୍କ ଅଛି ।//ଚୋରା ନୋଡଟି ସବୁଠାରୁ ଛୋଟ ଯୁଗ୍ମ ମୂଲ୍ୟର ନୋଡ ହେବା ଉଚିତ ।//ଆପଣଙ୍କର କାମ ହେଉଛି ଗୋଟିଏ ନୋଡକୁ କାଢ଼ି ତାକୁ ଫେରାଇ ଦେବା ।//""ଏକ ବୃକ୍ଷର ଶାଖାକୁ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଏକ ସରଳୀକରଣ ଦିଆଯାଇଥାଏ ଯାହାର ନନ୍-ନଗେଟିଭ୍ ଇଣ୍ଟେଜର ନୋଡ ଅଛି // >>> pluck(array(4, 2, 3))
// array(2, 1)
// Explanation: 2 has the smallest even value, and 2 has the smallest index.
// Example 2:
// >>> pluck(array(1, 2, 3))
// array(2, 1)
// Explanation: 2 has the smallest even value, and 2 has the smallest index.
// Example 3:
// >>> pluck(array())
// array()
// Example 4:
// >>> pluck(array(5, 0, 3, 0, 4, 2))
// array(0, 1)
// Explanation: 0 is the smallest value, but  there are two zeros,
// so we will choose the first zero, which has the smallest index.
// Constraints:
// * 1 <= nodes.length <= 10000
// * 0 <= node.value
function pluck($arr) {
","function pluck($arr) {
    $smallestEven = null;
    $smallestIndex = null;

    foreach ($arr as $index => $value) {
        if ($value % 2 == 0) {
            if ($smallestEven === null || $value < $smallestEven) {
                $smallestEven = $value;
                $smallestIndex = $index;
            }
        }
    }

    return $smallestEven === null ? [] : [$smallestEven, $smallestIndex];
}","function candidate(...$args) {
    return pluck(...$args);
}

function test(): void {
    if (candidate(array(4, 2, 3)) !== array(2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3)) !== array(2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 0, 3, 0, 4, 2)) !== array(0, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 0, 5, 3)) !== array(0, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 4, 8, 4, 8)) !== array(4, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 6, 7, 1)) !== array(6, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 9, 7, 1)) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_69,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଯଦି ଏପରି କୌଣସି ମୂଲ୍ୟ ନଥାଏ, ତେବେ -1 ଫେରାଇଦେବେ.//ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ବାରମ୍ବାରତା ହେଉଛି ଏହା ଧାଡ଼ିରେ ଦେଖାଯାଉଥିବା ସମୟର ସଂଖ୍ୟା ।//ଶୂନ, ଏବଂ ଏହାର ଫ୍ରିକ୍ୱେନ୍ସି ନିଜେ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ମୂଲ୍ୟ ଠାରୁ ଅଧିକ କିମ୍ବା ସମାନ ।//ଆପଣଙ୍କୁ ଧନାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ଏକ ଅଣ-ଖାଲି ଧାରା ଦିଆ ଯାଇଛି. ସବୁଠାରୁ ବଡ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଫେରାଇ ଦିଅନ୍ତୁ ଯାହା  ଠାରୁ ବଡ// >>> search(array(4, 1, 2, 2, 3, 1))
// 2
// >>> search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))
// 3
// >>> search(array(5, 5, 4, 4, 4))
// -1
function search($lst) {
","function search($lst) {
    // Create an associative array to store the frequencies of each integer
    $frequency = array_count_values($lst);

    // Initialize the result to -1 (to be returned if no valid integer is found)
    $result = -1;

    // Iterate over the frequency array
    foreach ($frequency as $number => $count) {
        // Check if the integer meets the criteria
        if ($number <= $count && $number > $result) {
            $result = $number;
        }
    }

    return $result;
}","function candidate(...$args) {
    return search(...$args);
}

function test(): void {
    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 3)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(10)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_70,ory_Orya,php,"<?php
//ଉଦାହରଣ://ତାପରେ ବାକି ସଂଖ୍ୟାର ସର୍ବାଧିକ, ତାପରେ ସର୍ବନିମ୍ନ, ଏବଂ ଏହିପରି ଭାବରେ _//ଅଜବ ସର୍ଟ କରିବା, ଯେତେବେଳେ ଆପଣ ସର୍ବନିମ୍ନ ମୂଲ୍ୟ ସହିତ ଆରମ୍ଭ କରନ୍ତି, //ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ସରଳୀକୃତ ଧାରାକୁ ଦେଇ, ଅଜବ କ୍ରମରେ ସରଳୀକୃତ ଧାରାକୁ ଫେରାଇବ.// >>> strange_sort_list(array(1, 2, 3, 4))
// array(1, 4, 2, 3)
// >>> strange_sort_list(array(5, 5, 5, 5))
// array(5, 5, 5, 5)
// >>> strange_sort_list(array())
// array()
function strange_sort_list($lst) {
","function strange_sort_list($lst) {
    $result = array();
    sort($lst); // Sort the array in ascending order
    
    while (!empty($lst)) {
        // Take the first (minimum) element
        $result[] = array_shift($lst);
        
        // If there are still elements left, take the last (maximum) element
        if (!empty($lst)) {
            $result[] = array_pop($lst);
        }
    }
    
    return $result;
}","function candidate(...$args) {
    return strange_sort_list(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(111111)) !== array(111111)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_71,ory_Orya,php,"<?php
//ଉଦାହରଣ://ତୃତୀୟ ପକ୍ଷ ଅପେକ୍ଷା ଅଧିକ ।//ତିନୋଟି ପାର୍ଶ୍ବ ଏକ ବୈଧ ତ୍ରିଭୁଜ ସୃଷ୍ଟି କରେ ଯେତେବେଳେ କୌଣସି ଦୁଇଟି ପାର୍ଶ୍ବ ର ସମୁଦାୟ ଅଧିକ ହୋଇଥାଏ //ଅନ୍ୟଥା ଫେରସ୍ତ -1 //ତ୍ରିଭୁଜକୁ ଦୁଇ ଦଶମିକ ବିନ୍ଦୁରେ ଗୋଲ କରନ୍ତୁ ଯଦି ତିନୋଟି ପାର୍ଶ୍ବ ଏକ ବୈଧ ତ୍ରିଭୁଜ ଗଠନ କରନ୍ତି ।//ଏକ ତ୍ରିଭୁଜର ତିନି ପାର୍ଶ୍ବ ର ଲମ୍ବ ଦିଆଗଲା.  ର କ୍ଷେତ୍ରଫଳ ଫେରେଇ ନିଅନ୍ତୁ.// >>> triangle_area(3, 4, 5)
// 6.0
// >>> triangle_area(1, 2, 10)
// -1
function triangle_area($a, $b, $c) {
","function triangle_area($a, $b, $c) {
    // Check if the sides form a valid triangle
    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {
        // Calculate semi-perimeter
        $s = ($a + $b + $c) / 2;
        // Calculate the area using Heron's formula
        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));
        // Return the area rounded to 2 decimal places
        return round($area, 2);
    } else {
        return -1; // Not a valid triangle
    }
}","function candidate(...$args) {
    return triangle_area(...$args);
}

function test(): void {
    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 10) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 3) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(""Test failed!""); }
    if (candidate(2, 6, 3) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 10) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_72,ory_Orya,php,"<?php
//ଉଦାହରଣ://ବସ୍ତୁ q ଉଡିଯିବ ଯଦି ଏହା ସନ୍ତୁଳିତ (ଏହା ଏକ ପାଲିଣ୍ଡ୍ରୋମିକ ଆରେ) ଏବଂ ଏହାର ଉପାଦାନଗୁଡ଼ିକର ସମୁଦାୟ ସର୍ବାଧିକ ସମ୍ଭାବ୍ୟ ଓଜନ w ଠାରୁ କମ୍ କିମ୍ବା ସମାନ ହୋଇଥାଏ ।//ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ସତ୍ୟ ଫେରାଇଥାଏ ଯଦି ବସ୍ତୁ q ଉଡିଯିବ, ଏବଂ ଅନ୍ୟଥା ମିଥ୍ୟା _// >>> will_it_fly(array(1, 2), 5)
// false
// # 1+2 is less than the maximum possible weight, but it's unbalanced.
// >>> will_it_fly(array(3, 2, 3), 1)
// false
// # it's balanced, but 3+2+3 is more than the maximum possible weight.
// >>> will_it_fly(array(3, 2, 3), 9)
// true
// # 3+2+3 is less than the maximum possible weight, and it's balanced.
// >>> will_it_fly(array(3), 5)
// true
// # 3 is less than the maximum possible weight, and it's balanced.
function will_it_fly($q, $w) {
","function will_it_fly($q, $w) {
    // Check if the array is palindromic
    if ($q !== array_reverse($q)) {
        return false;
    }
    
    // Calculate the sum of elements in the array
    $sum = array_sum($q);
    
    // Check if the sum is less than or equal to the maximum possible weight
    return $sum <= $w;
}","function candidate(...$args) {
    return will_it_fly(...$args);
}

function test(): void {
    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2), 5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(3), 5) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 3), 1) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3), 6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(5), 5) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_73,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଗୋଟିଏ ପରିବର୍ତ୍ତନରେ ଆପଣ ଗୋଟିଏ ଉପାଦାନକୁ ଅନ୍ୟ କୌଣସି ଉପାଦାନରେ ବଦଳାଇ ପାରିବେ ।//ଏକ ପାଲିଣ୍ଡ୍ରୋମିକ ଆରେ ହେଉଛି ଏକ ଆରେ ଯାହା //ଏକ ସରଳୀକୃତ ସମୁଦାୟ ସଂଖ୍ୟା arr ଦିଆଗଲା, ସର୍ବନିମ୍ନ ଉପାଦାନ ସଂଖ୍ୟା ଖୋଜନ୍ତୁ ଯାହା // >>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))
// 4
// >>> smallest_change(array(1, 2, 3, 4, 3, 2, 2))
// 1
// >>> smallest_change(array(1, 2, 3, 2, 1))
// 0
function smallest_change($arr) {
","function smallest_change($arr) {
    $n = count($arr);
    $changes = 0;

    for ($i = 0; $i < $n / 2; $i++) {
        if ($arr[$i] !== $arr[$n - $i - 1]) {
            $changes++;
        }
    }

    return $changes;
}","function candidate(...$args) {
    return smallest_change(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 5, 4, 7, 9, 6)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 3, 2, 2)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 2)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 4, 2)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 2, 1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 1, 1, 3)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 1)) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_74,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଯଦି ଦୁଇଟି ସରଳରେଖାରେ ସମାନ ସଂଖ୍ୟକ ଅକ୍ଷର ଥାଏ, ତେବେ ପ୍ରଥମ ସରଳୀକୁ ଫେରାଇଦିଅନ୍ତୁ.//ଅନ୍ୟ ଆରେରେ ଥିବା ସମସ୍ତ ଷ୍ଟ୍ରିଙ୍ଗରେ ଥିବା ଚାରର ମୋଟ ସଂଖ୍ୟା ଅନ୍ୟ ଆରେରେ ଥିବା ଚାର ଠାରୁ କମ୍ ।//ଗୋଟିଏ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଦୁଇଟି ଧାଡିର ଧାଡି ଗ୍ରହଣ କରେ ଏବଂ ଧାଡିକୁ ଫେରାଇଥାଏ ଯାହାର // >>> total_match(array(), array())
// array()
// >>> total_match(array(""hi"", ""admin""), array(""hI"", ""Hi""))
// array(""hI"", ""Hi"")
// >>> total_match(array(""hi"", ""admin""), array(""hi"", ""hi"", ""admin"", ""project""))
// array(""hi"", ""admin"")
// >>> total_match(array(""hi"", ""admin""), array(""hI"", ""hi"", ""hi""))
// array(""hI"", ""hi"", ""hi"")
// >>> total_match(array(""4""), array(""1"", ""2"", ""3"", ""4"", ""5""))
// array(""4"")
function total_match($lst1, $lst2) {
","function total_match($lst1, $lst2) {
    $countChars = function($arr) {
        $totalChars = 0;
        foreach ($arr as $str) {
            $totalChars += strlen($str);
        }
        return $totalChars;
    };

    $chars1 = $countChars($lst1);
    $chars2 = $countChars($lst2);

    if ($chars1 < $chars2) {
        return $lst1;
    } else {
        return $lst2;
    }
}","function candidate(...$args) {
    return total_match(...$args);
}

function test(): void {
    if (candidate(array(), array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hi"", ""hi"")) !== array(""hi"", ""hi"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hi"", ""hi"", ""admin"", ""project"")) !== array(""hi"", ""admin"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""4""), array(""1"", ""2"", ""3"", ""4"", ""5"")) !== array(""4"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hI"", ""Hi"")) !== array(""hI"", ""Hi"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hI"", ""hi"", ""hi"")) !== array(""hI"", ""hi"", ""hi"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hI"", ""hi"", ""hii"")) !== array(""hi"", ""admin"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(), array(""this"")) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""this""), array()) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_75,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଜାଣିଛୁ ଯେ (a) 100 ରୁ କମ ଅଟେ ।//ଏବଂ ଅନ୍ୟଥା ମିଥ୍ୟା ।//ଗୋଟିଏ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ସତ୍ୟ ଫେରାଇବ ଯଦି ଦିଆଯାଇଥିବା ସଂଖ୍ୟାଟି 3ଟି ଅଶୂର ସଂଖ୍ୟା ଗୁଡ଼ିକର ଗୁଣନ // >>> is_multiply_prime(30)
// true
// 30 = 2 * 3 * 5
function is_multiply_prime($a) {
","function is_prime($num) {
    if ($num <= 1) return false;
    if ($num <= 3) return true;
    if ($num % 2 == 0 || $num % 3 == 0) return false;
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) return false;
    }
    return true;
}

function is_multiply_prime($a) {
    if ($a < 2) return false;
    $primes = [];
    for ($i = 2; $i < 100; $i++) {
        if (is_prime($i)) {
            $primes[] = $i;
        }
    }
    $count = count($primes);
    for ($i = 0; $i < $count; $i++) {
        for ($j = $i; $j < $count; $j++) {
            for ($k = $j; $k < $count; $k++) {
                if ($primes[$i] * $primes[$j] * $primes[$k] == $a) {
                    return true;
                }
            }
        }
    }
    return false;
}","function candidate(...$args) {
    return is_multiply_prime(...$args);
}

function test(): void {
    if (candidate(5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(30) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(125) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(105) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(126) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(729) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(891) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1001) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_76,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //x ହେଉଛି n ର ଏକ ସରଳ ଶକ୍ତି ଯଦି n**int=x //ଅନ୍ୟ କ୍ଷେତ୍ରରେ n ର ଶକ୍ତି ଏବଂ ମିଥ୍ୟା ।//ଆପଣଙ୍କର କାମ ହେଉଛି ଏକ ଫଳନ ଲେଖିବା ଯାହା ସତ୍ୟ ଫେରାଇଥାଏ ଯଦି ଏକ ସଂଖ୍ୟା x ଏକ ସରଳ // >>> is_simple_power(1, 4)
// true
// >>> is_simple_power(2, 2)
// true
// >>> is_simple_power(8, 2)
// true
// >>> is_simple_power(3, 2)
// false
// >>> is_simple_power(3, 1)
// false
// >>> is_simple_power(5, 3)
// false
function is_simple_power($x, $n) {
","function is_simple_power($x, $n) {
    if ($x < 1 || $n < 1) {
        return false;
    }

    $power = 1;
    while ($power < $x) {
        $power *= $n;
    }

    return $power === $x;
}","function candidate(...$args) {
    return is_simple_power(...$args);
}

function test(): void {
    if (candidate(16, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(143214, 16) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(4, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(9, 3) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(16, 4) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(24, 2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(128, 4) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(12, 6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1, 1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1, 12) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_77,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଟିପ୍ପଣୀ: ଆପଣ ଭାବୁଥିବେ ଇନପୁଟ୍ ସବୁବେଳେ ବୈଧ ।//ଯଦି ଏହି ଇନଗେଜର କୌଣସି ସଂଖ୍ୟାର ଘନକ ଅଟେ ।//ଗୋଟିଏ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା a କୁ ନେଇଥାଏ ଏବଂ true କୁ ଫେରାଇଥାଏ ।// >>> iscube(1)
// true
// >>> iscube(2)
// false
// >>> iscube(-1)
// true
// >>> iscube(64)
// true
// >>> iscube(0)
// true
// >>> iscube(180)
// false
function iscube($a) {
","function iscube($a) {
    $cubeRoot = round(pow(abs($a), 1/3));
    return $cubeRoot * $cubeRoot * $cubeRoot === abs($a);
}","function candidate(...$args) {
    return iscube(...$args);
}

function test(): void {
    if (candidate(1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(-1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(64) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(180) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1000) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1729) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_78,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏବଂ A,B,C,D,E,F ଚିହ୍ନ ସବୁ ବେଳେ ବଡ଼ ଅକ୍ଷରରେ ଲେଖା ହୋଇଥାଏ ।//ଟିପ୍ପଣୀ: ଆପଣ ଅନୁମାନ କରିପାରନ୍ତି ଯେ ନିବେଶ ସର୍ବଦା ସଠିକ କିମ୍ବା ଖାଲି ବାକ୍ୟଖଣ୍ଡ, //ବି (= ଦଶମିକ 11), ଡି (= ଦଶମିକ 13) ।//ତେଣୁ ଆପଣଙ୍କୁ ନିମ୍ନଲିଖିତ ଅଙ୍କ ମଧ୍ୟରୁ ଏକ ସଂଖ୍ୟା ନିର୍ଣ୍ଣୟ କରିବାକୁ ହେବ: 2, 3, 5, 7, //ମୂଳ ସଂଖ୍ୟା ଗୁଡିକ ହେଉଛି 2, 3, 5, 7, 11, 13, 17,...//ହେକ୍ସାଡେସିମାଲ ଅଙ୍କ ହେଉଛି 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F. //1 ରୁ ବଡ, ଯାହାକି ଦୁଇଟି ଛୋଟ ପ୍ରାକୃତିକ ସଂଖ୍ଯାର ଗୁଣନ ନୁହେଁ) ।//ଅକ୍ଷର ଗୁଡିକ ଅକ୍ଷର ସଂଖ୍ୟା (ଅକ୍ଷର ସଂଖ୍ୟା, କିମ୍ବା ଏକ ଅକ୍ଷର, ଏକ ପ୍ରାକୃତିକ ସଂଖ୍ୟା //ଏକ ହେକ୍ସାଡେସିମାଲ୍ ସଂଖ୍ୟାକୁ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ୍ ଭାବରେ ଗଣନା କରେ ଏବଂ ହେକ୍ସାଡେସିମାଲ୍ ସଂଖ୍ୟା ଗଣନା କରେ //ଆପଣଙ୍କୁ ଏକ ଫଳନ ଲେଖିବା ପାଇଁ କୁହାଯାଇଥିଲା ଯାହା ଗ୍ରହଣ କରିଥାଏ ।// >>> hex_key(""AB"")
// 1
// >>> hex_key(""1077E"")
// 2
// >>> hex_key(""ABED1A33"")
// 4
// >>> hex_key(""123456789ABCDEF0"")
// 6
// >>> hex_key(""2020"")
// 2
function hex_key($num) {
","function hex_key($num) {
    // Map of hexadecimal digits to their respective prime number interpretation
    $primeDigits = ['2', '3', '5', '7', 'B', 'D'];
    
    // Initialize count for prime numbers
    $primeCount = 0;

    // Iterate through each character in the hexadecimal string
    for ($i = 0; $i < strlen($num); $i++) {
        // Get the current character
        $char = $num[$i];

        // Check if the character is a prime hexadecimal digit
        if (in_array($char, $primeDigits)) {
            $primeCount++;
        }
    }

    // Return the count of prime hexadecimal digits
    return $primeCount;
}","function candidate(...$args) {
    return hex_key(...$args);
}

function test(): void {
    if (candidate(""AB"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""1077E"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""ABED1A33"") !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(""2020"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""123456789ABCDEF0"") !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(""112233445566778899AABBCCDDEEFF00"") !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_79,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏହି ଅତିରିକ୍ତ ଅକ୍ଷରଗୁଡ଼ିକ ଫର୍ମାଟ ପାଇଁ ସାହାଯ୍ୟକାରୀ ।//ଷ୍ଟ୍ରିଙ୍ଗର ଆରମ୍ଭ ଏବଂ ଶେଷରେ ଅତିରିକ୍ତ କିଛି ଅକ୍ଷର 'db' ରହିବ ।//ସଂଖ୍ଯା. ଶୃଙ୍ଖଳାରେ ଥିବା ପ୍ରତ୍ୟେକ ଅକ୍ଷର '0' କିମ୍ବା '1' ହେବ.//ବାଇନାରୀ ଫର୍ମାଟ. ଫଳନଟି ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଫେରାଇବ, ଯେଉଁଥିରେ ପ୍ରତ୍ୟେକ ଅକ୍ଷର ଏକ ବାଇନାରୀ କୁ ପ୍ରତିନିଧିତ୍ୱ କରିବ.//ଆପଣଙ୍କୁ ଏକ ଦଶମିକ ସଂଖ୍ୟା ଦିଆଯିବ ଏବଂ ଆପଣଙ୍କର କାମ ହେଉଛି ଏହାକୁ  କୁ ପରିବର୍ତ୍ତନ କରିବା// >>> decimal_to_binary(15)
// ""db1111db""
// >>> decimal_to_binary(32)
// ""db100000db""
function decimal_to_binary($decimal) {
","function decimal_to_binary($decimal) {
    // Convert the decimal number to binary string
    $binary = decbin($decimal);
    
    // Add 'db' at the start and end of the binary string
    return 'db' . $binary . 'db';
}","function candidate(...$args) {
    return decimal_to_binary(...$args);
}

function test(): void {
    if (candidate(0) !== ""db0db"") { throw new Exception(""Test failed!""); }
    if (candidate(32) !== ""db100000db"") { throw new Exception(""Test failed!""); }
    if (candidate(103) !== ""db1100111db"") { throw new Exception(""Test failed!""); }
    if (candidate(15) !== ""db1111db"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_80,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଗୋଟିଏ ଧାଡ଼ି ହାପ୍ଫ ଅଟେ ଯଦି ଏହାର ଲମ୍ବ ଅତିକମରେ 3 ଏବଂ ପ୍ରତ୍ୟେକ 3 କ୍ରମିକ ଅକ୍ଷର ଅଲଗା //ଆପଣଙ୍କର କାମ ହେଉଛି ଯାଞ୍ଚ କରିବା କି ଏହି ଷ୍ଟ୍ରିଙ୍ଗଟି ହାପ୍ ଅଛି କି ନାହିଁ ।//ଆପଣଙ୍କୁ ଗୋଟିଏ string s ଦିଆଗଲା.// >>> is_happy(""a"")
// false
// >>> is_happy(""aa"")
// false
// >>> is_happy(""abcd"")
// true
// >>> is_happy(""aabb"")
// false
// >>> is_happy(""adb"")
// true
// >>> is_happy(""xyy"")
// false
function is_happy($s) {
","function is_happy($s) {
    $length = strlen($s);
    if ($length < 3) {
        return false;
    }

    for ($i = 0; $i <= $length - 3; $i++) {
        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return is_happy(...$args);
}

function test(): void {
    if (candidate(""a"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""aa"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""aabb"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""adb"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""xyy"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""iopaxpoi"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""iopaxioi"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_81,ory_Orya,php,"<?php
//ଉଦାହରଣ://୦.୦ ଇ //> ୦.୦ ଡି- //> ୦.୭ ଡି //> ୧.୦ ଡି+ //> ୧.୩ ସି- //> ୧.୭ ଡିଗ୍ରୀ ସେଲସିୟସ//> ୨.୦ ସି+ //> 2.3 ବି- //> ୨.୭ ବି //> 3.0 ବି+ //> 3.3 A- //> ୩.୭ ଏ //4.0 ଏ+ //GPA. ଅକ୍ଷର ଗ୍ରେଡ୍.//ଏକ ଫଳନ ଯାହା ନିମ୍ନଲିଖିତ ସାରଣୀ ବ୍ୟବହାର କରି ଅକ୍ଷର ମାନର ଏକ ସରଳୀକୃତ ଶୃଙ୍ଖଳାକୁ ବାହାର କରିପାରିବ: //ସେ ଆପଣଙ୍କୁ କିଛି ଛାତ୍ରଙ୍କ ପାଇଁ ଗ୍ରେଡ ରେଟ୍ ଦେଇଛନ୍ତି ଏବଂ ଆପଣଙ୍କୁ ଲେଖିବାକୁ ପଡିବ ।//କେବଳ ଗୋଟିଏ ସମସ୍ୟା ହେଉଛି, ସେ ଗ୍ରେଡିଂ ପାଇଁ ବ୍ୟବହାର କରୁଥିବା କୋଡ୍ ହଜିଯାଇଛି ।//ଶିକ୍ଷୟତ୍ରୀମାନେ ନିଜସ୍ୱ ଗ୍ରେଡିଂ ଆଲଗୋରିଦମ ପ୍ରସ୍ତୁତ କରୁଛନ୍ତି ।//ସେମିଷ୍ଟରର ଶେଷ ସପ୍ତାହରେ ଶିକ୍ଷକମାନଙ୍କୁ ମାର୍କ ଦେବାକୁ ହେବ ।// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))
// array(""A+"", ""B"", ""C-"", ""C"", ""A-"")
function numerical_letter_grade($grades) {
","function numerical_letter_grade($grades) {
    $letterGrades = array();

    foreach ($grades as $gpa) {
        if ($gpa >= 4.0) {
            $letterGrades[] = ""A+"";
        } elseif ($gpa > 3.7) {
            $letterGrades[] = ""A"";
        } elseif ($gpa > 3.3) {
            $letterGrades[] = ""A-"";
        } elseif ($gpa > 3.0) {
            $letterGrades[] = ""B+"";
        } elseif ($gpa > 2.7) {
            $letterGrades[] = ""B"";
        } elseif ($gpa > 2.3) {
            $letterGrades[] = ""B-"";
        } elseif ($gpa > 2.0) {
            $letterGrades[] = ""C+"";
        } elseif ($gpa > 1.7) {
            $letterGrades[] = ""C"";
        } elseif ($gpa > 1.3) {
            $letterGrades[] = ""C-"";
        } elseif ($gpa > 1.0) {
            $letterGrades[] = ""D+"";
        } elseif ($gpa > 0.7) {
            $letterGrades[] = ""D"";
        } elseif ($gpa > 0.0) {
            $letterGrades[] = ""D-"";
        } else {
            $letterGrades[] = ""E"";
        }
    }

    return $letterGrades;
}","function candidate(...$args) {
    return numerical_letter_grade(...$args);
}

function test(): void {
    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(""A+"", ""B"", ""C-"", ""C"", ""A-"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.2)) !== array(""D+"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.5)) !== array(""D-"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.0)) !== array(""E"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(""D"", ""D-"", ""C-"", ""B"", ""B+"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.0, 0.7)) !== array(""E"", ""D-"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_82,ory_Orya,php,"<?php
//ଉଦାହରଣ //length ଏକ ଅଶୂନ୍ୟ ସଂଖ୍ୟା କିମ୍ବା ଅନ୍ୟଥା ମିଥ୍ୟା //ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ନେଇଥାଏ ଏବଂ ସତ୍ୟ ଫେରାଇଥାଏ ଯଦି ଷ୍ଟ୍ରିଙ୍ଗ // >>> prime_length(""Hello"")
// true
// >>> prime_length(""abcdcba"")
// true
// >>> prime_length(""kittens"")
// true
// >>> prime_length(""orange"")
// false
function prime_length($string) {
","function prime_length($string) {
    $length = strlen($string);

    if ($length < 2) {
        return false;
    }

    for ($i = 2; $i <= sqrt($length); $i++) {
        if ($length % $i === 0) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return prime_length(...$args);
}

function test(): void {
    if (candidate(""Hello"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdcba"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""kittens"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""orange"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""wow"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""world"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""MadaM"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""Wow"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""HI"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""go"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""gogo"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaaaaaaaaaaaaa"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""Madam"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""M"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""0"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_83,ory_Orya,php,"<?php
//ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଯାହା 1 ରୁ ଆରମ୍ଭ କିମ୍ବା ଶେଷ ହୁଏ ।//ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଦିଆଗଲା, n-ଅଙ୍କ ବିଶିଷ୍ଟ ସଂଖ୍ୟାର ଗଣନା ଫେରାଇଦେବେ function starts_one_ends($n) {
","function starts_one_ends($n) {
    if ($n <= 0) return 0;
    if ($n == 1) return 1;

    $total_count = 9 * pow(10, $n - 1); // Total count of n-digit numbers
    $non_one_start_count = 8 * pow(10, $n - 2); // n-digit numbers where the second digit is not zero
    
    // All numbers that start with 1:
    $start_with_one_count = pow(10, $n - 1);

    // All numbers that end with 1:
    $end_with_one_count = pow(10, $n - 1);

    // Numbers that both start and end with 1 are counted twice in the above summation
    // so we subtract those:
    $start_and_end_with_one_count = 1 * pow(10, $n - 2);
    
    $result = $start_with_one_count + $end_with_one_count - $start_and_end_with_one_count;    
    return $result;
}","function candidate(...$args) {
    return starts_one_ends(...$args);
}

function test(): void {
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(2) !== 18) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== 180) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== 1800) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 18000) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_84,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା N ଦିଆଗଲା, ଏହାର ଅଙ୍କଗୁଡ଼ିକର ସମୁଦାୟ ସମୁଦାୟକୁ ବାଇନାରୀରେ ଫେରାଇଦିଅନ୍ତୁ. // >>> solve(1000)
// ""1""
// >>> solve(150)
// ""110""
// >>> solve(147)
// ""1100""
// Variables:
// @N integer
// Constraints: 0 ≤ N ≤ 10000.
// Output:
// a string of binary number
function solve($N) {
","function solve($N) {
    $sum = array_sum(str_split($N));
    return decbin($sum);
}","function candidate(...$args) {
    return solve(...$args);
}

function test(): void {
    if (candidate(1000) !== ""1"") { throw new Exception(""Test failed!""); }
    if (candidate(150) !== ""110"") { throw new Exception(""Test failed!""); }
    if (candidate(147) !== ""1100"") { throw new Exception(""Test failed!""); }
    if (candidate(333) !== ""1001"") { throw new Exception(""Test failed!""); }
    if (candidate(963) !== ""10010"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_85,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏକ ଅସରନ୍ତି ସମୁଦାୟ ସଂଖ୍ୟାକୁ ଦେଇ lst. ଅଙ୍କକୋଷରେ ଥିବା ଯୁଗ୍ମ ଉପାଦାନଗୁଡ଼ିକୁ ଯୋଗ କରନ୍ତୁ.. // >>> add(array(4, 2, 6, 7))
// 2
function add($lst) {
","function add($lst) {
    $sum = 0;
    for ($i = 1; $i < count($lst); $i += 2) {
        if ($lst[$i] % 2 == 0) {
            $sum += $lst[$i];
        }
    }
    return $sum;
}","function candidate(...$args) {
    return add(...$args);
}

function test(): void {
    if (candidate(array(4, 88)) !== 88) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_86,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଟିପ୍ପଣୀ: ଆପଣ ବାକ୍ୟର କ୍ରମରେ ଏବଂ ବାକ୍ୟରେ ଖାଲି ସ୍ଥାନକୁ ରଖିବା ଉଚିତ ।//ଏସସିଆଇ ମୂଲ୍ୟ ଆଧାରରେ କ୍ରମାନୁସାରେ ।//ଏକ ନୂତନ ଶବ୍ଦ ସହିତ ବଦଳାଯିବ ଯେଉଁଠାରେ ସମସ୍ତ ଅକ୍ଷର //""ଷ୍ଟ୍ରିଙ୍ଗର ଅର୍ଡରଡ ଭର୍ସନ, ହେଉଛି ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଯେଉଁଠାରେ ସମସ୍ତ ଶବ୍ଦ (ସ୍ପେସ ଦ୍ୱାରା ପୃଥକ) //ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ନେଇଥାଏ ଏବଂ ଏହାର ଏକ ଅର୍ଡର ହୋଇଥିବା ସଂସ୍କରଣ ଫେରାଇଥାଏ।// >>> anti_shuffle(""Hi"")
// ""Hi""
// >>> anti_shuffle(""hello"")
// ""ehllo""
// >>> anti_shuffle(""Hello World!!!"")
// ""Hello !!!Wdlor""
function anti_shuffle($s) {
","function anti_shuffle($s) {
    // Split the string by space to preserve words and spaces
    $words = preg_split('/(\s+)/', $s, -1, PREG_SPLIT_DELIM_CAPTURE);

    // Array to hold ordered words
    $ordered_words = [];

    // Iterate through each word or space in the array
    foreach ($words as $word) {
        // If it's a word (not only spaces)
        if (trim($word) !== '') {
            // Convert the word into an array of characters, sort it, and rejoin
            $chars = str_split($word);
            sort($chars);
            $ordered_words[] = implode('', $chars);
        } else {
            // If it's a space or multiple spaces, preserve them as they are
            $ordered_words[] = $word;
        }
    }

    // Join the array back into a string and return
    return implode('', $ordered_words);
}","function candidate(...$args) {
    return anti_shuffle(...$args);
}

function test(): void {
    if (candidate(""Hi"") !== ""Hi"") { throw new Exception(""Test failed!""); }
    if (candidate(""hello"") !== ""ehllo"") { throw new Exception(""Test failed!""); }
    if (candidate(""number"") !== ""bemnru"") { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"") !== ""abcd"") { throw new Exception(""Test failed!""); }
    if (candidate(""Hello World!!!"") !== ""Hello !!!Wdlor"") { throw new Exception(""Test failed!""); }
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""Hi. My name is Mister Robot. How are you?"") !== "".Hi My aemn is Meirst .Rboot How aer ?ouy"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_87,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏହା ସହିତ, ଧାଡ଼ିର କୋଅର୍ଡିନେଟଗୁଡ଼ିକୁ କ୍ରମବର୍ଦ୍ଧିଷ୍ଣୁ କ୍ରମରେ ସ୍ତମ୍ଭ ଅନୁସାରେ ସର୍ଟ କରନ୍ତୁ.//ପ୍ରଥମେ କୋର୍ଡିନେଟକୁ କ୍ରମାନୁସାରେ ଧାଡ଼ି ଅନୁସାରେ ସର୍ଟ କରନ୍ତୁ ।//ପ୍ରତ୍ୟେକ ଆରେ ହେଉଛି ଏକ କୋର୍ଡିନେଟ - (ଶୃଙ୍ଖଳା, ସ୍ତମ୍ଭ), 0 ରୁ ଆରମ୍ଭ ।//ଏବଂ arrays ର arrays, [(x1, y1), (x2, y2) ...] କୁ ଫେରାଇଥାଏ ଯେପରିକି //lst, ଏବଂ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା x ଦିଆଗଲା, ଆରେରେ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା x ଖୋଜନ୍ତୁ, //ପ୍ରତ୍ୟେକ ଧାଡ଼ିରେ ଭିନ୍ନ ଭିନ୍ନ ସଂଖ୍ୟକ ସ୍ତମ୍ଭ ରହିପାରେ ।//ଯାହା ମାଟ୍ରିକ୍ସ ସହିତ ସମାନ, କିନ୍ତୁ ମାଟ୍ରିକ୍ସ ପରି ନୁହେଁ,//ଆପଣଙ୍କୁ ଏକ 2D ତଥ୍ୟ ଦିଆଯାଉଛି, ଏକ ନେଷ୍ଟେଡ୍ ଆରେ ଭାବରେ, // >>> get_row(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1)
// array(array(0, 0), array(1, 4), array(1, 0), array(2, 5), array(2, 0))
// >>> get_row(array(), 1)
// array()
// >>> get_row(array(array(), array(1), array(1, 2, 3)), 3)
// array(array(2, 2))
function get_row($lst, $x) {
","function get_row($lst, $x) {
    $coordinates = array();
    // Iterate over each row with its index.
    foreach ($lst as $row_idx => $row) {
        $row_coordinates = array();
        // Iterate over each element in the row with its index.
        foreach ($row as $col_idx => $value) {
            if ($value === $x) {
                // Add the coordinate as a pair (row index, column index).
                $row_coordinates[] = array($row_idx, $col_idx);
            }
        }
        // Sort the coordinates of this row by columns in descending order.
        usort($row_coordinates, function($a, $b) {
            return $b[1] - $a[1];
        });
        // Merge sorted row coordinates into the main coordinates list.
        $coordinates = array_merge($coordinates, $row_coordinates);
    }
    // Return the sorted coordinates.
    return $coordinates;
}","function candidate(...$args) {
    return get_row(...$args);
}

function test(): void {
    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 4), array(1, 0), array(2, 5), array(2, 0))) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6)), 2) !== array(array(0, 1), array(1, 1), array(2, 1), array(3, 1), array(4, 1), array(5, 1))) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 1, 3, 4, 5, 6), array(1, 2, 1, 4, 5, 6), array(1, 2, 3, 1, 5, 6), array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 0), array(2, 1), array(2, 0), array(3, 2), array(3, 0), array(4, 3), array(4, 0), array(5, 4), array(5, 0), array(6, 5), array(6, 0))) { throw new Exception(""Test failed!""); }
    if (candidate(array(), 1) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1)), 2) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(), array(1), array(1, 2, 3)), 3) !== array(array(2, 2))) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_88,ory_Orya,php,"<?php
//ଉଦାହରଣ://* ଦିଆଯାଇଥିବା ଆରେକୁ ପରିବର୍ତ୍ତନ କରନ୍ତୁ ନାହିଁ. //ନୋଟ: //ଅଥବା ଏହାକୁ କ୍ରମାନୁସାରେ ସର୍ଟ କରନ୍ତୁ ଯଦି ସମୁଦାୟ (ପ୍ରଥମ ଇଣ୍ଡେକ୍ସ ମୂଲ୍ୟ, ଶେଷ ଇଣ୍ଡେକ୍ସ ମୂଲ୍ୟ) ଯୁଗ୍ମ ହୋଇଥାଏ ।//ଆପଣ ଦିଆଯାଇଥିବା ଆରେକୁ ଉର୍ଦ୍ଧ୍ୱଗାମୀ କ୍ରମରେ ସର୍ଟ କରିବେ ଯଦି ସମୁଦାୟ (ପ୍ରଥମ ଇଣ୍ଡେକ୍ସ ମୂଲ୍ୟ, ଶେଷ ଇଣ୍ଡେକ୍ସ ମୂଲ୍ୟ) ଅଙ୍କ ବିଶିଷ୍ଟ, //ଅଣ-ନକାରାତ୍ମକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ସରଳୀକୃତ ଧାରାକୁ ଦେଇ, ସର୍ଟ କରିବା ପରେ ଦିଆଯାଇଥିବା ସରଳୀକୃତ ଧାରାକୁ ଏକ cophp ଫେରାଇବ, // >>> sort_array(array())
// array()
// >>> sort_array(array(5))
// array(5)
// >>> sort_array(array(2, 4, 3, 0, 1, 5))
// array(0, 1, 2, 3, 4, 5)
// >>> sort_array(array(2, 4, 3, 0, 1, 5, 6))
// array(6, 5, 4, 3, 2, 1, 0)
function sort_array($array) {
","function sort_array($array) {
    if (empty($array)) {
        return $array;
    }

    $firstIndexValue = $array[0];
    $lastIndexValue = $array[count($array) - 1];
    $sum = $firstIndexValue + $lastIndexValue;

    $sortedArray = $array;
    if ($sum % 2 === 0) {
        // Sort in descending order
        rsort($sortedArray);
    } else {
        // Sort in ascending order
        sort($sortedArray);
    }

    return $sortedArray;
}","function candidate(...$args) {
    return sort_array(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(5)) !== array(5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 1)) !== array(1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(15, 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(""Test failed!""); }
    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_89,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଦୁଇଗୁଣିତ କରି ଦୁଇ ସ୍ଥାନକୁ ଘୁଞ୍ଚାଇବେ ।//ଅକ୍ଷରଗୁଡ଼ିକର ଆକାର ଏପରି ଭାବରେ ଘୁଞ୍ଚାଯିବା ଉଚିତ ଯେ ଅକ୍ଷରଗୁଡ଼ିକ //ଆଲଫାବେଟକୁ ଘୂରାଇ ଏକ ଏନକ୍ରିପ୍ଟ ହୋଇଥିବା ଷ୍ଟ୍ରିଙ୍ଗ ଫେରାଇଥାଏ.//ଏକ ଫଳନ ଏନକ୍ରିପ୍ଟ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହାକି ଏକ ବାକ୍ୟଖଣ୍ଡକୁ ଏକ ତର୍କ ଭାବରେ ଗ୍ରହଣ କରିଥାଏ ଏବଂ // >>> encrypt(""hi"")
// ""lm""
// >>> encrypt(""asdfghjkl"")
// ""ewhjklnop""
// >>> encrypt(""gf"")
// ""kj""
// >>> encrypt(""et"")
// ""ix""
function encrypt($s) {
","function encrypt($s) {
    $result = '';
    $shift = 4; // 2 multiplied by 2
    
    for ($i = 0; $i < strlen($s); $i++) {
        $char = $s[$i];
        
        if (ctype_alpha($char)) {
            $ordStart = ctype_lower($char) ? ord('a') : ord('A');
            $char = chr($ordStart + (ord($char) - $ordStart + $shift) % 26);
        }
        
        $result .= $char;
    }
    
    return $result;
}","function candidate(...$args) {
    return encrypt(...$args);
}

function test(): void {
    if (candidate(""hi"") !== ""lm"") { throw new Exception(""Test failed!""); }
    if (candidate(""asdfghjkl"") !== ""ewhjklnop"") { throw new Exception(""Test failed!""); }
    if (candidate(""gf"") !== ""kj"") { throw new Exception(""Test failed!""); }
    if (candidate(""et"") !== ""ix"") { throw new Exception(""Test failed!""); }
    if (candidate(""faewfawefaewg"") !== ""jeiajeaijeiak"") { throw new Exception(""Test failed!""); }
    if (candidate(""hellomyfriend"") !== ""lippsqcjvmirh"") { throw new Exception(""Test failed!""); }
    if (candidate(""dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh"") !== ""hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl"") { throw new Exception(""Test failed!""); }
    if (candidate(""a"") !== ""e"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_90,ory_Orya,php,"<?php
//ଏପରି କୌଣସି ଉପାଦାନ ନ ଥିଲେ ଶୂନ୍ୟକୁ ଫେରାଇଥାଏ।//ଏକ ଫଙ୍କସନ next_smallest ଲେଖନ୍ତୁ ଯାହା ଆରେର ଦ୍ବିତୀୟ କ୍ଷୁଦ୍ରତମ ଉପାଦାନକୁ ଫେରାଇଥାଏ ।//ଆପଣଙ୍କୁ ଏକ ସଂଖ୍ଯା ନିର୍ଣ୍ଣଯକ ଦିଆୟାଇଛି.// >>> next_smallest(array(1, 2, 3, 4, 5))
// 2
// >>> next_smallest(array(5, 1, 4, 3, 2))
// 2
// >>> next_smallest(array())
// null
// >>> next_smallest(array(1, 1))
// null
function next_smallest($lst) {
","function next_smallest($lst) {
    // Remove duplicate elements
    $unique_lst = array_unique($lst);

    // Sort the array
    sort($unique_lst);

    // Check if there are at least two elements in the sorted array
    if (count($unique_lst) < 2) {
        return null;
    }

    // Return the second smallest element
    return $unique_lst[1];
}","function candidate(...$args) {
    return next_smallest(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 1, 4, 3, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1)) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1, 1, 0)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1)) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(-35, 34, 12, -45)) !== -35) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_91,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ବାକ୍ୟ ଗୁଡିକରେ '', '?' କିମ୍ବା '!' ଲଗା ଯାଇଥାଏ.//ଏକ ବିରକ୍ତି ହେଉଛି ଏକ ବାକ୍ୟ ଯାହା ""ମୁଁ"" ଶବ୍ଦ ସହିତ ଆରମ୍ଭ ହୁଏ ।//ଆପଣଙ୍କୁ ଏକ ଶୃଙ୍ଖଳାର ଶବ୍ଦ ଦିଆଯିବ, ଏବଂ ଆପଣଙ୍କର କାମ ହେଉଛି ସଂଖ୍ୟା ଗଣନା କରିବା // >>> is_bored(""Hello world"")
// 0
// >>> is_bored(""The sky is blue. The sun is shining. I love this weather"")
// 1
function is_bored($S) {
","function is_bored($S) {
    // Split the string into sentences using regex
    $sentences = preg_split('/[.!?]\s*/', trim($S));

    $boredom_count = 0;
    foreach ($sentences as $sentence) {
        // Check if the trimmed sentence starts with ""I""
        if (trim($sentence) !== '' && strpos(trim($sentence), 'I') === 0) {
            $boredom_count++;
        }
    }

    return $boredom_count;
}","function candidate(...$args) {
    return is_bored(...$args);
}

function test(): void {
    if (candidate(""Hello world"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""Is the sky blue?"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""I love It !"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""bIt"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""I feel good today. I will be productive. will kill It"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""You and I are going for a walk"") !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_92,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଅନ୍ୟ କୌଣସି କ୍ଷେତ୍ରରେ ମିଥ୍ୟା ଫେରାଇଥାଏ ।//ଯଦି ଗୋଟିଏ ସଂଖ୍ୟା ଅନ୍ୟ ଦୁଇଟି ସଂଖ୍ୟାର ସମୁଦାୟ ସହିତ ସମାନ ଏବଂ ସମସ୍ତ ସଂଖ୍ୟା ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ହୋଇଥାଏ ତେବେ ଏହା ସତ୍ୟ ହୋଇଥାଏ ।//ଏକ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହା 3ଟି ସଂଖ୍ୟା ଗ୍ରହଣ କରେ.// >>> any_int(5, 2, 7)
// true
// >>> any_int(3, 2, 2)
// false
// >>> any_int(3, -2, 1)
// true
// >>> any_int(3.6, -2.2, 2)
// false
function any_int($x, $y, $z) {
","function any_int($x, $y, $z) {
    if (is_int($x) && is_int($y) && is_int($z)) {
        return ($x === $y + $z) || ($y === $x + $z) || ($z === $x + $y);
    }
    return false;
}","function candidate(...$args) {
    return any_int(...$args);
}

function test(): void {
    if (candidate(2, 3, 1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2.5, 2, 3) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(2, 6, 2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(4, 2, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(-4, 6, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2, 1, 1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(3, 4, 7) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(3.0, 4, 7) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_93,ory_Orya,php,"<?php
//ଉଦାହରଣ://କେବଳ ଅକ୍ଷର ମାନି ନିଅନ୍ତୁ ।//ଇଂରାଜୀ ଅକ୍ଷର ଅକ୍ଷରରେ ସ୍ୱର ।//ସେହି ଅକ୍ଷର ସହିତ ବାର୍ତ୍ତା ଯାହା 2 ଟି ସ୍ଥାନ ପୂର୍ବରୁ ଦେଖାଯାଏ _//ଏହିପରି ଭାବରେ ଏହା ସମସ୍ତ ଅକ୍ଷରର କେସ୍ ବଦଳାଇଥାଏ,  ରେ ସମସ୍ତ ସ୍ୱର ବଦଳାଇଥାଏ//ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ସନ୍ଦେଶ ନେଇଥାଏ, ଏବଂ ଏପରି ଏକ // >>> encode(""test"")
// ""TGST""
// >>> encode(""This is a message"")
// ""tHKS KS C MGSSCGG""
function encode($message) {
","function encode($message) {
    $encodedMessage = '';
    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];
    $replacement = ['c', 'g', 'k', 'q', 'w', 'C', 'G', 'K', 'Q', 'W'];

    for ($i = 0; $i < strlen($message); $i++) {
        $char = $message[$i];
        if (in_array($char, $vowels)) {
            // Find the index of the vowel and replace it
            $index = array_search($char, $vowels);
            $encodedMessage .= $replacement[$index];
        } else {
            // Swap case for consonants
            $encodedMessage .= ctype_upper($char) ? strtolower($char) : strtoupper($char);
        }
    }

    return $encodedMessage;
}","function candidate(...$args) {
    return encode(...$args);
}

function test(): void {
    if (candidate(""TEST"") !== ""tgst"") { throw new Exception(""Test failed!""); }
    if (candidate(""Mudasir"") !== ""mWDCSKR"") { throw new Exception(""Test failed!""); }
    if (candidate(""YES"") !== ""ygs"") { throw new Exception(""Test failed!""); }
    if (candidate(""This is a message"") !== ""tHKS KS C MGSSCGG"") { throw new Exception(""Test failed!""); }
    if (candidate(""I DoNt KnOw WhAt tO WrItE"") !== ""k dQnT kNqW wHcT Tq wRkTg"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_94,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଆପଣଙ୍କୁ ସବୁଠାରୁ ବଡ ଅକ୍ଷର ମୂଲ୍ୟ ଖୋଜିବାକୁ ହେବ ଏବଂ ଏହାର ଅଙ୍କଗୁଡିକର ସମୁଦାୟ ଫେରାଇବାକୁ ହେବ.//ଆପଣଙ୍କୁ ଏକ ସଂଖ୍ଯା ନିର୍ଣ୍ଣଯକ ଦିଆୟାଇଛି.// >>> skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3))
// 10
// >>> skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1))
// 25
// >>> skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3))
// 13
// >>> skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6))
// 11
// >>> skjkasdkd(array(0, 81, 12, 3, 1, 21))
// 3
// >>> skjkasdkd(array(0, 8, 1, 2, 1, 7))
// 7
function skjkasdkd($lst) {
","function skjkasdkd($lst) {
    // Helper function to check prime status
    function is_prime($num) {
        if ($num <= 1) return false;
        if ($num <= 3) return true;
        if ($num % 2 == 0 || $num % 3 == 0) return false;
        for ($i = 5; $i * $i <= $num; $i += 6) {
            if ($num % $i == 0 || $num % ($i + 2) == 0) return false;
        }
        return true;
    }
    
    $largest_prime = -1;
    
    // Find the largest prime in the list
    foreach ($lst as $num) {
        if (is_prime($num) && $num > $largest_prime) {
            $largest_prime = $num;
        }
    }
    
    if ($largest_prime == -1) return 0;
    
    // Sum the digits of the largest prime
    $sum_of_digits = 0;
    while ($largest_prime > 0) {
        $sum_of_digits += $largest_prime % 10;
        $largest_prime = intdiv($largest_prime, 10);
    }
    
    return $sum_of_digits;
}","function candidate(...$args) {
    return skjkasdkd(...$args);
}

function test(): void {
    if (candidate(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)) !== 10) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)) !== 25) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) !== 13) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)) !== 11) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 81, 12, 3, 1, 21)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 8, 1, 2, 1, 7)) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(array(8191)) !== 19) { throw new Exception(""Test failed!""); }
    if (candidate(array(8191, 123456, 127, 7)) !== 19) { throw new Exception(""Test failed!""); }
    if (candidate(array(127, 97, 8192)) !== 10) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_95,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଫଳନଟି false ଫେରାଇବ ଯଦି ଦିଆଯାଇଥିବା ସରଳୀକୃତ ଶୂନ୍ୟ ହୋଇଥାଏ ।//case କିମ୍ବା ସମସ୍ତ କିଗୁଡ଼ିକ ବଡ଼ ଅକ୍ଷରରେ ଥିବା ବାକ୍ୟଖଣ୍ଡ, ନଚେତ୍ false ଫେରାଇଥାଏ.//ଏକ ସରଳୀକରଣକୁ ଦେଇ, ଯଦି ସମସ୍ତ କି ଗୁଡିକ lower  ରେ ଥିବା ସରଳୀକରଣ ହୋଇଥାଏ ତେବେ true କୁ ଫେରାଇଥାଏ// >>> check_dict_case(array(""a"" => ""apple"", ""b"" => ""banana""))
// true
// >>> check_dict_case(array(""a"" => ""apple"", ""A"" => ""banana"", ""B"" => ""banana""))
// false
// >>> check_dict_case(array(""a"" => ""apple"", 8 => ""banana"", ""a"" => ""apple""))
// false
// >>> check_dict_case(array(""Name"" => ""John"", ""Age"" => ""36"", ""City"" => ""Houston""))
// false
// >>> check_dict_case(array(""STATE"" => ""NC"", ""ZIP"" => ""12345""))
// true
function check_dict_case($dict) {
","function check_dict_case($dict) {
    if (empty($dict)) {
        return false;
    }

    $allLowerCase = true;
    $allUpperCase = true;

    foreach ($dict as $key => $value) {
        if (!is_string($key)) {
            return false;
        }

        if (ctype_lower($key)) {
            $allUpperCase = false;
        } else if (ctype_upper($key)) {
            $allLowerCase = false;
        } else {
            return false;
        }
    }

    return $allLowerCase || $allUpperCase;
}","function candidate(...$args) {
    return check_dict_case(...$args);
}

function test(): void {
    if (candidate(array(""p"" => ""pineapple"", ""b"" => ""banana"")) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(""p"" => ""pineapple"", ""A"" => ""banana"", ""B"" => ""banana"")) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(""p"" => ""pineapple"", ""5"" => ""banana"", ""a"" => ""apple"")) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(""Name"" => ""John"", ""Age"" => ""36"", ""City"" => ""Houston"")) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(""STATE"" => ""NC"", ""ZIP"" => ""12345"")) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(""fruit"" => ""Orange"", ""taste"" => ""Sweet"")) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_96,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଅଶୂନ୍ୟ ସଂଖ୍ୟା ଏବଂ n ରୁ ଛୋଟ ।//ଗୋଟିଏ ଫଳନକୁ କାର୍ଯ୍ୟକାରୀ କରନ୍ତୁ ଯାହାକି ଏକ ନନ୍-ନଗେଟିଭ୍ ଇଣ୍ଟେଜର ନେଇଥାଏ ଏବଂ ପ୍ରଥମ n ର ଏକ ଆରେ ଫେରାଇଥାଏ // >>> count_up_to(5)
// array(2, 3)
// >>> count_up_to(11)
// array(2, 3, 5, 7)
// >>> count_up_to(0)
// array()
// >>> count_up_to(20)
// array(2, 3, 5, 7, 11, 13, 17, 19)
// >>> count_up_to(1)
// array()
// >>> count_up_to(18)
// array(2, 3, 5, 7, 11, 13, 17)
function count_up_to($n) {
","function count_up_to($n) {
    if ($n <= 2) {
        return array();
    }

    $primes = array();
    for ($i = 2; $i < $n; $i++) {
        if (is_prime($i)) {
            $primes[] = $i;
        }
    }

    return $primes;
}

function is_prime($num) {
    if ($num <= 1) {
        return false;
    }
    if ($num <= 3) {
        return true;
    }
    if ($num % 2 == 0 || $num % 3 == 0) {
        return false;
    }
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) {
            return false;
        }
    }
    return true;
}","function candidate(...$args) {
    return count_up_to(...$args);
}

function test(): void {
    if (candidate(5) !== array(2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== array(2, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== array(2, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== array(2, 3, 5, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(22) !== array(2, 3, 5, 7, 11, 13, 17, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(18) !== array(2, 3, 5, 7, 11, 13, 17)) { throw new Exception(""Test failed!""); }
    if (candidate(47) !== array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43)) { throw new Exception(""Test failed!""); }
    if (candidate(101) !== array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_97,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଧରନ୍ତୁ ଯେ ଇନପୁଟ୍ ସର୍ବଦା ବୈଧ ଅଟେ ।//ସେମାନଙ୍କର ଏକକ ଅଙ୍କ ଗୁଡ଼ିକର ଗୁଣନ ।//ଫଳନକୁ ପୂର୍ଣ୍ଣ କରନ୍ତୁ ଯାହାକି ଦୁଇଟି ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ନେଇଥାଏ ଏବଂ ଫେରାଇଥାଏ // >>> multiply(148, 412)
// 16
// >>> multiply(19, 28)
// 72
// >>> multiply(2020, 1851)
// 0
// >>> multiply(14, -15)
// 20
function multiply($a, $b) {
","function multiply($a, $b) {
    $unitDigitA = abs($a) % 10;
    $unitDigitB = abs($b) % 10;
    return $unitDigitA * $unitDigitB;
}","function candidate(...$args) {
    return multiply(...$args);
}

function test(): void {
    if (candidate(148, 412) !== 16) { throw new Exception(""Test failed!""); }
    if (candidate(19, 28) !== 72) { throw new Exception(""Test failed!""); }
    if (candidate(2020, 1851) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(14, -15) !== 20) { throw new Exception(""Test failed!""); }
    if (candidate(76, 67) !== 42) { throw new Exception(""Test failed!""); }
    if (candidate(17, 27) !== 49) { throw new Exception(""Test failed!""); }
    if (candidate(0, 1) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(0, 0) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_98,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଗୋଟିଏ ଧାଡ଼ି s ଦିଆଗଲା, ସମ ସୂଚକାଙ୍କରେ ଥିବା ବଡ଼ ଅକ୍ଷର ସ୍ୱରଗୁଡ଼ିକର ସଂଖ୍ୟା ଗଣନା କରନ୍ତୁ ।// >>> count_upper(""aBCdEf"")
// 1
// >>> count_upper(""abcdefg"")
// 0
// >>> count_upper(""dBBE"")
// 0
function count_upper($s) {
","function count_upper($s) {
    $count = 0;
    $vowels = ['A', 'E', 'I', 'O', 'U'];

    for ($i = 0; $i < strlen($s); $i += 2) {
        if (in_array($s[$i], $vowels)) {
            $count++;
        }
    }

    return $count;
}","function candidate(...$args) {
    return count_upper(...$args);
}

function test(): void {
    if (candidate(""aBCdEf"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdefg"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""dBBE"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""B"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""U"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""EEEE"") !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_99,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଦୁଇଟି ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାରୁ, ଏହାକୁ ଶୂନରୁ ଦୂର କରି ଘୋଡ଼ାଇ ଦିଅନ୍ତୁ.//ଏବଂ ଏହା ନିକଟତମ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାକୁ ଫେରାଇଥାଏ. ଯଦି ସଂଖ୍ୟା ସମାନ ଦୂରତା //ଏକ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହାକି ଏକ ସଂଖ୍ୟାକୁ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଏକ ମୂଲ୍ୟ (ଷ୍ଟ୍ରିଙ୍ଗ) ଗ୍ରହଣ କରିଥାଏ ।// >>> closest_integer(""10"")
// 10
// >>> closest_integer(""15.3"")
// 15
// Note:
// Rounding away from zero means that if the given number is equidistant
// from two integers, the one you should return is the one that is the
// farthest from zero. For example closest_integer(""14.5"") should
// return 15 and closest_integer(""-14.5"") should return -15.
function closest_integer($value) {
","function closest_integer($value) {
    $number = floatval($value);
    if ($number > 0) {
        return floor($number + 0.5);
    } else {
        return ceil($number - 0.5);
    }
}","function candidate(...$args) {
    return closest_integer(...$args);
}

function test(): void {
    if (candidate(""10"") !== 10) { throw new Exception(""Test failed!""); }
    if (candidate(""14.5"") !== 15) { throw new Exception(""Test failed!""); }
    if (candidate(""-15.5"") !== -16) { throw new Exception(""Test failed!""); }
    if (candidate(""15.3"") !== 15) { throw new Exception(""Test failed!""); }
    if (candidate(""0"") !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_100,ory_Orya,php,"<?php
//ଉଦାହରଣ://i ହେଉଛି ସ୍ତରରେ ପଥର ସଂଖ୍ୟା (i+1) ।//ଗୋଟିଏ ଧାଡ଼ିରେ ପ୍ରତ୍ୟେକ ସ୍ତରରେ ପଥର ସଂଖ୍ୟା ଫେରାଇଥାଏ, ଯେଉଁଠାରେ ସୂଚକାଙ୍କରେ ଉପାଦାନ //- ପରବର୍ତ୍ତୀ ଯୁଗ୍ମ ସଂଖ୍ୟା ଯଦି n ଯୁଗ୍ମ ଅଟେ ।//- ପରବର୍ତ୍ତୀ ଅଙ୍କ ଯଦି n ଅଙ୍କ ଅଙ୍କ ଅଟେ ।//ପରବର୍ତ୍ତୀ ସ୍ତରରେ ପଥରର ସଂଖ୍ୟା ହେଉଛି: //ପ୍ରଥମ ସ୍ତରରେ n ପଥର ଅଛି ।//ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଦିଆଗଲା, ଆପଣଙ୍କୁ ପଥରର n ସ୍ତରର ଏକ ଗଦା ତିଆରି କରିବାକୁ ହେବ ।// >>> make_a_pile(3)
// array(3, 5, 7)
function make_a_pile($n) {
","function make_a_pile($n) {
    $pile = [];
    $currentStones = $n;
    
    for ($i = 0; $i < $n; $i++) {
        $pile[] = $currentStones;
        if ($n % 2 == 0) {
            $currentStones += 2;
        } else {
            $currentStones += 2;
        }
    }
    
    return $pile;
}","function candidate(...$args) {
    return make_a_pile(...$args);
}

function test(): void {
    if (candidate(3) !== array(3, 5, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== array(4, 6, 8, 10)) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== array(5, 7, 9, 11, 13)) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== array(6, 8, 10, 12, 14, 16)) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== array(8, 10, 12, 14, 16, 18, 20, 22)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_101,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଶବ୍ଦକୁ ବାକ୍ୟରେ ବିଭକ୍ତ କରିବା ଏବଂ ଶବ୍ଦଗୁଡ଼ିକର ଏକ ସରଳୀକରଣ ଫେରାଇବ.//ଆପଣଙ୍କୁ ଏକ ଶବ୍ଦ ଶୃଙ୍ଖଳ ଦିଆଯିବ, ଯାହାକୁ କମା କିମ୍ବା ସ୍ପେସ୍ ଦ୍ୱାରା ପୃଥକ କରାଯିବ । ଆପଣଙ୍କ କାମ ହେଉଛି // >>> words_string(""Hi, my name is John"")
// array(""Hi"", ""my"", ""name"", ""is"", ""John"")
// >>> words_string(""One, two, three, four, five, six"")
// array(""One"", ""two"", ""three"", ""four"", ""five"", ""six"")
function words_string($s) {
","function words_string($s) {
    // Remove any commas and split by spaces
    return preg_split('/[\s,]+/', $s, -1, PREG_SPLIT_NO_EMPTY);
}","function candidate(...$args) {
    return words_string(...$args);
}

function test(): void {
    if (candidate(""Hi, my name is John"") !== array(""Hi"", ""my"", ""name"", ""is"", ""John"")) { throw new Exception(""Test failed!""); }
    if (candidate(""One, two, three, four, five, six"") !== array(""One"", ""two"", ""three"", ""four"", ""five"", ""six"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hi, my name"") !== array(""Hi"", ""my"", ""name"")) { throw new Exception(""Test failed!""); }
    if (candidate(""One,, two, three, four, five, six,"") !== array(""One"", ""two"", ""three"", ""four"", ""five"", ""six"")) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""ahmed     , gamal"") !== array(""ahmed"", ""gamal"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_102,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଯଦି ସେପରି କୌଣସି ସଂଖ୍ୟା ନାହିଁ, ତେବେ ଫଳନ -1 ଫେରାଇବ _//ସବୁଠାରୁ ବଡ ଯୁଗ୍ମ ସଂଖ୍ଯା ଯାହା [x, y] ଅନ୍ତର୍ଭୁକ୍ତ ରେ ଅଛି. ଯଦି //ଏହି ଫଙ୍କସନ ଦୁଇଟି ସକାରାତ୍ମକ ସଂଖ୍ୟା x ଓ y କୁ ନେଇଥାଏ ଏବଂ  କୁ ଫେରାଇଥାଏ// >>> choose_num(12, 15)
// 14
// >>> choose_num(13, 12)
// -1
function choose_num($x, $y) {
","function choose_num($x, $y) {
    if ($x > $y) {
        return -1;
    }
    
    // Start from the larger number
    $maxNumber = max($x, $y);

    // Check for the largest even number
    if ($maxNumber % 2 == 1) {
        $maxNumber--;
    }

    // Ensure it's within the range
    if ($maxNumber >= min($x, $y)) {
        return $maxNumber;
    }

    return -1;
}","function candidate(...$args) {
    return choose_num(...$args);
}

function test(): void {
    if (candidate(12, 15) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(13, 12) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(33, 12354) !== 12354) { throw new Exception(""Test failed!""); }
    if (candidate(5234, 5233) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(6, 29) !== 28) { throw new Exception(""Test failed!""); }
    if (candidate(27, 10) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(7, 7) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(546, 546) !== 546) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_103,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଯଦି n, m ଠାରୁ ବଡ଼, ତେବେ -1 ଫେରାଇବ.//ଉତ୍ତରକୁ ନିକଟତମ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାକୁ ଘୋଡ଼ାଇ ଏହାକୁ ବାଇନାରୀକୁ ପରିବର୍ତ୍ତନ କରନ୍ତୁ.//n ରୁ m ପର୍ଯ୍ୟନ୍ତ (n ଓ m କୁ ମିଶାଇ) ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ହାରାହାରି ।//ଆପଣଙ୍କୁ ଦୁଇଟି ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଏବଂ m ଦିଆ ଯାଇଛି, ଏବଂ ଆପଣଙ୍କର କାମ ହେଉଛି // >>> rounded_avg(1, 5)
// ""0b11""
// >>> rounded_avg(7, 5)
// -1
// >>> rounded_avg(10, 20)
// ""0b1111""
// >>> rounded_avg(20, 33)
// ""0b11010""
function rounded_avg($n, $m) {
","function rounded_avg($n, $m) {
    if ($n > $m) {
        return -1;
    }
    
    $total_sum = 0;
    $count = 0;
    
    for ($i = $n; $i <= $m; $i++) {
        $total_sum += $i;
        $count++;
    }
    
    $average = $total_sum / $count;
    $rounded_average = round($average);
    
    return ""0b"" . decbin($rounded_average);
}","function candidate(...$args) {
    return rounded_avg(...$args);
}

function test(): void {
    if (candidate(1, 5) !== ""0b11"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 13) !== ""0b1010"") { throw new Exception(""Test failed!""); }
    if (candidate(964, 977) !== ""0b1111001010"") { throw new Exception(""Test failed!""); }
    if (candidate(996, 997) !== ""0b1111100100"") { throw new Exception(""Test failed!""); }
    if (candidate(560, 851) !== ""0b1011000010"") { throw new Exception(""Test failed!""); }
    if (candidate(185, 546) !== ""0b101101110"") { throw new Exception(""Test failed!""); }
    if (candidate(362, 496) !== ""0b110101101"") { throw new Exception(""Test failed!""); }
    if (candidate(350, 902) !== ""0b1001110010"") { throw new Exception(""Test failed!""); }
    if (candidate(197, 233) !== ""0b11010111"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 5) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(5, 1) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(5, 5) !== ""0b101"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_104,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଟିପ୍ପଣୀ: ଫେରାଇଥିବା ଆରେକୁ ବୃଦ୍ଧି କ୍ରମରେ ସର୍ଟ କରାଯିବା ଉଚିତ ।//ସେହି ଉପାଦାନ ଯାହା ପାଖରେ କୌଣସି ଯୁଗ୍ମ ଅଙ୍କ ନଥାଏ ।//ଧନାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ଯା x ର ଏକ ସରଳୀକୃତ ସରଳୀକୃତ ସମୁଦାୟ // >>> unique_digits(array(15, 33, 1422, 1))
// array(1, 15, 33)
// >>> unique_digits(array(152, 323, 1422, 10))
// array()
function unique_digits($x) {
","function unique_digits($x) {
    $result = array();

    foreach ($x as $number) {
        $digits = str_split($number);
        $hasEvenDigit = false;

        foreach ($digits as $digit) {
            if ((int)$digit % 2 == 0) {
                $hasEvenDigit = true;
                break;
            }
        }

        if (!$hasEvenDigit) {
            $result[] = $number;
        }
    }

    sort($result);
    return $result;
}","function candidate(...$args) {
    return unique_digits(...$args);
}

function test(): void {
    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(""Test failed!""); }
    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new Exception(""Test failed!""); }
    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_105,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଏକ, ଦୁଇ, ତିନି, ଚାରି, ପାଞ୍ଚ, ଛଅ, ସାତ, ଆଠ, ନଅ ।//ଫଳାଫଳ ଆରେକୁ ଓଲଟାଇ, ଏବଂ ତାପରେ ପ୍ରତ୍ୟେକ ଅଙ୍କକୁ ଏହାର ଅନୁରୂପ ନାମ ସହିତ  ରୁ ବଦଳାନ୍ତୁ//1 ରୁ 9 ସମେତ ଥିବା ସଂଖ୍ଯାଗୁଡିକୁ ସର୍ଟ କର,// >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))
// array(""Eight"", ""Five"", ""Four"", ""Three"", ""Two"", ""Two"", ""One"", ""One"")
// If the array is empty, return an empty array:
// >>> by_length(array())
// array()
// If the array has any strange number ignore it:
// >>> by_length(array(1, -1, 55))
// array(""One"")
function by_length($arr) {
","function by_length($arr) {
    // Filter the array to include only numbers between 1 and 9
    $filtered = array_filter($arr, function($num) {
        return $num >= 1 && $num <= 9;
    });

    // Sort the filtered array
    sort($filtered);

    // Reverse the sorted array
    $reversed = array_reverse($filtered);

    // Mapping numbers to their corresponding names
    $numberNames = [
        1 => ""One"",
        2 => ""Two"",
        3 => ""Three"",
        4 => ""Four"",
        5 => ""Five"",
        6 => ""Six"",
        7 => ""Seven"",
        8 => ""Eight"",
        9 => ""Nine""
    ];

    // Replace numbers with their corresponding names
    return array_map(function($num) use ($numberNames) {
        return $numberNames[$num];
    }, $reversed);
}","function candidate(...$args) {
    return by_length(...$args);
}

function test(): void {
    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(""Eight"", ""Five"", ""Four"", ""Three"", ""Two"", ""Two"", ""One"", ""One"")) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 55)) !== array(""One"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 3, 2)) !== array(""Three"", ""Two"", ""One"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 4, 8)) !== array(""Nine"", ""Eight"", ""Four"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_106,ory_Orya,php,"<?php
//ଉଦାହରଣ://i ର ଉପାଦାନ ହେଉଛି 1 ରୁ i ପର୍ଯ୍ୟନ୍ତ ସଂଖ୍ୟାର ଗୁଣନ (1 * 2 * ... * i) ।//i 1 ରୁ ଆରମ୍ଭ ହୋଇଥାଏ ।//କିମ୍ବା 1ରୁ i ପର୍ଯ୍ୟନ୍ତ ସଂଖ୍ୟା ସମୂହ ।//ଏବଂ n ଆକାରର ଏକ ସରଳୀକୃତ ସୂଚକ ଫେରାଇଥାଏ, ଯେପରିକି ସୂଚକ i ରେ ଥିବା ଉପାଦାନର ମୂଲ୍ୟ i ର କାରକ ଅଟେ ଯଦି i ଯୁଗ୍ମ //କାର୍ଯ୍ୟକାରିତା f କୁ କାର୍ଯ୍ୟକାରୀ କର ଯାହା n କୁ ଏକ ପାରାମିଟର ଭାବରେ ଗ୍ରହଣ କରେ, // >>> f(5)
// array(1, 2, 6, 24, 15)
function f($n) {
","function f($n) {
    $result = [];
    for ($i = 1; $i <= $n; $i++) {
        if ($i % 2 == 0) {
            $result[] = factorial($i);
        } else {
            $result[] = sum($i);
        }
    }
    return $result;
}

function factorial($num) {
    if ($num == 0) {
        return 1;
    }
    $fact = 1;
    for ($j = 1; $j <= $num; $j++) {
        $fact *= $j;
    }
    return $fact;
}

function sum($num) {
    return ($num * ($num + 1)) / 2;
}","function candidate(...$args) {
    return f(...$args);
}

function test(): void {
    if (candidate(5) !== array(1, 2, 6, 24, 15)) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== array(1, 2, 6, 24, 15, 720, 28)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(1)) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== array(1, 2, 6)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_107,ory_Orya,php,"<?php
//ଉଦାହରଣ 1: //ସମୁଦାୟ {1, n} ପରିସର ମଧ୍ୟରେ ଥିବା ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ପାଲିଣ୍ଡ୍ରୋମ ।//ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଦିଆଗଲା, ଏକ ସରଳୀକରଣ ଫେରାଇ ନିଅନ୍ତୁ ଯେଉଁଥିରେ ଯୁଗ୍ମ ଏବଂ ଅଙ୍କ ସଂଖ୍ୟା ଅଛି // >>> even_odd_palindrome(3)
// array(1, 2)
// Explanation:
// Integer palindrome are 1, 2, 3. one of them is even, and two of them are odd.
// Example 2:
// >>> even_odd_palindrome(12)
// array(4, 6)
// Explanation:
// Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.
// Note:
// 1. 1 <= n <= 10^3
// 2. returned array has the number of even and odd integer palindromes respectively.
function even_odd_palindrome($n) {
","function even_odd_palindrome($n) {
    $even_count = 0;
    $odd_count = 0;
    
    for ($i = 1; $i <= $n; $i++) {
        if (strval($i) === strrev(strval($i))) {
            if ($i % 2 === 0) {
                $even_count++;
            } else {
                $odd_count++;
            }
        }
    }
    
    return array($even_count, $odd_count);
}","function candidate(...$args) {
    return even_odd_palindrome(...$args);
}

function test(): void {
    if (candidate(123) !== array(8, 13)) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== array(4, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== array(1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(63) !== array(6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(25) !== array(5, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(19) !== array(4, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(9) !== array(4, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(0, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_108,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ -123ର ଅଙ୍କ -1, 2 ଏବଂ 3ରେ ହସ୍ତାକ୍ଷର ରହିଛି ।//ଯଦି କୌଣସି ସଂଖ୍ୟା ହେଉଛି ନକାରାତ୍ମକ, ତେବେ ତାର ପ୍ରଥମ ଅଙ୍କ ନକାରାତ୍ମକ ହେବ://ଯେଉଁ ତତ୍ତ୍ବଗୁଡ଼ିକର ଅଙ୍କ ସମୂହ 0ରୁ ଅଧିକ ହୋଇଥାଏ ।//ଏକ ଫଙ୍କସନ୍ count_nums ଲେଖନ୍ତୁ ଯାହା ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଧାରା ନେଇଥାଏ ଏବଂ ଫେରାଇଥାଏ // >>> count_nums(array())
// 0
// >>> count_nums(array(-1, 11, -11))
// 1
// >>> count_nums(array(1, 1, 2))
// 3
function count_nums($arr) {
","function count_nums($arr) {
    $count = 0;
    foreach ($arr as $num) {
        $digits = str_split($num);
        $sum = array_sum(array_map('intval', $digits));
        if ($sum > 0) {
            $count++;
        }
    }
    return $count;
}","function candidate(...$args) {
    return count_nums(...$args);
}

function test(): void {
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_109,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଟିପ୍ପଣୀ: ଦିଆଯାଇଥିବା ଆରେରେ ଅନନ୍ୟ ଉପାଦାନ ଥିବା ସୁନିଶ୍ଚିତ ।//ଯଦି ଦିଆଯାଇଥିବା ସରଳୀକୃତ ଶୂନ୍ୟ ହୋଇଥାଏ ତେବେ true କୁ ଫେରାଇଥାଏ.//ତାପରେ true କୁ ଫେରାଇଦିଅନ୍ତୁ ନଚେତ୍ false କୁ ଫେରାଇଦିଅନ୍ତୁ.//ଉପରୋକ୍ତ କାର୍ଯ୍ୟ କରି ସର୍ଟ କରାଯାଇଥିବା ଆରେ ପାଇବା ସମ୍ଭବ ହେଲେ //ମାର୍ଜିନରେ ପ୍ରାରମ୍ଭିକ ସ୍ଥିତି ଅର୍ଥାତ୍ ୦ମ ସୂଚକାଙ୍କ ।//ସଠିକ ଦିଗରେ ସ୍ଥିତି. ଆରେର ଶେଷ ଉପାଦାନକୁ ସ୍ଥାନାନ୍ତରିତ କରାଯିବ //ଗୋଟିଏ ଡାହାଣକୁ ଘୁଞ୍ଚିବା କାର୍ଯ୍ୟ ଅର୍ଥାତ୍ ଆରେର ସମସ୍ତ ଉପାଦାନକୁ ଗୋଟିଏ ଘୁଞ୍ଚାଇବା ।//ଆପଣ ଯେତେଥର ଚାହିଁବେ ଡାହାଣକୁ ଘୁଞ୍ଚାଇ ପାରିବେ ।//ନିମ୍ନଲିଖିତ କାର୍ଯ୍ୟଟିକୁ ଦିଆଯାଇଥିବା ଆରେରେ କର: // କରି ଏକ ଆରେକୁ ଅଣ-କ୍ରମବର୍ଦ୍ଧକ କ୍ରମରେ ସର୍ଟ କରିବା ସମ୍ଭବ ଅଟେ ।//ଆରେରେ ଥିବା ସଂଖ୍ୟାଗୁଡ଼ିକ ଆକସ୍ମିକ ଭାବରେ ସଜାଡ଼ାଯିବ । ଆପଣଙ୍କର କାର୍ଯ୍ୟ ହେଉଛି ନିର୍ଣ୍ଣୟ କରିବା //ଆମର N ସଂଖ୍ୟକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ଏକ 'arr' ଅଛି arr[1], arr[2], ..., arr[N] ।// >>> move_one_ball(array(3, 4, 5, 1, 2))
// true
// Explanation: By performin 2 right shift operations, non-decreasing order can
// be achieved for the given array.
// >>> move_one_ball(array(3, 5, 4, 1, 2))
// false
// Explanation:It is not possible to get non-decreasing order for the given
// array by performing any number of right shift operations.
function move_one_ball($arr) {
","function move_one_ball($arr) {
    $n = count($arr);
    if ($n <= 1) return true;

    $shiftCount = 0;

    // Count breaks in the sorted order
    for ($i = 0; $i < $n; $i++) {
        if ($arr[$i] > $arr[($i + 1) % $n]) {
            $shiftCount++;
            if ($shiftCount > 1) {
                return false;
            }
        }
    }

    // If no more than one break, the array can be rotated to sorted order
    return true;
}","function candidate(...$args) {
    return move_one_ball(...$args);
}

function test(): void {
    if (candidate(array(3, 4, 5, 1, 2)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 5, 10, 1, 2)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 1, 2)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 5, 4, 1, 2)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_110,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଅନ୍ୟଥା, ""ନା""କୁ ଫେରାଇଦେବେ//lst1 ର ସମସ୍ତ ଉପାଦାନ ସମ ସମ ହେବା ପାଇଁ, ""YES"" କୁ ଫେରାଇଦିଅନ୍ତୁ.//ଯଦି ଏହା ସମ୍ଭବ lst1 ଏବଂ lst2 ମଧ୍ୟରେ ଉପାଦାନଗୁଡିକର ବିନିମୟ କରିବା ପାଇଁ //lst1 ଏବଂ lst2 ମଧ୍ୟରେ ବିନିମୟ ହୋଇଥିବା ଉପାଦାନର ସଂଖ୍ୟାରେ କୌଣସି ସୀମା ନାହିଁ ।//lst1 କୁ କେବଳ ଯୁଗ୍ମ ସଂଖ୍ୟାର ଏକ ସରଳୀକରଣ କରିବା ପାଇଁ _//ଏବଂ ଏହା ନିର୍ଣ୍ଣୟ କରେ ଯେ କଣ ଏକ୍ସଚେଞ୍ଜ ଅଫ୍ ଇଲେକ୍ଟ୍ରନ୍ସ୍ ସମ୍ଭବ କି ନୁହେଁ ।//ଏହି ସମସ୍ୟା ରେ, ଆପଣ ଏକ ଫଙ୍କସନ କୁ କାର୍ଯ୍ୟକାରୀ କରିବେ ଯାହା ଦୁଇଟା ସଂଖ୍ୟା ର ଆରେ କୁ ନେଇଥାଏ, // >>> exchange(array(1, 2, 3, 4), array(1, 2, 3, 4))
// ""YES""
// >>> exchange(array(1, 2, 3, 4), array(1, 5, 3, 4))
// ""NO""
// It is assumed that the input arrays will be non-empty.
function exchange($lst1, $lst2) {
","function exchange($lst1, $lst2) {
    // Check if lst2 contains at least one even number
    $hasEvenInLst2 = false;
    foreach ($lst2 as $num) {
        if ($num % 2 == 0) {
            $hasEvenInLst2 = true;
            break;
        }
    }

    // Check if all lst1 numbers are even already, if so return ""YES""
    $allEvenInLst1 = true;
    foreach ($lst1 as $num) {
        if ($num % 2 != 0) {
            $allEvenInLst1 = false;
            break;
        }
    }
    
    // If all numbers in lst1 are even or lst2 has at least one even number, return ""YES""
    if ($allEvenInLst1 || $hasEvenInLst2) {
        return ""YES"";
    }
    
    // Otherwise, return ""NO""
    return ""NO"";
}","function candidate(...$args) {
    return exchange(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 7, 3), array(2, 6, 4)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(100, 200), array(200, 200)) !== ""YES"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_111,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଯଦି ଏକାଧିକ ଅକ୍ଷର ସମାନ ଭାବରେ ଦେଖାଯାଏ, ତେବେ ସେଗୁଡ଼ିକୁ ଫେରାଇ ଦିଅନ୍ତୁ ।//ଏହି ଅକ୍ଷରଟି ସବୁଠାରୁ ଅଧିକ ଥର ପୁନରାବୃତ୍ତି ହୋଇଥାଏ ଏବଂ ଏଥିରେ ସେହି ଅକ୍ଷରର ସଂଖ୍ୟା ଥାଏ ।//ଏକ ସ୍ପେସ୍ ପୃଥକ ଛୋଟ ଅକ୍ଷରକୁ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଦିଆଯାଇଥିବା, ଏକ ଆରେ ଫେରାଇଥାଏ // >>> histogram(""a b c"")
// array(""a"" => 1, ""b"" => 1, ""c"" => 1)
// >>> histogram(""a b b a"")
// array(""a"" => 2, ""b"" => 2)
// >>> histogram(""a b c a b"")
// array(""a"" => 2, ""b"" => 2)
// >>> histogram(""b b b b a"")
// array(""b"" => 4)
// >>> histogram("""")
// array()
function histogram($test) {
","function histogram($test) {
    // Split the input string into an array of letters
    $letters = explode(' ', $test);

    // Create an associative array to count occurrences of each letter
    $counts = array();

    foreach ($letters as $letter) {
        if ($letter !== '') {
            if (array_key_exists($letter, $counts)) {
                $counts[$letter]++;
            } else {
                $counts[$letter] = 1;
            }
        }
    }

    // Find the maximum occurrence count
    $maxCount = 0;
    foreach ($counts as $count) {
        if ($count > $maxCount) {
            $maxCount = $count;
        }
    }

    // Gather all letters with the maximum occurrence count
    $result = array();
    foreach ($counts as $letter => $count) {
        if ($count == $maxCount) {
            $result[$letter] = $count;
        }
    }

    return $result;
}","function candidate(...$args) {
    return histogram(...$args);
}

function test(): void {
    if (candidate(""a b b a"") !== array(""a"" => 2, ""b"" => 2)) { throw new Exception(""Test failed!""); }
    if (candidate(""a b c a b"") !== array(""a"" => 2, ""b"" => 2)) { throw new Exception(""Test failed!""); }
    if (candidate(""a b c d g"") !== array(""a"" => 1, ""b"" => 1, ""c"" => 1, ""d"" => 1, ""g"" => 1)) { throw new Exception(""Test failed!""); }
    if (candidate(""r t g"") !== array(""r"" => 1, ""t"" => 1, ""g"" => 1)) { throw new Exception(""Test failed!""); }
    if (candidate(""b b b b a"") !== array(""b"" => 4)) { throw new Exception(""Test failed!""); }
    if (candidate(""r t g"") !== array(""r"" => 1, ""t"" => 1, ""g"" => 1)) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""a"") !== array(""a"" => 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_112,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଆପଣ ଗୋଟିଏ ଆରେ ଫେରାଇବେ ଯେଉଁଥିରେ ପରିଣାମ ଷ୍ଟ୍ରିଙ୍ଗ ଏବଂ ଯାଞ୍ଚ ପାଇଁ ସତ୍ୟ/ମିଥ୍ୟା ଅଛି.//ଗୋଟିଏ ଧାଡ଼ିକୁ ପାଲିଣ୍ଡ୍ରୋମ କୁହାଯାଏ ଯଦି ଏହା ପଛକୁ ଆଗକୁ ସମାନ ଭାବରେ ପଢ଼ାଯାଏ ।//ତାପରେ ଯାଞ୍ଚ କରନ୍ତୁ ଯେ ଫଳାଫଳ ଶୃଙ୍ଖଳଟି ପାଲିଣ୍ଡ୍ରୋମ ଅଟେ କି ନାହିଁ ।//ଆମକୁ ଦୁଇଟି ଷ୍ଟ୍ରିଙ୍ଗ s ଏବଂ c ଦିଆଯାଇଛି, ଆପଣଙ୍କୁ s ରେ ଥିବା ସମସ୍ତ ଅକ୍ଷରକୁ କାଢ଼ିବାକୁ ହେବ ଯାହା c ରେ ଥିବା କୌଣସି ଅକ୍ଷର ସହିତ ସମାନ //କାର୍ଯ୍ୟ // >>> reverse_delete(""abcde"", ""ae"")
// array(""bcd"", false)
// >>> reverse_delete(""abcdef"", ""b"")
// array(""acdef"", false)
// >>> reverse_delete(""abcdedcba"", ""ab"")
// array(""cdedc"", true)
function reverse_delete($s, $c) {
","function reverse_delete($s, $c) {
    // Remove all characters in $s that are present in $c
    $result = str_replace(str_split($c), '', $s);
    
    // Check if the result string is a palindrome
    $is_palindrome = ($result === strrev($result));
    
    // Return the result string and whether it is a palindrome
    return array($result, $is_palindrome);
}","function candidate(...$args) {
    return reverse_delete(...$args);
}

function test(): void {
    if (candidate(""abcde"", ""ae"") !== array(""bcd"", false)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdef"", ""b"") !== array(""acdef"", false)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdedcba"", ""ab"") !== array(""cdedc"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""dwik"", ""w"") !== array(""dik"", false)) { throw new Exception(""Test failed!""); }
    if (candidate(""a"", ""a"") !== array("""", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdedcba"", """") !== array(""abcdedcba"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdedcba"", ""v"") !== array(""abcdedcba"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""vabba"", ""v"") !== array(""abba"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""mamma"", ""mia"") !== array("""", true)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_113,ory_Orya,php,"<?php
// ଇନପୁଟ୍ର i'th ଷ୍ଟ୍ରିଙ୍ଗରେ ଅଜଣା ଅଙ୍କ ଅଛି//"" ଯେଉଁଠାରେ ସମସ୍ତ 'i' କୁ ସଂଖ୍ୟା  ଦ୍ୱାରା ବଦଳାଯିବା ଉଚିତ//ଆଉଟପୁଟର ପ୍ରତ୍ୟେକ ଉପାଦାନ i, ରେ ଥିବା ଅଜଣା ଉପାଦାନର ସଂଖ୍ୟା ହେବା ଉଚିତ ।//ଗୋଟିଏ ଧାଡ଼ିର ଏକ ସରଳୀକରଣ ଦିଆଗଲା, ଯେଉଁଠାରେ ପ୍ରତ୍ୟେକ ସରଳୀକରଣ କେବଳ ଅଙ୍କଗୁଡ଼ିକର ସମଷ୍ଟି, ଏକ ସରଳୀକରଣ ଫେରାଇଥାଏ.// >>> odd_count(array(""1234567""))
// array(""the number of odd elements 4n the str4ng 4 of the 4nput."")
// >>> odd_count(array(""3"", ""11111111""))
// array(""the number of odd elements 1n the str1ng 1 of the 1nput."", ""the number of odd elements 8n the str8ng 8 of the 8nput."")
function odd_count($lst) {
","function odd_count($lst) {
    $result = array();
    foreach ($lst as $string) {
        $oddCount = 0;
        
        // Count odd digits in the string
        for ($i = 0; $i < strlen($string); $i++) {
            if ((int)$string[$i] % 2 !== 0) {
                $oddCount++;
            }
        }
        
        // Create the formatted string
        $result[] = ""the number of odd elements "" . $oddCount . ""n the str"" . $oddCount . ""ng "" . $oddCount . "" of the "" . $oddCount . ""nput."";
    }
    return $result;
}","function candidate(...$args) {
    return odd_count(...$args);
}

function test(): void {
    if (candidate(array(""1234567"")) !== array(""the number of odd elements 4n the str4ng 4 of the 4nput."")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""3"", ""11111111"")) !== array(""the number of odd elements 1n the str1ng 1 of the 1nput."", ""the number of odd elements 8n the str8ng 8 of the 8nput."")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""271"", ""137"", ""314"")) !== array(""the number of odd elements 2n the str2ng 2 of the 2nput."", ""the number of odd elements 3n the str3ng 3 of the 3nput."", ""the number of odd elements 2n the str2ng 2 of the 2nput."")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_114,ory_Orya,php,"<?php
//ଉଦାହରଣ //ା ା ା ା ା//ଏକ ସମୁଦାୟ ସଂଖ୍ୟା n ର ଏକ ସରଳୀକରଣ ଦିଆଯାଇ, କୌଣସି ଅଣ-ଖାଲି ଉପ-ସାରୀର ସର୍ବନିମ୍ନ ସମୁଦାୟକୁ ଖୋଜନ୍ତୁ // >>> minSubArraySum(array(2, 3, 4, 1, 2, 4))
// 1
// >>> minSubArraySum(array(-1, -2, -3))
// -6
function minSubArraySum($nums) {
","function minSubArraySum($nums) {
    $currentSum = $nums[0];
    $minSum = $nums[0];

    for ($i = 1; $i < count($nums); $i++) {
        $currentSum = min($nums[$i], $currentSum + $nums[$i]);
        $minSum = min($minSum, $currentSum);
    }

    return $minSum;
}","function candidate(...$args) {
    return minSubArraySum(...$args);
}

function test(): void {
    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw new Exception(""Test failed!""); }
    if (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(""Test failed!""); }
    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10)) !== -10) { throw new Exception(""Test failed!""); }
    if (candidate(array(7)) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1)) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_115,ory_Orya,php,"<?php
//ଉଦାହରଣ 1: //ଆପଣ କେତେଥର ବାଲ୍ଟିକୁ ତଳକୁ ଆଣିବାକୁ ଚାହୁଁଛନ୍ତି ତାହା ଲେଖନ୍ତୁ ।//ଆପଣଙ୍କ କାମ ହେଉଛି କୂଅକୁ ଖାଲି କରିବା ପାଇଁ ଡବା ବ୍ୟବହାର କରିବା ।//ଏବଂ ସମସ୍ତ ବାଲ୍ଟିରେ ସମାନ କ୍ଷମତା ରହିଛି ।//ପ୍ରତ୍ୟେକ କୂଅରେ ଏକ ବାଡ଼ୀ ରହିଛି, ଯାହାଦ୍ୱାରା ପାଣି ବାହାର କରାଯାଇପାରିବ ।//ଏବଂ ପ୍ରତ୍ୟେକ 1 ଗୋଟିଏ ଧାଡ଼ିରେ ଗୋଟିଏ ଜଳ ଏକକକୁ ପ୍ରତିନିଧିତ୍ୱ କରେ ।//ଆପଣଙ୍କୁ ଏକ ଚତୁର୍ଭୁଜ ଗ୍ରୀଡ ଦିଆଯାଉଛି, ପ୍ରତ୍ୟେକ ଧାଡି ଗୋଟିଏ କୂଅକୁ ପ୍ରତିନିଧିତ୍ୱ କରେ ।// >>> max_fill(array(array(0, 0, 1, 0), array(0, 1, 0, 0), array(1, 1, 1, 1)), 1)
// 6
// Example 2:
// >>> max_fill(array(array(0, 0, 1, 1), array(0, 0, 0, 0), array(1, 1, 1, 1), array(0, 1, 1, 1)), 2)
// 5
// Example 3:
// >>> max_fill(array(array(0, 0, 0), array(0, 0, 0)), 5)
// 0
// Constraints:
// * all wells have the same length
// * 1 <= grid.length <= 10^2
// * 1 <= grid[:,1].length <= 10^2
// * grid[i][j] -> 0 | 1
// * 1 <= capacity <= 10
function max_fill($grid, $capacity) {
","function max_fill($grid, $capacity) {
    $totalTimes = 0;
    
    foreach ($grid as $well) {
        $waterUnits = array_sum($well);
        $times = ceil($waterUnits / $capacity);
        $totalTimes += $times;
    }
    
    return $totalTimes;
}","function candidate(...$args) {
    return max_fill(...$args);
}

function test(): void {
    if (candidate(array(array(0, 0, 1, 0), array(0, 1, 0, 0), array(1, 1, 1, 1)), 1) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(0, 0, 1, 1), array(0, 0, 0, 0), array(1, 1, 1, 1), array(0, 1, 1, 1)), 2) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(0, 0, 0), array(0, 0, 0)), 5) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 1, 1, 1), array(1, 1, 1, 1)), 2) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 1, 1, 1), array(1, 1, 1, 1)), 9) !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_116,ory_Orya,php,"<?php
//ଏହାକୁ ନିମ୍ନଲିଖିତ ଢଙ୍ଗରେ କାର୍ଯ୍ୟକାରୀ କରାଯିବା ଉଚିତ://ସମାନ ସଂଖ୍ୟକ ଏକକ ପାଇଁ, ଦଶମିକ ମୂଲ୍ୟ ଆଧାରରେ ସର୍ଟ କରନ୍ତୁ.//ଏକକଗୁଡ଼ିକର ସଂଖ୍ୟା ସେମାନଙ୍କର ବାଇନାରୀ ପ୍ରତିନିଧିତ୍ୱରେ ବୃଦ୍ଧି କ୍ରମରେ _//ଏହି କଟା ରେ, ଆପଣଙ୍କୁ ଏକ ନନ୍-ନେଗେଟିଭ୍ ଇଣ୍ଟେଜର ଆରେକୁ ସର୍ଟ କରିବାକୁ ହେବ // >>> sort_array(array(1, 5, 2, 3, 4))
// array(1, 2, 3, 4, 5)
// >>> sort_array(array(-2, -3, -4, -5, -6))
// array(-6, -5, -4, -3, -2)
// >>> sort_array(array(1, 0, 2, 3, 4))
// array(0, 1, 2, 3, 4)
function sort_array($arr) {
","function sort_array($arr) {
    usort($arr, function($a, $b) {
        $countA = substr_count(decbin($a), '1');
        $countB = substr_count(decbin($b), '1');
        if ($countA !== $countB) {
            return $countA - $countB;
        } else {
            return $a - $b;
        }
    });
    return $arr;
}","function candidate(...$args) {
    return sort_array(...$args);
}

function test(): void {
    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_117,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଟିପ୍ପଣୀ: ଆପଣ ଧରିନେବେ ଯେ ଇନପୁଟ୍ ଷ୍ଟ୍ରିଙ୍ଗରେ କେବଳ ଅକ୍ଷର ଏବଂ ସ୍ପେସ୍ ଅଛି ।//ଯଦି string s ଖାଲି ହୋଇଥାଏ ତେବେ ଫଳନଟି ଏକ ଖାଲି ଆରେ ଫେରାଇଥାଏ.//n ବ୍ୟଞ୍ଜନ, ଏହି ଶବ୍ଦଗୁଡ଼ିକର କ୍ରମରେ s ବାକ୍ୟଖଣ୍ଡରେ ଦେଖାଯାଏ ।//ଗୋଟିଏ ଫଳନ ଯାହା s ସଂଖ୍ୟକ ବାକ୍ୟଖଣ୍ଡରୁ ସମସ୍ତ ଶବ୍ଦକୁ ଏକ ସରଳୀକୃତ ସୂଚକ ଭାବରେ ଫେରାଇଥାଏ ।//ଗୋଟିଏ ଧାଡ଼ି s ଏବଂ ଗୋଟିଏ ପ୍ରାକୃତିକ ସଂଖ୍ୟା n ଦିଆଗଲା, ଆପଣଙ୍କୁ କାର୍ଯ୍ୟକାରୀ କରିବା ପାଇଁ କୁହାଯାଇଛି // >>> select_words(""Mary had a little lamb"", 4)
// array(""little"")
// >>> select_words(""Mary had a little lamb"", 3)
// array(""Mary"", ""lamb"")
// >>> select_words(""simple white space"", 2)
// array()
// >>> select_words(""Hello world"", 4)
// array(""world"")
// >>> select_words(""Uncle sam"", 3)
// array(""Uncle"")
function select_words($s, $n) {
","function select_words($s, $n) {
    $words = explode(' ', $s); // Split the string into words
    $result = [];
    $vowels = ['a', 'e', 'i', 'o', 'u'];

    foreach ($words as $word) {
        $count = 0;
        $lowercaseWord = strtolower($word);
        
        // Count consonants in the word
        for ($i = 0; $i < strlen($lowercaseWord); $i++) {
            if (ctype_alpha($lowercaseWord[$i]) && !in_array($lowercaseWord[$i], $vowels)) {
                $count++;
            }
        }

        // Add word to result if it has exactly n consonants
        if ($count === $n) {
            $result[] = $word;
        }
    }

    return $result;
}","function candidate(...$args) {
    return select_words(...$args);
}

function test(): void {
    if (candidate(""Mary had a little lamb"", 4) !== array(""little"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Mary had a little lamb"", 3) !== array(""Mary"", ""lamb"")) { throw new Exception(""Test failed!""); }
    if (candidate(""simple white space"", 2) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello world"", 4) !== array(""world"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Uncle sam"", 3) !== array(""Uncle"")) { throw new Exception(""Test failed!""); }
    if (candidate("""", 4) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""a b c d e f"", 1) !== array(""b"", ""c"", ""d"", ""f"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_118,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଆପଣ ଭାବୁଥିବେ ଯେ ଦିଆଯାଇଥିବା ଷ୍ଟ୍ରିଙ୍ଗରେ କେବଳ ଇଂରାଜୀ ଅକ୍ଷର ଅଛି.//ଉପରୋକ୍ତ ସର୍ତ୍ତ ପୂରଣ କରୁଥିବା କୌଣସି ସ୍ୱରବର୍ଣ୍ଣ ଖୋଜନ୍ତୁ ।//ଆରମ୍ଭ ଏବଂ ସମାପ୍ତିରେ ସ୍ୱରଗୁଡ଼ିକ ଗଣନା କରାଯାଏ ନାହିଁ. ଯଦି ଆପଣ ନକରିଛନ୍ତି ତେବେ ଖାଲି ଷ୍ଟ୍ରିଙ୍ଗ୍ ଫେରାନ୍ତୁ //ଦୁଇଟି ବର୍ଣ୍ଣମାଳା ଶବ୍ଦଟିର ଡାହାଣ ପାର୍ଶ୍ବରୁ (ମୌଳିକ ବର୍ଣ୍ଣମାଳା ସମ୍ବେଦନଶୀଳ) ।//ଆପଣଙ୍କୁ ଗୋଟିଏ ଶବ୍ଦ ଦିଆଯାଉଛି, ଆପଣଙ୍କ କାମ ହେଉଛି, ସେହି ଶବ୍ଦ ମଧ୍ୟରେ ଥିବା ନିକଟତମ ସ୍ୱର ଚିହ୍ନକୁ ଖୋଜିବା ।// >>> get_closest_vowel(""yogurt"")
// ""u""
// >>> get_closest_vowel(""FULL"")
// ""U""
// >>> get_closest_vowel(""quick"")
// """"
// >>> get_closest_vowel(""ab"")
// """"
function get_closest_vowel($word) {
","function get_closest_vowel($word) {
    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];
    $length = strlen($word);

    // Iterate from the end of the word towards the beginning
    for ($i = $length - 2; $i > 0; $i--) {
        if (in_array($word[$i], $vowels)) {
            // Check if adjacent characters are consonants
            if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {
                return $word[$i];
            }
        }
    }

    // Return empty string if no suitable vowel was found
    return '';
}","function candidate(...$args) {
    return get_closest_vowel(...$args);
}

function test(): void {
    if (candidate(""yogurt"") !== ""u"") { throw new Exception(""Test failed!""); }
    if (candidate(""full"") !== ""u"") { throw new Exception(""Test failed!""); }
    if (candidate(""easy"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""eAsy"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""ali"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""bad"") !== ""a"") { throw new Exception(""Test failed!""); }
    if (candidate(""most"") !== ""o"") { throw new Exception(""Test failed!""); }
    if (candidate(""ab"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""ba"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""quick"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""anime"") !== ""i"") { throw new Exception(""Test failed!""); }
    if (candidate(""Asia"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""Above"") !== ""o"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_119,ory_Orya,php,"<?php
//ଉଦାହରଣ://'ହଁ' ଫେରାଇଦିଅନ୍ତୁ ଯଦି ଭଲ ଷ୍ଟ୍ରିଙ୍ଗ ତିଆରି କରିବାର କୌଣସି ଉପାୟ ଅଛି, ଏବଂ ଅନ୍ୟଥା 'ନା' ଫେରାଇଦିଅନ୍ତୁ.//"" (()) "" ନୁହେଁ ।//ସନ୍ତୁଳିତ. ଉଦାହରଣ ସ୍ୱରୂପ: '(((() ' ବାକ୍ୟଖଣ୍ଡ ଭଲ, ଯେତେବେଳେ କି  ବାକ୍ୟଖଣ୍ଡ //ଗୋଟିଏ ଧାଡ଼ି S କୁ ଭଲ ବୋଲି ବିବେଚନା କରାଯାଏ ଯଦି ଏବଂ କେବଳ ଯଦି S ରେ ଥିବା ସମସ୍ତ ବନ୍ଧନୀ //କିଛି କ୍ରମ, ଯେ ଫଳସ୍ୱରୂପ ବାକ୍ୟଖଣ୍ଡ ଭଲ ହେବ.//ଆପଣଙ୍କର କାମ ହେଉଛି ଯାଞ୍ଚ କରିବା ଏହା ସମ୍ଭବ କି ଦୁଇଟି ଷ୍ଟ୍ରିଙ୍ଗକୁ ଯୋଡିବା ସମ୍ଭବ କି ନୁହେଁ //କେବଳ "" (~) "" କିମ୍ବା "" (~) "" କୁଣ୍ଡଳୀରେ ଲେଖାଥିବା ବାକ୍ୟ ।//ଆପଣଙ୍କୁ ଦୁଇଟି ଷ୍ଟ୍ରିଙ୍ଗର ଏକ ଆରେ ଦିଆଗଲା, ଦୁଇଟି ଷ୍ଟ୍ରିଙ୍ଗରେ ଖୋଲା ଅଛି // >>> match_parens(array(""()("", "")""))
// ""Yes""
// >>> match_parens(array("")"", "")""))
// ""No""
function match_parens($lst) {
","function match_parens($lst) {
    $str1 = $lst[0];
    $str2 = $lst[1];

    // Function to determine if parentheses are balanced
    function is_balanced($s) {
        $balance = 0;
        for ($i = 0; $i < strlen($s); $i++) {
            if ($s[$i] === '(') {
                $balance++;
            } else {
                $balance--;
            }
            // If balance is negative, parentheses are not balanced
            if ($balance < 0) {
                return false;
            }
        }
        // Check that balance is zero
        return $balance === 0;
    }

    // Check all concatenation combinations
    $concat1 = $str1 . $str2;
    $concat2 = $str2 . $str1;

    if (is_balanced($concat1) || is_balanced($concat2)) {
        return ""Yes"";
    } else {
        return ""No"";
    }
}","function candidate(...$args) {
    return match_parens(...$args);
}

function test(): void {
    if (candidate(array(""()("", "")"")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")"", "")"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(()(())"", ""())())"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")())"", ""(()()("")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(())))"", ""(()())(("")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""()"", ""())"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(()("", ""()))()"")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(((("", ""((())"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")(()"", ""(()("")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")("", "")("")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""("", "")"")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")"", ""("")) !== ""Yes"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_120,ory_Orya,php,"<?php
//ଉଦାହରଣ 1: //ଲମ୍ବ k ର ସର୍ବାଧିକ k ସଂଖ୍ୟା ସହିତ arr ରେ _//ଏକ ଧନାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା k ସହିତ ଏକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା arr ଦିଆଗଲା, ଏକ ସର୍ଟ ହୋଇଥିବା ଆରେ ଫେରାଇଥାଏ // >>> maximum(array(-3, -4, 5), 3)
// array(-4, -3, 5)
// Example 2:
// >>> maximum(array(4, -4, 4), 2)
// array(4, 4)
// Example 3:
// >>> maximum(array(-3, 2, 1, 2, -1, -2, 1), 1)
// array(2)
// Note:
// 1. The length of the array will be in the range of [1, 1000].
// 2. The elements in the array will be in the range of [-1000, 1000].
// 3. 0 <= k <= len(arr)
function maximum($arr, $k) {
","function maximum($arr, $k) {
    rsort($arr);
    return array_slice($arr, 0, $k);
}","function candidate(...$args) {
    return maximum(...$args);
}

function test(): void {
    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_121,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଏକ ଅଣ-ଖାଲି ସଂଖ୍ୟାର ଧାରା ଦେଇ, ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ ସମ// >>> solution(array(5, 8, 7, 1))
// 12
// >>> solution(array(3, 3, 3, 3, 3))
// 9
// >>> solution(array(30, 13, 24, 321))
// 0
function solution($lst) {
","function solution($lst) {
    $sum = 0;
    for ($i = 0; $i < count($lst); $i += 2) {
        if ($lst[$i] % 2 != 0) {
            $sum += $lst[$i];
        }
    }
    return $sum;
}","function candidate(...$args) {
    return solution(...$args);
}

function test(): void {
    if (candidate(array(5, 8, 7, 1)) !== 12) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 3, 3, 3, 3)) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(array(30, 13, 24, 321)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 9)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 8)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(30, 13, 23, 32)) !== 23) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 13, 2, 9)) !== 3) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_122,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏହା ହେଉଛି ସେହି ଉପାଦାନର ସମଷ୍ଟି ଯାହାର ପ୍ରଥମ k ଉପାଦାନର ସଂଖ୍ୟାରୁ ସର୍ବାଧିକ ଦୁଇଟି ଅଙ୍କ ଅଛି ।//ଏକ ଅସରନ୍ତି ସମୁଦାୟ ସଂଖ୍ୟା arr ଏବଂ ଏକ ସମୁଦାୟ ସଂଖ୍ୟା k ଦିଆଗଲା, ଫେରାଇ // >>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)
// 24
// Constraints:
// 1. 1 <= len(arr) <= 100
// 2. 1 <= k <= len(arr)
function add_elements($arr, $k) {
","function add_elements($arr, $k) {
    $sum = 0;
    for ($i = 0; $i < $k; $i++) {
        if ($arr[$i] >= -99 && $arr[$i] <= 99) {
            $sum += $arr[$i];
        }
    }
    return $sum;
}","function candidate(...$args) {
    return add_elements(...$args);
}

function test(): void {
    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(""Test failed!""); }
    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(""Test failed!""); }
    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(""Test failed!""); }
    if (candidate(array(1), 1) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_123,ory_Orya,php,"<?php
//get_odd_collatz(5) ଫେରାଇଥାଏ [1, 5] # 5 ପାଇଁ କୋଲାଟଜ କ୍ରମ ହେଉଛି [5, 16, 8, 4, 2, 1], ତେଣୁ ଅଜଣା ସଂଖ୍ୟାଗୁଡ଼ିକ ହେଉଛି କେବଳ 1, ଏବଂ 5 । //ଉଦାହରଣ ସ୍ୱରୂପ: //2. ଫେରସ୍ତ ହୋଇଥିବା ଆରେକୁ ବୃଦ୍ଧି କ୍ରମରେ ସର୍ଟ କରାଯାଇଛି ।//1. କୋଲାଟଜ (୧) ହେଉଛି [1] ।//ନୋଟ: //ଅନୁମାନ ହେଉଛି ଯେ n ର କୌଣସି ମୂଲ୍ୟ ନଥାଇ ମଧ୍ୟ, କ୍ରମ ସର୍ବଦା 1 କୁ ପହଞ୍ଚିବ.//ପୂର୍ବବର୍ତ୍ତୀ ବାକ୍ୟଟି ଅଙ୍କକୋଷୀୟ ହେଲେ ପରବର୍ତ୍ତୀ ବାକ୍ୟଟି ପୂର୍ବବର୍ତ୍ତୀ ବାକ୍ୟର 3 ଗୁଣନ ହେବ//ପୂର୍ବବର୍ତ୍ତୀ ବାକ୍ୟଟି ଏହିପରି: ଯଦି ପୂର୍ବବର୍ତ୍ତୀ ବାକ୍ୟଟି ଯୁଗ୍ମ, ତେବେ ପରବର୍ତ୍ତୀ ବାକ୍ୟଟି  ର ଅଧା ହେବ//ନିମ୍ନଲିଖିତ ଭାବରେ: ଯେକୌଣସି ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ରୁ ଆରମ୍ଭ କରନ୍ତୁ । ତାପରେ ପ୍ରତ୍ୟେକ ବାକ୍ୟ  ରୁ ପ୍ରାପ୍ତ ହୁଏ ।//କୋଲାଟଜ ଅନୁମାନ ହେଉଛି ଗଣିତରେ ଏକ ଅନୁମାନ ଯାହାକି ଏକ ନିର୍ଦ୍ଦିଷ୍ଟ କ୍ରମ ସମ୍ବନ୍ଧରେ //ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଦିଆଗଲା, ଏକ ସର୍ଟ ଆରେ ଫେରାଇଥାଏ ଯେଉଁଥିରେ କୋଲାଟଜ କ୍ରମରେ ଅଜଣା ସଂଖ୍ୟା ଥାଏ ।// >>> get_odd_collatz(5)
// array(1, 5)
function get_odd_collatz($n) {
","function get_odd_collatz($n) {
    $collatz = [];
    while ($n != 1) {
        if ($n % 2 != 0) {
            $collatz[] = $n;
        }
        if ($n % 2 == 0) {
            $n = $n / 2;
        } else {
            $n = 3 * $n + 1;
        }
    }
    $collatz[] = 1; // Adding 1 as it's always the last part of any Collatz sequence
    sort($collatz);
    return $collatz;
}","function candidate(...$args) {
    return get_odd_collatz(...$args);
}

function test(): void {
    if (candidate(14) !== array(1, 5, 7, 11, 13, 17)) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== array(1, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== array(1, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_124,ory_Orya,php,"<?php
//4. ତାରିଖକୁ ଏମ୍ଏମ୍-ଡିଡି-ୟେୟେୟେ ଫର୍ମାଟରେ ଲେଖିବା ଉଚିତ ।//3. ମାସର ସଂଖ୍ୟା 1 ରୁ କମ କିମ୍ବା 12 ରୁ ଅଧିକ ହେବା ଉଚିତ ନୁହେଁ ।//ମାସ 1,3,5,7,8,10,12 ପାଇଁ ଦିନ ସଂଖ୍ୟା 1 ରୁ କମ କିମ୍ବା 31 ଦିନରୁ ଅଧିକ ନୁହେଁ ଏବଂ ମାସ 4,6,9,11 ପାଇଁ ଦିନ ସଂଖ୍ୟା 1 ରୁ କମ କିମ୍ବା 30 ଦିନରୁ ଅଧିକ ନୁହେଁ ଏବଂ ମାସ 2 ପାଇଁ ଦିନ ସଂଖ୍ୟା 1 ରୁ କମ୍ କିମ୍ବା 29 ଦିନରୁ ଅଧିକ ନୁହେଁ ।//1. ତାରିଖ ଶୃଙ୍ଖଳ ଖାଲି ନୁହେଁ ।//ନିମ୍ନଲିଖିତ ସମସ୍ତ ନିୟମ ପୂରଣ ହେଲେ ତାରିଖ ବୈଧ ହେବ://ଯଦି ତାରିଖଟି ବୈଧ, ତେବେ ଏହା ସତ୍ୟ ଫେରାଇଥାଏ ଅନ୍ୟଥା ମିଥ୍ୟା ।//ଆପଣଙ୍କୁ ଏକ ଫଙ୍କସନ ଲେଖିବାକୁ ହେବ ଯାହା ଦିଆଯାଇଥିବା ତାରିଖ ଷ୍ଟ୍ରିଙ୍ଗକୁ ବୈଧ କରିଥାଏ ଏବଂ // >>> valid_date(""03-11-2000"")
// true
// >>> valid_date(""15-01-2012"")
// false
// >>> valid_date(""04-0-2040"")
// false
// >>> valid_date(""06-04-2020"")
// true
// >>> valid_date(""06/04/2020"")
// false
function valid_date($date) {
","function valid_date($date) {
    // Check if the date is in the correct format mm-dd-yyyy
    if (!preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\d{4}$/', $date)) {
        return false;
    }

    // Split the date to get month, day, and year
    list($month, $day, $year) = explode('-', $date);

    // Check if the month and day values are valid
    if ($month < 1 || $month > 12 || $day < 1) {
        return false;
    }

    // Check the number of days in each month
    $daysInMonth = array(
        1 => 31, // January
        2 => 29, // February (handle separately for leap year)
        3 => 31, // March
        4 => 30, // April
        5 => 31, // May
        6 => 30, // June
        7 => 31, // July
        8 => 31, // August
        9 => 30, // September
        10 => 31, // October
        11 => 30, // November
        12 => 31  // December
    );

    // Check for the correct number of days against the given month
    if ($day > $daysInMonth[(int)$month]) {
        return false;
    }

    // If February is given, further check for leap year validity
    if ($month == 2) {
        // Leap year condition
        if (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0)) {
            // Leap year, February can have up to 29 days
            if ($day > 29) {
                return false;
            }
        } else {
            // Not a leap year, February can have only up to 28 days
            if ($day > 28) {
                return false;
            }
        }
    }

    return true;
}","function candidate(...$args) {
    return valid_date(...$args);
}

function test(): void {
    if (candidate(""03-11-2000"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""15-01-2012"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-0-2040"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""06-04-2020"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""01-01-2007"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""03-32-2011"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-31-3000"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""06-06-2005"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""21-31-2000"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-12-2003"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""04122003"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""20030412"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2003-04"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2003-04-12"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-2003"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_125,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଅକ୍ଷର, ଅକ୍ଷର (a) = 0, ଅକ୍ଷର (b) = 1, ... ଅକ୍ଷର (z) = 25 //ଯଦି କୌଣସି କମାସ୍ ନଥାଏ ତେବେ ଆପଣଙ୍କୁ ଅଙ୍କରେ ଛୋଟ ଅକ୍ଷର ସଂଖ୍ୟାକୁ ଅଙ୍କ କ୍ରମ ଅନୁସାରେ ଫେରାଇଦେବା ଉଚିତ ।//ଶବ୍ଦଗୁଡ଼ିକର ଏକ ଧାଡ଼ି ଦିଆଯାଇ, ଯଦି ଆପଣ ଚାହୁଁଥିବା ପାଠରେ କୌଣସି ଶ୍ବେତସ୍ଥାନ ନଥାଏ, ତେବେ ଶ୍ବେତସ୍ଥାନରେ ବିଭକ୍ତ ଶବ୍ଦଗୁଡ଼ିକର ଏକ ସରଳୀକରଣ ଫେରାଇବ // >>> split_words(""Hello world!"")
// array(""Hello"", ""world!"")
// >>> split_words(""Hello,world!"")
// array(""Hello"", ""world!"")
// >>> split_words(""abcdef"")
// 3
function split_words($txt) {
","function split_words($txt) {
    if (preg_match('/\s/', $txt)) {
        return preg_split('/\s+/', trim($txt));
    } else if (strpos($txt, ',') !== false) {
        return explode(',', $txt);
    } else {
        $count = 0;
        for ($i = 0; $i < strlen($txt); $i++) {
            $ch = $txt[$i];
            if (ctype_lower($ch)) {
                $pos = ord($ch) - ord('a');
                if ($pos % 2 == 0) {
                    $count++;
                }
            }
        }
        return $count;
    }
}","function candidate(...$args) {
    return split_words(...$args);
}

function test(): void {
    if (candidate(""Hello world!"") !== array(""Hello"", ""world!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello,world!"") !== array(""Hello"", ""world!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello world,!"") !== array(""Hello"", ""world,!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello,Hello,world !"") !== array(""Hello,Hello,world"", ""!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdef"") !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(""aaabb"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaBb"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_126,ory_Orya,php,"<?php
//ଉଦାହରଣ //ସଂଖ୍ୟା, ମିଥ୍ୟା ଫେରାଇବ. କୌଣସି ନକାରାତ୍ମକ ସଂଖ୍ୟା ଗ୍ରହଣ କର ନାହିଁ ଏବଂ କେବଳ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଗ୍ରହଣ କର ।//ଯଦି ଆରେରେ ସମାନର 1 ରୁ ଅଧିକ ଡୁପ୍ଲିକେଟ୍ ଅଛି //ଏକ ସଂଖ୍ୟାର ଧାରାକୁ ଦେଇ, ସେମାନେ ସର୍ଟ ହୋଇଥାଉ କି ନଥାଉ, ଫେରାଇଥାଏ // >>> is_sorted(array(5))
// true
// >>> is_sorted(array(1, 2, 3, 4, 5))
// true
// >>> is_sorted(array(1, 3, 2, 4, 5))
// false
// >>> is_sorted(array(1, 2, 3, 4, 5, 6))
// true
// >>> is_sorted(array(1, 2, 3, 4, 5, 6, 7))
// true
// >>> is_sorted(array(1, 3, 2, 4, 5, 6, 7))
// false
// >>> is_sorted(array(1, 2, 2, 3, 3, 4))
// true
// >>> is_sorted(array(1, 2, 2, 2, 3, 4))
// false
function is_sorted($lst) {
","function is_sorted($lst) {
    $length = count($lst);
    if ($length <= 1) {
        return true;
    }

    $previous = $lst[0];
    $count = array();

    foreach ($lst as $number) {
        if (isset($count[$number])) {
            $count[$number]++;
        } else {
            $count[$number] = 1;
        }

        if ($count[$number] > 2) {
            return false;
        }

        if ($number < $previous) {
            return false;
        }

        $previous = $number;
    }

    return true;
}","function candidate(...$args) {
    return is_sorted(...$args);
}

function test(): void {
    if (candidate(array(5)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 2, 4, 5)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6, 7)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 2, 4, 5, 6, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 2, 2, 3, 4)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 3, 3, 4)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 2, 3, 3, 4)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4)) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_127,ory_Orya,php,"<?php
//[ଇନପୁଟ୍/ଆଉଟପୁଟ୍] ନମୁନା: //ଯଦି ଦୁଇଟି ଅନ୍ତରାଳ ପରସ୍ପର ସହିତ ମିଶି ନଥାଏ, ତେବେ ""ନା"" ଫେରାଇଦେବେ.//ଅନ୍ୟଥା, ""ନା"" ଫେରାଇଦେବେ//ଯଦି ସଂଯୋଗର ଲମ୍ବ ଏକ ଅଶୂନ୍ୟ ସଂଖ୍ୟା, ତେବେ ""YES"" ଫେରାଇଦେବେ, //ଯାହାର ଲମ୍ବ 1 ଅଟେ, ଯାହାକି ଏକ ଅଶୂନ୍ୟ ସଂଖ୍ୟା ନୁହେଁ.//ଉଦାହରଣ ସ୍ୱରୂପ, ଅନ୍ତରାଳ (1, 3), (2, 4) ର ଅନ୍ତର ହେଉଛି (2, 3) //ଅନ୍ତରାଳ ଏକ ଅଶୂନ୍ୟ ସଂଖ୍ୟା ।//ଆପଣଙ୍କର କାମ ହେଉଛି ନିର୍ଣ୍ଣୟ କରିବା ଯେ ଏହି ଦୁଇଟିର ସଂଯୋଗର ଲମ୍ବ //ପ୍ରତ୍ୟେକ ଅନ୍ତରାଳ ପାଇଁ, ଏହା ଧରାଯାଏ ଯେ ଏହାର ଆରମ୍ଭ ଏହାର ଶେଷ ଠାରୁ କମ୍ କିମ୍ବା ସମାନ ।//ଆରମ୍ଭ ଓ ସମାପ୍ତି ଉଭୟକୁ ଅନ୍ତର୍ଭୁକ୍ତ କରେ ।//ଏହି ଅନ୍ତରାଳ ବନ୍ଦ ଅର୍ଥାତ୍ ଅନ୍ତରାଳ (ଆରମ୍ଭ, ଶେଷ) //ଯେଉଁଠାରେ ପ୍ରତ୍ୟେକ ଅନ୍ତରାଳ ହେଉଛି ଏକ ଯୋଡି ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା । ଉଦାହରଣ ସ୍ୱରୂପ, ଅନ୍ତରାଳ = (ଆରମ୍ଭ, ଶେଷ) = (1, 2) ।//ଆପଣଙ୍କୁ ଦୁଇଟି ଅନ୍ତରାଳ ଦିଆଯାଉଛି, // >>> intersection(array(1, 2), array(2, 3))
// ""NO""
// >>> intersection(array(-1, 1), array(0, 4))
// ""NO""
// >>> intersection(array(-3, -1), array(-5, 5))
// ""YES""
function intersection($interval1, $interval2) {
","function intersection($interval1, $interval2) {
    // Find intersection
    $start = max($interval1[0], $interval2[0]);
    $end = min($interval1[1], $interval2[1]);

    // Determine the length of the intersection
    $length = $end - $start;

    // If the intervals don't intersect
    if ($length < 0) {
        return ""NO"";
    }

    // Check if the length is a prime number
    if ($length <= 1) {
        return ""NO"";
    }

    for ($i = 2; $i * $i <= $length; $i++) {
        if ($length % $i == 0) {
            return ""NO"";
        }
    }

    return ""YES"";
}","function candidate(...$args) {
    return intersection(...$args);
}

function test(): void {
    if (candidate(array(1, 2), array(2, 3)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1), array(0, 4)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, -1), array(-5, 5)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-2, 2), array(-4, 0)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-11, 2), array(-1, -1)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2), array(3, 5)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2), array(1, 2)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-2, -2), array(-3, -2)) !== ""NO"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_128,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଟିପ୍ପଣୀ: ଖାଲି arr ପାଇଁ null ଫେରାଇଥାଏ //ପ୍ରତ୍ୟେକ ସଂଖ୍ୟାର ଆରେରେ, 1, -1 କିମ୍ବା 0 ଦ୍ୱାରା ପ୍ରତିନିଧିତ୍ୱ କରାଯାଇଛି ।//ସଂପୂର୍ଣ୍ଣ ସଂଖ୍ୟାର ପରିମାଣର ସମୁଦାୟ ଗୁଣିତ ସମସ୍ତ ଚିହ୍ନର ଗୁଣନ ଦ୍ବାରା //ଆପଣଙ୍କୁ ଏକ ସଂଖ୍ଯା ନିର୍ଣ୍ଣୟକ ଦିଆଗଲା ଏବଂ ଆପଣଙ୍କୁ ଫେରିବାକୁ ପଡିବ// >>> prod_signs(array(1, 2, 2, -4))
// 9
// >>> prod_signs(array(0, 1))
// 0
// >>> prod_signs(array())
// null
function prod_signs($arr) {
","function prod_signs($arr) {
    if (empty($arr)) {
        return null;
    }
    
    $sum_of_magnitudes = 0;
    $product_of_signs = 1;
    
    foreach ($arr as $num) {
        $sum_of_magnitudes += abs($num);
        if ($num == 0) {
            $product_of_signs = 0;
            break;
        } else {
            $product_of_signs *= ($num > 0) ? 1 : -1;
        }
    }
    
    return $sum_of_magnitudes * $product_of_signs;
}","function candidate(...$args) {
    return prod_signs(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1, 1, 1)) !== -4) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1, 1, 0)) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_129,ory_Orya,php,"<?php
//ଉଦାହରଣ://ସର୍ବନିମ୍ନ ପଥ ଦେଇ ଯାଉଥିବା କୋଷଗୁଡ଼ିକ ଉପରେ ମୂଲ୍ୟଗୁଡ଼ିକର ଏକ ଅର୍ଡରଯୁକ୍ତ ଆରେ ଫେରାଇଥାଏ।//ଏହାର ଉତ୍ତର ନିଶ୍ଚିତ ଭାବେ ଅନନ୍ୟ ।//lst_A[j] = lst_B[j]  ଏହା ହେଉଛି//ଯେପରିକି lst_A[i] < lst_B[i] ଏବଂ ଯେକୌଣସି j (1 <= j < i) ପାଇଁ ଆମର //lst_B ଠାରୁ, ଅନ୍ୟ ଶବ୍ଦରେ, ସେଠାରେ ଏକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ସୂଚକାଙ୍କ i (1 <= i <= k)  ଅଛି//(ଆମେ ସେମାନଙ୍କୁ lst_A ଏବଂ lst_B କହିବା), lst_A ଶବ୍ଦକୋଷିକ ଦୃଷ୍ଟିରୁ କମ୍ ।//A ଏବଂ B କୁ ଯାଇଥିବା ସେଲ୍ ଗୁଡିକରେ ଥିବା ମୂଲ୍ୟର ଅର୍ଡର ଆରେ ତିଆରି କରିବା ପରେ //ଏକ ପଥ A (ଲମ୍ବ k) କୁ ପଥ B (ଲମ୍ବ k) ଠାରୁ ଛୋଟ ବୋଲି ଧରାଯାଏ ଯଦି //ଆପଣ ଗ୍ରୀଡରୁ ବାହାରକୁ ଯାଇପାରିବେ ନାହିଁ ।//ଏହା ନିଶ୍ଚିତ ଭାବେ ଭିନ୍ନ) ।//ଦୟାକରି ଧ୍ୟାନ ଦିଅନ୍ତୁ ଯେ k ଲମ୍ବ ପଥ ଅର୍ଥାତ୍ k ଟି ସେଲ୍ ପରିଦର୍ଶନ କରିବା (ନକଲି ନୁହେଁ)////ଅନ୍ୟ ଶବ୍ଦରେ, ଆପଣ ସେହି କୋଷକୁ ଯାଇପାରିବେ ଯାହା ଆପଣଙ୍କ ସହିତ ଏକ କଡ଼କୁ ଭାଗ କରେ ।//ଯେକୌଣସି କୋଷରୁ, ଏବଂ ପ୍ରତ୍ୟେକ ପାଦରେ ଆପଣ ଯେକୌଣସି ପଡୋଶୀ କୋଷକୁ ଯାଇପାରିବେ, //ଆପଣଙ୍କୁ ଗ୍ରୀଡରେ k ଲମ୍ବର ସର୍ବନିମ୍ନ ପଥ ଖୋଜିବାକୁ ପଡିବ । ଆପଣ ଆରମ୍ଭ କରିପାରିବେ //ଗ୍ରୀଡର କୋଷଗୁଡ଼ିକରେ ସମେତ ଠିକ ଗୋଟିଏ ଥର ଦେଖାଯାଏ ।//ଗ୍ରୀଡର ପ୍ରତ୍ୟେକ କୋଷରେ ଏକ ମୂଲ୍ୟ ଅଛି । [୧, N * N] ରେ ଥିବା ପ୍ରତ୍ୟେକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା //N ଧାଡି ଏବଂ N ସ୍ତମ୍ଭ (N >= 2) ଏବଂ ଏକ ସକାରାତ୍ମକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା k,  ସହିତ ଏକ ଗ୍ରୀଡ୍ ଦିଆଗଲା ।// >>> minPath(array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9)), 3)
// array(1, 2, 1)
// >>> minPath(array(array(5, 9, 3), array(4, 1, 6), array(7, 8, 2)), 1)
// array(1)
function minPath($grid, $k) {
","function minPath($grid, $k) {
    $n = count($grid);
    $m = $n * $n;
    
    // Allows movement in four directions: right, down, left, up
    $directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];
    
    $result = array_fill(0, $k, $m + 1);
    
    function backtrack($x, $y, $path, $grid, $k, $directions, $n, &$result) {
        if (count($path) === $k) {
            if ($path < $result) {
                $result = $path;
            }
            return;
        }
        
        foreach ($directions as $direction) {
            $dx = $x + $direction[0];
            $dy = $y + $direction[1];
            
            if ($dx >= 0 && $dx < $n && $dy >= 0 && $dy < $n) {
                $newPath = $path;
                $newPath[] = $grid[$dx][$dy];
                backtrack($dx, $dy, $newPath, $grid, $k, $directions, $n, $result);
            }
        }
    }
    
    // Try starting from each cell in the grid
    for ($i = 0; $i < $n; $i++) {
        for ($j = 0; $j < $n; $j++) {
            backtrack($i, $j, [$grid[$i][$j]], $grid, $k, $directions, $n, $result);
        }
    }
    
    return $result;
}","function candidate(...$args) {
    return minPath(...$args);
}

function test(): void {
    if (candidate(array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9)), 3) !== array(1, 2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(5, 9, 3), array(4, 1, 6), array(7, 8, 2)), 1) !== array(1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12), array(13, 14, 15, 16)), 4) !== array(1, 2, 1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(6, 4, 13, 10), array(5, 7, 12, 1), array(3, 16, 11, 15), array(8, 14, 9, 2)), 7) !== array(1, 10, 1, 10, 1, 10, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(8, 14, 9, 2), array(6, 4, 13, 15), array(5, 7, 1, 12), array(3, 10, 11, 16)), 5) !== array(1, 7, 1, 7, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(11, 8, 7, 2), array(5, 16, 14, 4), array(9, 3, 15, 6), array(12, 13, 10, 1)), 9) !== array(1, 6, 1, 6, 1, 6, 1, 6, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(12, 13, 10, 1), array(9, 3, 15, 6), array(5, 16, 14, 4), array(11, 8, 7, 2)), 12) !== array(1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(2, 7, 4), array(3, 1, 5), array(6, 8, 9)), 8) !== array(1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(6, 1, 5), array(3, 8, 9), array(2, 7, 4)), 8) !== array(1, 5, 1, 5, 1, 5, 1, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2), array(3, 4)), 10) !== array(1, 2, 1, 2, 1, 2, 1, 2, 1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 3), array(3, 2)), 10) !== array(1, 3, 1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_130,ory_Orya,php,"<?php
//ଉଦାହରଣ://ପ୍ରଥମ n + 1 ସଂଖ୍ୟାଗୁଡିକର ତ୍ରିବୋନାସୀ କ୍ରମ ।//ଆପଣଙ୍କୁ ଏକ ନନ୍-ନଗେଟିଭ୍ ଇଣ୍ଟେଜର ନମ୍ବର n ଦିଆ ଯାଇଛି, ଆପଣଙ୍କୁ a ର ଏକ ଆରେ ରିଟର୍ନ କରିବାକୁ ହେବ //= 2 + 3 + 3 = 8 //ତ୍ରିଶୂଳ (3) = ତ୍ରିଶୂଳ (2) + ତ୍ରିଶୂଳ (1) + ତ୍ରିଶୂଳ (4)//ତ୍ରିଶୂଳ (4) = 3 //ତ୍ରିଶୂନ୍ୟ 2 = 1 + (2 / 2) = 2 //ଉଦାହରଣ ସ୍ୱରୂପ: //ତ୍ରିଗୁଣ (n) = ତ୍ରିଗୁଣ (n - 1) + ତ୍ରିଗୁଣ (n - 2) + ତ୍ରିଗୁଣ (n + 1), ଯଦି n ଅଙ୍କ ଅଙ୍କ ଅଙ୍କ ।//tri (n) = 1 + n / 2, ଯଦି n ଯୁଗ୍ମ ହୋଇଥାଏ ।//ତ୍ରିଶୂଳ (୧) = ୩//ଟ୍ରିବୋନାସ୍କି କ୍ରମାଙ୍କ ନିମ୍ନଲିଖିତ ପୁନଃ ଘଟଣାର ପରିଭାଷା ରହିଛି://କିନ୍ତୁ ଲୋକମାନେ ଯାହା ଜାଣି ନାହାନ୍ତି ତାହା ହେଉଛି ଟ୍ରିବୋନାସ୍କି କ୍ରମାଙ୍କ ।//ସମସ୍ତେ ଫିବୋନାସୀ କ୍ରମାଙ୍କ ଜାଣନ୍ତି, ଏହାକୁ ଗଭୀର ଭାବରେ ଅଧ୍ୟୟନ କରିଥିଲେ ଗଣିତଜ୍ଞମାନେ // >>> tri(3)
// array(1, 3, 2, 8)
function tri($n) {
","function tri($n) {
    $tribonacci = array();
    
    for ($i = 0; $i <= $n; $i++) {
        if ($i == 0) {
            $tribonacci[$i] = 1; // tri(0) should be initialized to 1 or any base case value you want
        } elseif ($i == 1) {
            $tribonacci[$i] = 3; // tri(1)
        } elseif ($i == 2) {
            $tribonacci[$i] = 1 + ($i / 2); // tri(2)
        } elseif ($i % 2 == 0) {
            $tribonacci[$i] = 1 + ($i / 2); // tri(n), if n is even
        } else {
            $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2] + (isset($tribonacci[$i + 1]) ? $tribonacci[$i + 1] : 3);
            // tri(n), if n is odd, tri(n + 1) is assumed to be 3 if not already calculable
        }
    }
    
    return $tribonacci;
}","function candidate(...$args) {
    return tri(...$args);
}

function test(): void {
    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(""Test failed!""); }
    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== array(1)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(1, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_131,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //0 ଫେରାଇଥାଏ ଯଦି ସମସ୍ତ ଅଙ୍କ ଯୁଗ୍ମ ହୋଇଥାଏ.//ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଦିଆଗଲା, ସେହି ଅଙ୍କଗୁଡ଼ିକର ଗୁଣନକୁ ଫେରାଇଦେବେ.// >>> digits(1)
// 1
// >>> digits(4)
// 0
// >>> digits(235)
// 15
function digits($n) {
","function digits($n) {
    $product = 1;
    $hasOdd = false;

    while ($n > 0) {
        $digit = $n % 10;
        if ($digit % 2 != 0) {
            $product *= $digit;
            $hasOdd = true;
        }
        $n = intdiv($n, 10);
    }

    return $hasOdd ? $product : 0;
}","function candidate(...$args) {
    return digits(...$args);
}

function test(): void {
    if (candidate(5) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(54) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(120) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(5014) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(98765) !== 315) { throw new Exception(""Test failed!""); }
    if (candidate(5576543) !== 2625) { throw new Exception(""Test failed!""); }
    if (candidate(2468) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_132,ory_Orya,php,"<?php
//ଯେଉଁଠାରେ ଅତି କମରେ ଗୋଟିଏ ବ୍ରାଙ୍କେଟ ଉପସର୍ଗରେ ନେଷ୍ଟ ହୋଇଛି ।//ଫଳନଟି true ଫେରାଇବ ଯଦି ଏବଂ କେବଳ ଯଦି ବ୍ରାଙ୍କେଟ୍ସର ଏକ ବୈଧ ଉପକ୍ରମ ଅଛି //ଏକ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହା କେବଳ ବର୍ଗ ବନ୍ଧନୀ ଥିବା ଏକ ଷ୍ଟ୍ରିଙ୍ଗକୁ ଇନପୁଟ୍ ଭାବରେ ଗ୍ରହଣ କରେ.// >>> is_nested(""[[]]"")
// true
// >>> is_nested(""[]]]]]]][[[[[]"")
// false
// >>> is_nested(""[][]"")
// false
// >>> is_nested(""[]"")
// false
// >>> is_nested(""[[][]]"")
// true
// >>> is_nested(""[[]][["")
// true
function is_nested($string) {
","function is_nested($string) {
    $stack = [];
    $hasNested = false;
    
    for ($i = 0; $i < strlen($string); $i++) {
        $char = $string[$i];
        if ($char === '[') {
            array_push($stack, '[');
        } elseif ($char === ']') {
            if (!empty($stack)) {
                array_pop($stack);
                if ($i > 0 && $string[$i - 1] === '[') {
                    $hasNested = true;
                }
            } else {
                return false;
            }
        }
    }
    
    return $hasNested;
}","function candidate(...$args) {
    return is_nested(...$args);
}

function test(): void {
    if (candidate(""[[]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[]]]]]]][[[[[]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[][]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[[[[]]]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[]]]]]]]]]]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[][][[]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[[]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[]]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[[]][["") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[[][]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[[[[[[[["") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""]]]]]]]]"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_133,ory_Orya,php,"<?php
//ଉଦାହରଣ://ପ୍ରତ୍ୟେକ ଉପାଦାନକୁ ପ୍ରଥମେ ଉପର int{} (ସୀମା) କୁ ଘୋଡାଇ ଦିଅନ୍ତୁ ।//ଆପଣଙ୍କୁ ଦିଆଯାଇଥିବା ଆରେରେ ଥିବା ବର୍ଗର ସଂଖ୍ୟାର ସମୁଦାୟ ଫେରାଇବାକୁ ହେବ, //ଆପଣଙ୍କୁ ଏକ ସଂଖ୍ୟାର ଏକ ସରଳୀକୃତ ଧାରା ଦିଆଯାଏ ।// >>> lst(array(1.0, 2.0, 3.0))
// 14
// >>> lst(array(1.0, 4.0, 9.0))
// 98
// >>> lst(array(1.0, 3.0, 5.0, 7.0))
// 84
// >>> lst(array(1.4, 4.2, 0.0))
// 29
// >>> lst(array(-2.4, 1.0, 1.0))
// 6
function sum_squares($lst) {
","function sum_squares($lst) {
    $sum = 0;
    foreach ($lst as $number) {
        $ceiledNumber = ceil($number);
        $sum += $ceiledNumber * $ceiledNumber;
    }
    return $sum;
}","function candidate(...$args) {
    return sum_squares(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 3.0, 5.0, 7.0)) !== 84) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.4, 4.2, 0.0)) !== 29) { throw new Exception(""Test failed!""); }
    if (candidate(array(-2.4, 1.0, 1.0)) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(100.0, 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(""Test failed!""); }
    if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.4, 17.9, 18.9, 19.9)) !== 1086) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.0)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.0, 1.0, 0.0)) !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_134,ory_Orya,php,"<?php
//ଉଦାହରଣ://ନୋଟ: ""ୱାର୍ଡ"" ହେଉଛି ସ୍ପେସ୍ ଦ୍ୱାରା ପୃଥକ ହୋଇଥିବା ଅକ୍ଷରମାନଙ୍କର ଏକ ଗୋଷ୍ଠୀ ।//ଏକ ଶବ୍ଦର ଅଂଶ, ଏବଂ ଅନ୍ୟଥା ମିଥ୍ୟା ।//ଏକ ନିର୍ଦ୍ଦିଷ୍ଟ ଷ୍ଟ୍ରିଙ୍ଗର ଏକ ଆଲଫାବେଟିକ ଅକ୍ଷର ଅଟେ ଏବଂ ନୁହେଁ //ଗୋଟିଏ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହାକି true କୁ ଫେରାଇଥାଏ ଯଦି ଶେଷ ଅକ୍ଷର // >>> check_if_last_char_is_a_letter(""apple pie"")
// false
// >>> check_if_last_char_is_a_letter(""apple pi e"")
// true
// >>> check_if_last_char_is_a_letter(""apple pi e "")
// false
// >>> check_if_last_char_is_a_letter("""")
// false
function check_if_last_char_is_a_letter($txt) {
","function check_if_last_char_is_a_letter($txt) {
    // Trim any trailing spaces from the input string
    $trimmedTxt = rtrim($txt);

    // Return false if the trimmed string is empty
    if (empty($trimmedTxt)) {
        return false;
    }

    // Get the last character of the trimmed string
    $lastChar = substr($trimmedTxt, -1);

    // Check if the last character is an alphabetical letter
    if (ctype_alpha($lastChar)) {
        // Split the trimmed string into words
        $words = explode("" "", $trimmedTxt);
        
        // Get the last word
        $lastWord = end($words);
        
        // Check if the last word is a single character and return true or false
        return (strlen($lastWord) === 1);
    }

    return false;
}","function candidate(...$args) {
    return check_if_last_char_is_a_letter(...$args);
}

function test(): void {
    if (candidate(""apple"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""apple pi e"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""eeeee"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""A"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""Pumpkin pie "") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""Pumpkin pie 1"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""eeeee e "") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""apple pie"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""apple pi e "") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_135,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଦୋହରା ଯାଇଥିବା ମୂଲ୍ୟ ।//ଏପରି କୌଣସି ଉପାଦାନ ନାହିଁ ତେବେ ଫେରାଇଦିଅନ୍ତୁ -1. ଦିଆଯାଇଥିବା ଧାଡ଼ିରେ ରହିବ ନାହିଁ //ଏହାଠାରୁ ଅଧିକ କିମ୍ବା ସମାନ ନୁହେଁ, ଏହାଠାରୁ ତୁରନ୍ତ ପୂର୍ବବର୍ତ୍ତୀ ଉପାଦାନ ସହିତ ସମାନ ନୁହେଁ ।//ଗୋଟିଏ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହାକି ଏକ ଉପାଦାନର ସର୍ବ ବୃହତ ସୂଚକାଙ୍କ ଫେରାଇଥାଏ ଯାହା // >>> can_arrange(array(1, 2, 4, 3, 5))
// 3
// >>> can_arrange(array(1, 2, 3))
// -1
function can_arrange($arr) {
","function can_arrange($arr) {
    for ($i = count($arr) - 1; $i > 0; $i--) {
        if ($arr[$i] < $arr[$i - 1]) {
            return $i;
        }
    }
    return -1;
}","function candidate(...$args) {
    return can_arrange(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 4, 3, 5)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 4, 5)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 2, 5, 6, 7, 8, 9, 10)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 8, 5, 7, 3)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_136,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଯଦି କୌଣସି ନକାରାତ୍ମକ କିମ୍ବା ସକାରାତ୍ମକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ନଥାଏ, ତେବେ ସେଗୁଡ଼ିକୁ ଶୂନ୍ୟ ଭାବରେ ଫେରାଇଦେବେ.// ଧନାତ୍ମକ ସଂଖ୍ଯାମାନଙ୍କର ଏକ ମାର୍ଜିତ//ସବୁଠାରୁ ବଡ ନକାରାତ୍ମକ ସଂଖ୍ଯା, ଏବଂ 'b' ହେଉଛି ସବୁଠାରୁ ଛୋଟ//ଏକ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହାକି ଏକ (a, b) ଧାରା ଫେରାଇଥାଏ, ଯେଉଁଠାରେ 'a' ହେଉଛି // >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))
// array(null, 1)
// >>> largest_smallest_integers(array())
// array(null, null)
// >>> largest_smallest_integers(array(0))
// array(null, null)
function largest_smallest_integers($lst) {
","function largest_smallest_integers($lst) {
    $largest_negative = null;
    $smallest_positive = null;

    foreach ($lst as $num) {
        if ($num < 0 && ($largest_negative === null || $num > $largest_negative)) {
            $largest_negative = $num;
        }
        if ($num > 0 && ($smallest_positive === null || $num < $smallest_positive)) {
            $smallest_positive = $num;
        }
    }

    return array($largest_negative, $smallest_positive);
}","function candidate(...$args) {
    return largest_smallest_integers(...$args);
}

function test(): void {
    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 3, 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array(null, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0)) !== array(null, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -3, -5, -6)) !== array(-1, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_137,ory_Orya,php,"<?php
//ନୋଟ: ଯଦି କୌଣସି ବାସ୍ତବ ସଂଖ୍ୟାକୁ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଭାବରେ ଦର୍ଶାଯାଏ, ତେବେ ଫ୍ଲୋଟିଂ ପଏଣ୍ଟଟି . କିମ୍ବା ,  ହୋଇପାରେ ।//ଯଦି ମୂଲ୍ୟ ସମାନ ହୁଏ ତେବେ ଶୂନ୍ୟକୁ ଫେରାଇଥାଏ ।//ପ୍ରକୃତ ସଂଖ୍ୟା, ଏବଂ ଏହାର ଦିଆଯାଇଥିବା ପରିବର୍ତ୍ତନଶୀଳ ପ୍ରକାରରେ ବଡ଼ ପରିବର୍ତ୍ତନଶୀଳକୁ ଫେରାଇଥାଏ ।//ଏକ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହା ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା, ଫ୍ଲୋଟ୍, କିମ୍ବା ଙ୍କୁ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଷ୍ଟ୍ରିଙ୍ଗ ଗ୍ରହଣ କରେ// >>> compare_one(1, 2.5)
// 2.5
// >>> compare_one(1, ""2,3"")
// ""2,3""
// >>> compare_one(""5,1"", ""6"")
// ""6""
// >>> compare_one(""1"", 1)
// null
function compare_one($a, $b) {
","function compare_one($a, $b) {
    // Function to convert string number with comma to float
    $convertToFloat = function($value) {
        if (is_string($value) && strpos($value, ',') !== false) {
            return floatval(str_replace(',', '.', $value));
        }
        return floatval($value);
    };

    // Convert to float for comparison, keep original for the result type
    $floatA = is_string($a) ? $convertToFloat($a) : floatval($a);
    $floatB = is_string($b) ? $convertToFloat($b) : floatval($b);

    // Compare converted float values
    if ($floatA > $floatB) {
        return $a;
    } elseif ($floatB > $floatA) {
        return $b;
    } else {
        return null;
    }
}","function candidate(...$args) {
    return compare_one(...$args);
}

function test(): void {
    if (candidate(1, 2) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2.5) !== 2.5) { throw new Exception(""Test failed!""); }
    if (candidate(2, 3) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(5, 6) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(1, ""2,3"") !== ""2,3"") { throw new Exception(""Test failed!""); }
    if (candidate(""5,1"", ""6"") !== ""6"") { throw new Exception(""Test failed!""); }
    if (candidate(""1"", ""2"") !== ""2"") { throw new Exception(""Test failed!""); }
    if (candidate(""1"", 1) !== null) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_138,ory_Orya,php,"<?php
//ଉଦାହରଣ //ନିର୍ଦ୍ଦିଷ୍ଟ ସଂଖ୍ୟା n କୁ ସଠିକ ଭାବରେ 4 ଟି ସକାରାତ୍ମକ ଯୁଗ୍ମ ସଂଖ୍ୟାର ସମଷ୍ଟି ଭାବରେ ଲେଖାଯାଇପାରିବ କି ନାହିଁ ଆକଳନ କରନ୍ତୁ // >>> is_equal_to_sum_even(4)
// false
// >>> is_equal_to_sum_even(6)
// false
// >>> is_equal_to_sum_even(8)
// true
function is_equal_to_sum_even($n) {
","function is_equal_to_sum_even($n) {
    // Check if n is smaller than the smallest sum of 4 even numbers (2+2+2+2 = 8)
    if ($n < 8) {
        return false;
    }

    // Check if n is even, as the sum of even numbers is always even.
    if ($n % 2 != 0) {
        return false;
    }

    // Since we already checked for n < 8, any even number >= 8 can be formed as the sum of four even numbers.
    return true;
}

// Testing the function
var_dump(is_equal_to_sum_even(4)); // false
var_dump(is_equal_to_sum_even(6)); // false
var_dump(is_equal_to_sum_even(8)); // true","function candidate(...$args) {
    return is_equal_to_sum_even(...$args);
}

function test(): void {
    if (candidate(4) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(13) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(16) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_139,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଯେଉଁଠାରେ n > 0 //ବ୍ରାଜିଲୀୟ_କାରକୀୟ (n) = n! * (n-1)! * (n-2)! * ... * 1! //ବ୍ରାଜିଲୀୟ କାରକକୁ ନିମ୍ନଲିଖିତ ଭାବରେ ବ୍ୟାଖ୍ୟା କରାଯାଇଛି: // >>> special_factorial(4)
// 288
// The function will receive an integer as input and should return the special
// factorial of this integer.
function special_factorial($n) {
","function special_factorial($n) {
    if ($n <= 0) {
        return 1;
    }

    $result = 1;
    for ($i = 1; $i <= $n; $i++) {
        $result *= factorial($i);
    }
    
    return $result;
}

function factorial($num) {
    if ($num == 0 || $num == 1) {
        return 1;
    }
    $fact = 1;
    for ($i = 2; $i <= $num; $i++) {
        $fact *= $i;
    }
    return $fact;
}","function candidate(...$args) {
    return special_factorial(...$args);
}

function test(): void {
    if (candidate(4) !== 288) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 34560) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== 125411328000) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_140,ory_Orya,php,"<?php
//ତାପରେ ସମସ୍ତ କ୍ରମିକ ସ୍ପେସକୁ -  ସହିତ ବଦଳାନ୍ତୁ//ଏବଂ ଯଦି ଗୋଟିଏ ଷ୍ଟ୍ରିଙ୍ଗରେ ଦୁଇରୁ ଅଧିକ କ୍ରମିକ ସ୍ପେସ୍ ଥାଏ, //ଏକ ପାଠ୍ୟ ଧାଡ଼ି ଦିଆଯାଇଥିବା, ଏହାର ସମସ୍ତ ସ୍ପେସ୍ ଅଣ୍ଡରସ୍କୋର ସହିତ ବଦଳାନ୍ତୁ, // >>> fix_spaces("" Example"")
// ""Example""
// >>> fix_spaces("" Example 1"")
// ""Example_1""
// >>> fix_spaces("" Example 2"")
// ""_Example_2""
// >>> fix_spaces("" Example 3"")
// ""_Example-3""
function fix_spaces($text) {
","function fix_spaces($text) {
    // Trim leading and trailing spaces
    $text = trim($text);
    
    // Replace 3 or more spaces with a single '-'
    $text = preg_replace('/ {3,}/', '-', $text);

    // Replace remaining spaces with underscores
    $text = str_replace(' ', '_', $text);
    
    return $text;
}","function candidate(...$args) {
    return fix_spaces(...$args);
}

function test(): void {
    if (candidate(""Example"") !== ""Example"") { throw new Exception(""Test failed!""); }
    if (candidate(""Mudasir Hanif "") !== ""Mudasir_Hanif_"") { throw new Exception(""Test failed!""); }
    if (candidate(""Yellow Yellow  Dirty  Fellow"") !== ""Yellow_Yellow__Dirty__Fellow"") { throw new Exception(""Test failed!""); }
    if (candidate(""Exa   mple"") !== ""Exa-mple"") { throw new Exception(""Test failed!""); }
    if (candidate(""   Exa 1 2 2 mple"") !== ""-Exa_1_2_2_mple"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_141,ory_Orya,php,"<?php
//ଉଦାହରଣ://- ବିନ୍ଦୁ ପରେ ଥିବା ସବଷ୍ଟ୍ରିଙ୍ଗଟି ଏହି ମଧ୍ୟରୁ ଗୋଟିଏ ହେବା ଉଚିତ: ['txt', 'exe', 'dll'] //ଲାଟିନ ଅକ୍ଷର (ଏ-ଜେଡ ଏବଂ ଏ-ଜେଡ) ।//- ଡଟ୍ ପୂର୍ବରୁ ଥିବା ସବଷ୍ଟ୍ରିଙ୍ଗ ଖାଲି ହେବା ଉଚିତ ନୁହେଁ, ଏବଂ ଏହା  ଠାରୁ ଏକ ଅକ୍ଷର ସହିତ ଆରମ୍ଭ ହୋଇଥାଏ//- ଫାଇଲ ନାମରେ ଗୋଟିଏ ବିନ୍ଦୁ ଅଛି '.' //- ଫାଇଲ ନାମରେ ତିନିରୁ ଅଧିକ ଅଙ୍କ ('0'-'9') ରହିବା ଉଚିତ ନୁହେଁ ।//ପୂରଣ ହୋଇଛି://ଏକ ଫାଇଲ ନାମ ବୈଧ ବୋଲି ବିବେଚନା କରାଯାଏ ଯଦି ଏବଂ କେବଳ ଯଦି ନିମ୍ନଲିଖିତ ସମସ୍ତ ସର୍ତ୍ତ ପୂରଣ ହୁଏ _//'ହଁ' ଯଦି ଫାଇଲ ନାମ ବୈଧ, ଏବଂ ଅନ୍ୟଥା 'ନା' ଫେରାଇଥାଏ.//ଏକ ଫଳନ ସୃଷ୍ଟି କରନ୍ତୁ ଯାହାକି ଏକ ଫାଇଲ ନାମକୁ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ନେଇଥାଏ, ଏବଂ ଫେରାଇଥାଏ // >>> file_name_check(""example.txt"")
// ""Yes""
// >>> file_name_check(""1example.dll"")
// ""No""
function file_name_check($file_name) {
","function file_name_check($file_name) {
    // Check if there's exactly one dot
    if (substr_count($file_name, '.') !== 1) {
        return 'No';
    }

    // Split the filename into name and extension
    list($name, $extension) = explode('.', $file_name, 2);

    // Check if the name part is not empty and starts with a letter
    if (empty($name) || !ctype_alpha($name[0])) {
        return 'No';
    }

    // Check if the extension is one of the valid options
    $valid_extensions = ['txt', 'exe', 'dll'];
    if (!in_array($extension, $valid_extensions)) {
        return 'No';
    }

    // Count digits in the name
    $digit_count = preg_match_all('/[0-9]/', $name);
    if ($digit_count > 3) {
        return 'No';
    }
    
    return 'Yes';
}","function candidate(...$args) {
    return file_name_check(...$args);
}

function test(): void {
    if (candidate(""example.txt"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""1example.dll"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""s1sdf3.asd"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""K.dll"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""MY16FILE3.exe"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""His12FILE94.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""_Y.txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""?aREYA.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""/this_is_valid.dll"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_valid.wow"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_valid.txt"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_valid.txtexe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""#this2_i4s_5valid.ten"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""@this1_is6_valid.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_12valid.6exe4.txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""all.exe.txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""I563_No.exe"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""Is3youfault.txt"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""no_one#knows.dll"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""1I563_Yes3.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""I563_Yes3.txtt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""final..txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""final132"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""_f4indsartal132."") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate("".txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""s."") !== ""No"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_142,ory_Orya,php,"<?php
//ଉଦାହରଣ://ସେହି ଆରେରେ ଥିବା ଏଣ୍ଟ୍ରିଗୁଡ଼ିକୁ ପରିବର୍ତ୍ତନ କରନ୍ତୁ ଯାହାର ସୂଚକାଙ୍କ 3 କିମ୍ବା 4 ର ଗୁଣନ ନୁହେଁ _ ଫଳନଟି ସମସ୍ତ ଏଣ୍ଟ୍ରିଗୁଡିକର ସମୁଦାୟ ଫେରାଇବ _//3 ର ଗୁଣକ ଏବଂ ସଂଖ୍ଯାଟି 3 ର ଗୁଣକ ନୁହେଁ, ଯଦି ତାହାର ସୂଚକାଙ୍କ 4 ର ଗୁଣକ ହୁଏ ତେବେ ଏହା ସଂଖ୍ଯାଟି କୁୟବ କରିବ//ଏହି ଫଳନଟି ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡ଼ିକର ଏକ ସରଳୀକରଣ ଗ୍ରହଣ କରିବ । ସରଳୀକରଣରେ ଥିବା ସମସ୍ତ ଏଣ୍ଟ୍ରି ପାଇଁ, ଯଦି ଏହାର ସୂଚକାଙ୍କ a  ହୁଏ ତେବେ ଫଳନଟି ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଏଣ୍ଟ୍ରିକୁ ବର୍ଗୀକରଣ କରିବ ।//"" // >>> lst
// array(1, 2, 3)
// >>> lst
// array()
// >>> lst
// array(-1, -5, 2, -1, -5)
function sum_squares($lst) {
","function sum_squares($lst) {
    $n = count($lst);
    $sum = 0;

    for ($i = 0; $i < $n; $i++) {
        if ($i % 3 == 0) {
            $sum += $lst[$i] ** 2;
        } elseif ($i % 4 == 0) {
            $sum += $lst[$i] ** 3;
        } else {
            $sum += $lst[$i];
        }
    }

    return $sum;
}","function candidate(...$args) {
    return sum_squares(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3)) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 9)) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1, 1, 1, 1, 1, 1, 1)) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -1, -1, -1, -1, -1, -1, -1, -1)) !== -3) { throw new Exception(""Test failed!""); }
    if (candidate(array(0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -5, 2, -1, -5)) !== -126) { throw new Exception(""Test failed!""); }
    if (candidate(array(-56, -99, 1, 0, -2)) !== 3030) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 0, 0, 0, 0, 0, 0, 0, -1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)) !== -14196) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)) !== -1448) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_143,ory_Orya,php,"<?php
//ଉଦାହରଣ 1: //ନୂତନ ବାକ୍ୟଖଣ୍ଡରେ ଥିବା ଶବ୍ଦଗୁଡ଼ିକର କ୍ରମାଙ୍କ ମୂଳ ବାକ୍ୟଖଣ୍ଡର କ୍ରମାଙ୍କ ସହିତ ସମାନ ହେବା ଉଚିତ ।//ଯାହାର ଲମ୍ବ ଅଶୂନ୍ୟ ସଂଖ୍ୟା, //ଏବଂ ଆପଣଙ୍କୁ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଫେରାଇବାକୁ ହେବ ଯେଉଁଥିରେ ମୂଳ ବାକ୍ୟର ଶବ୍ଦ ଅଛି, //ବାକ୍ୟରେ କିଛି ଶବ୍ଦ ଅଛି, ଯାହା ସ୍ପେସ୍ ଦ୍ବାରା ପୃଥକ ହୋଇଛି,//ଆପଣଙ୍କୁ ଏକ ବାକ୍ୟକୁ ପ୍ରତିନିଧିତ୍ୱ କରୁଥିବା ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଦିଆଯାଏ, // >>> words_in_sentence(""This is a test"")
// ""is""
// Example 2:
// >>> words_in_sentence(""lets go for swimming"")
// ""go for""
// Constraints:
// * 1 <= len(sentence) <= 100
// * sentence contains only letters
function words_in_sentence($sentence) {
","function is_prime($num) {
    if ($num < 2) return false;
    for ($i = 2; $i <= sqrt($num); $i++) {
        if ($num % $i == 0) return false;
    }
    return true;
}

function words_in_sentence($sentence) {
    $words = explode(' ', $sentence);
    $result = [];

    foreach ($words as $word) {
        if (is_prime(strlen($word))) {
            $result[] = $word;
        }
    }
    
    return implode(' ', $result);
}","function candidate(...$args) {
    return words_in_sentence(...$args);
}

function test(): void {
    if (candidate(""This is a test"") !== ""is"") { throw new Exception(""Test failed!""); }
    if (candidate(""lets go for swimming"") !== ""go for"") { throw new Exception(""Test failed!""); }
    if (candidate(""there is no place available here"") !== ""there is no place"") { throw new Exception(""Test failed!""); }
    if (candidate(""Hi I am Hussein"") !== ""Hi am Hussein"") { throw new Exception(""Test failed!""); }
    if (candidate(""go for it"") !== ""go for it"") { throw new Exception(""Test failed!""); }
    if (candidate(""here"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""here is"") !== ""is"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_144,ory_Orya,php,"<?php
//ଆପଣ ମାନିପାରିବେ ଯେ x, ଏବଂ n ହେଉଛି ବୈଧ ଖଣ୍ଡ, ଏବଂ ଶୂନ ନାମକର୍ତ୍ତା ଭାବରେ ନାହିଁ.//<numerator>/<denominator> ଯେଉଁଠାରେ ଉଭୟ ସଂଖ୍ଯକ ଓ ନାମକ ସକାରାତ୍ମକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ଯା ହୋଇଥାଏ ।//ଅନ୍ୟଥା, ଉଭୟ x ଏବଂ n, ଏକ ଫ୍ରାକସନ୍ ର ଷ୍ଟ୍ରିଙ୍ଗ୍ ପ୍ରତିନିଧିତ୍ୱ, ଏବଂ ନିମ୍ନଲିଖିତ ଫର୍ମାଟ୍ ଅଛି, //x * n. ଯଦି x * n ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାକୁ ମୂଲ୍ୟାଙ୍କନ କରେ ଏବଂ false //ଆପଣଙ୍କର କାମ ହେଉଛି ଏକ ଫଳନକୁ କାର୍ଯ୍ୟକାରୀ କରିବା ଯାହା ଅଭିବ୍ୟକ୍ତିକୁ ସରଳ କରିବ // >>> simplify(""1/5"", ""5/1"")
// true
// >>> simplify(""1/6"", ""2/1"")
// false
// >>> simplify(""7/10"", ""10/2"")
// false
function simplify($x, $n) {
","function simplify($x, $n) {
    list($xNum, $xDen) = explode('/', $x);
    list($nNum, $nDen) = explode('/', $n);

    // Multiply and simplify the expression x * n
    $resultNum = $xNum * $nNum;
    $resultDen = $xDen * $nDen;

    // Check if result is a whole number
    return ($resultNum % $resultDen === 0);
}","function candidate(...$args) {
    return simplify(...$args);
}

function test(): void {
    if (candidate(""1/5"", ""5/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""1/6"", ""2/1"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""5/1"", ""3/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""7/10"", ""10/2"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2/10"", ""50/10"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""7/2"", ""4/2"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""11/6"", ""6/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""2/3"", ""5/2"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""5/2"", ""3/5"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2/4"", ""8/4"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""2/4"", ""4/2"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""1/5"", ""5/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""1/5"", ""1/5"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_145,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ମୂଳ ଧାଡ଼ିରେ ଥିବା ସୂଚକାଙ୍କ ଆଧାରରେ ସେମାନଙ୍କୁ କ୍ରମାନୁସାରେ ରଖନ୍ତୁ ।//ନୋଟ: ଯଦି ଏକାଧିକ ଆଇଟମ ଅଛି ଯାହାର ଅଙ୍କ ସମୂହ ସମାନ, ତେବେ //ଅଙ୍କ ସମୂହ ଅନୁସାରେ କ୍ରମାନୁସାରେ ।//ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଦିଆଯାଇଥିବା ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡ଼ିକର ସରଳୀକରଣ କରେ ।// >>> order_by_points(array(1, 11, -1, -11, -12))
// array(-1, -11, 1, -12, 11)
// >>> order_by_points(array())
// array()
function order_by_points($nums) {
","function order_by_points($nums) {
    usort($nums, function($a, $b) use ($nums) {
        $sumOfDigits = function($n) {
            $n = abs($n); // Use absolute value to ignore negative sign
            $sum = 0;
            while ($n > 0) {
                $sum += $n % 10;
                $n = intdiv($n, 10);
            }
            return $sum;
        };
        
        $sumA = $sumOfDigits($a);
        $sumB = $sumOfDigits($b);
        
        if ($sumA === $sumB) {
            // Maintain original order if sums are equal
            return array_search($a, $nums) <=> array_search($b, $nums);
        }
        
        return $sumA <=> $sumB;
    });
    
    return $nums;
}","function candidate(...$args) {
    return order_by_points(...$args);
}

function test(): void {
    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_146,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଏକ ସଂଖ୍ୟାର ପ୍ରଥମ ଓ ଶେଷ ଅଙ୍କ ଅଙ୍କ (1, 3, 5, 7, 9) ।//10 ରୁ ଅଧିକ ଏବଂ ଉଭୟ //ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ସଂଖ୍ୟାର ସରଳୀକୃତକୁ ଇନପୁଟ୍ ଭାବରେ ଗ୍ରହଣ କରେ ଏବଂ ଫେରସ୍ତ କରେ // >>> specialFilter(array(15, -73, 14, -15))
// 1
// >>> specialFilter(array(33, -2, -3, 45, 21, 109))
// 2
function specialFilter($nums) {
","function specialFilter($nums) {
    $count = 0;

    foreach ($nums as $num) {
        if ($num > 10) {
            $absNum = abs($num);
            $firstDigit = intval(substr((string)$absNum, 0, 1));
            $lastDigit = $absNum % 10;

            if (in_array($firstDigit, array(1, 3, 5, 7, 9)) && in_array($lastDigit, array(1, 3, 5, 7, 9))) {
                $count++;
            }
        }
    }

    return $count;
}","function candidate(...$args) {
    return specialFilter(...$args);
}

function test(): void {
    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_147,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏବଂ a[i] + a[j] + a[k] ହେଉଛି 3 ର ଗୁଣନ ।//a ର ତ୍ରିଗୁଣ ସଂଖ୍ୟା (a[i], a[j], a[k]) କୁ ଫେରାଇଦିଏ ଯେଉଁଠାରେ i < j < k, //ପ୍ରତ୍ୟେକ i (1 ≤ i ≤ n) ପାଇଁ, a[i] = i * i - i + 1 ର ମୂଲ୍ୟ ।//ଆପଣଙ୍କୁ ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା n ଦିଆ ଯାଇଛି. ଆପଣଙ୍କୁ ଏକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ସରଳୀକୃତ କରିବା ପାଇଁ ହେବ ଯାହାର ଲମ୍ବ n // >>> get_max_triples(5)
// 1
// Explanation: 
// a = [1, 3, 7, 13, 21]
// The only valid triple is (1, 7, 13).
function get_max_triples($n) {
","function get_max_triples($n) {
    $a = array();
    for ($i = 1; $i <= $n; $i++) {
        $a[$i - 1] = $i * $i - $i + 1;
    }

    $count = 0;
    
    for ($i = 0; $i < $n; $i++) {
        for ($j = $i + 1; $j < $n; $j++) {
            for ($k = $j + 1; $k < $n; $k++) {
                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {
                    $count++;
                }
            }
        }
    }
    
    return $count;
}","function candidate(...$args) {
    return get_max_triples(...$args);
}

function test(): void {
    if (candidate(5) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 36) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 53361) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_148,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଗ୍ରହ ନାମ ଠିକ୍ ନୁହେଁ ।//ଫଳନଟି ଏକ ଖାଲି ଆରେ ଫେରାଇଥାଏ ଯଦି ଗ୍ରହ1 କିମ୍ବା ଗ୍ରହ2 //ସୂର୍ଯ୍ୟର ନିକଟତା ।//ଗ୍ରହ ୧ ଓ ଗ୍ରହ ୨ର କକ୍ଷପଥ ମଧ୍ୟରେ ଅବସ୍ଥିତ, //ଏହି ଫଳନ ଏକ ଆରେ ଫେରାଇବ ଯେଉଁଥିରେ ସମସ୍ତ ଗ୍ରହ ଅଛି ଯାହାର କକ୍ଷପଥ ହେଉଛି //ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଦୁଇଟି ଗ୍ରହ ନାମକୁ ""planet1"" ଏବଂ ""planet2"" ପରି ଧାଡ଼ି ଭାବରେ ଗ୍ରହଣ କରେ ।//ୟୁରେନସ୍, ନେପଚୁନ ।//ମଙ୍ଗଳ ଗ୍ରହ, ପରବର୍ତ୍ତୀ ଗ୍ରହ ହେଉଛି ଶୁକ୍ର, ତାପରେ ପୃଥିବୀ, ମଙ୍ଗଳ, ବୃହସ୍ପତି, ଶନି,//ଆମ ସୌରମଣ୍ଡଳରେ ଆଠଟି ଗ୍ରହ ଅଛି: ସୂର୍ଯ୍ୟଙ୍କ ନିକଟତମ ।// >>> bf(""Jupiter"", ""Neptune"")
// array(""Saturn"", ""Uranus"")
// >>> bf(""Earth"", ""Mercury"")
// ""Venus""
// >>> bf(""Mercury"", ""Uranus"")
// array(""Venus"", ""Earth"", ""Mars"", ""Jupiter"", ""Saturn"")
function bf($planet1, $planet2) {
","function bf($planet1, $planet2) {
    $planets = [""Mercury"", ""Venus"", ""Earth"", ""Mars"", ""Jupiter"", ""Saturn"", ""Uranus"", ""Neptune""];

    $index1 = array_search($planet1, $planets);
    $index2 = array_search($planet2, $planets);

    if ($index1 === false || $index2 === false) {
        return [];
    }

    if ($index1 > $index2) {
        $temp = $index1;
        $index1 = $index2;
        $index2 = $temp;
    }

    return array_slice($planets, $index1 + 1, $index2 - $index1 - 1);
}","function candidate(...$args) {
    return bf(...$args);
}

function test(): void {
    if (candidate(""Jupiter"", ""Neptune"") !== array(""Saturn"", ""Uranus"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Earth"", ""Mercury"") !== array(""Venus"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Mercury"", ""Uranus"") !== array(""Venus"", ""Earth"", ""Mars"", ""Jupiter"", ""Saturn"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Neptune"", ""Venus"") !== array(""Earth"", ""Mars"", ""Jupiter"", ""Saturn"", ""Uranus"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Earth"", ""Earth"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""Mars"", ""Earth"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""Jupiter"", ""Makemake"") !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_149,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଆପଣ ଭାବୁଥିବେ ସବୁ ଶବ୍ଦ ସମାନ ଲମ୍ବର ହେବ ।//ଫଳନଟି ଏକ ସର୍ଟ କ୍ରମରେ ଏକ ଶୃଙ୍ଖଳା ଶୃଙ୍ଖଳା ଫେରାଇବ.//ଯଦି ଦୁଇଟି ଶବ୍ଦର ଲମ୍ବ ସମାନ, ତେବେ ଆଲଫାବେଟିକ କ୍ରମରେ ସର୍ଟ କରନ୍ତୁ.//ସେହି ନିୟମ ଦ୍ୱାରା ସଜାଡ଼ାଯାଇଥିବା ଆରେ ଫେରାଇବ.//ଆରେର କ୍ରମାଙ୍କ ପ୍ରତ୍ୟେକ ଶବ୍ଦର ଲମ୍ବ ଅନୁସାରେ ବୃଦ୍ଧି ହେବା ଉଚିତ, ଏବଂ ଆପଣ //ଏବଂ ଏଥିରେ ଡୁପ୍ଲିକେଟ୍ ମଧ୍ୟ ରହିପାରେ ।//ଏକ ସରଳୀକରଣ ସର୍ବଦା ଏକ ସରଳୀକରଣ ଅଟେ ଏବଂ କେବେ ବି ଏକ ସଂଖ୍ୟାର ସରଳୀକରଣ ନୁହେଁ, //ଏବଂ ଫଳାଫଳ ଆରେକୁ ଏକ ସର୍ଟ ହୋଇଥିବା କ୍ରମରେ ଫେରାଇଥାଏ, // ଏହାଠାରୁ ଅଜଣା ଲମ୍ବ ଥିବା ଷ୍ଟ୍ରିଙ୍ଗକୁ ଲିଭାଇଥାଏ,//ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ସରଳୀକୃତ ଧାଡ଼ିଗୁଡ଼ିକୁ ଏକ ପାରାମିଟର ଭାବରେ ଗ୍ରହଣ କରିଥାଏ, // >>> list_sort(array(""aa"", ""a"", ""aaa""))
// array(""aa"")
// >>> list_sort(array(""ab"", ""a"", ""aaa"", ""cd""))
// array(""ab"", ""cd"")
function sorted_list_sum($lst) {
","function sorted_list_sum($lst) {
    // Filter out strings with odd lengths
    $filtered = array_filter($lst, function($str) {
        return strlen($str) % 2 == 0;
    });
    
    // Sort the filtered array by length and then alphabetically
    usort($filtered, function($a, $b) {
        $lengthComparison = strlen($a) - strlen($b);
        if ($lengthComparison == 0) {
            return strcmp($a, $b);
        }
        return $lengthComparison;
    });

    return $filtered;
}","function candidate(...$args) {
    return sorted_list_sum(...$args);
}

function test(): void {
    if (candidate(array(""aa"", ""a"", ""aaa"")) !== array(""aa"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""school"", ""AI"", ""asdf"", ""b"")) !== array(""AI"", ""asdf"", ""school"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""d"", ""b"", ""c"", ""a"")) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""d"", ""dcba"", ""abcd"", ""a"")) !== array(""abcd"", ""dcba"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""AI"", ""ai"", ""au"")) !== array(""AI"", ""ai"", ""au"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""a"", ""b"", ""b"", ""c"", ""c"", ""a"")) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""aaaa"", ""bbbb"", ""dd"", ""cc"")) !== array(""cc"", ""dd"", ""aaaa"", ""bbbb"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_150,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏକ ଅଶୂନ୍ୟ ସଂଖ୍ୟା ଏବଂ y ର ମୂଲ୍ୟ ଫେରାଇବ _//ଗୋଟିଏ ସରଳ ପ୍ରୋଗ୍ରାମ ଯାହା x ର ମୂଲ୍ୟ ଫେରାଇବ ଯଦି n ହେଉଛି // >>> x_or_y(7, 34, 12)
// 34
// >>> x_or_y(15, 8, 5)
// 5
function x_or_y($n, $x, $y) {
","function x_or_y($n, $x, $y) {
    if (is_prime($n)) {
        return $x;
    } else {
        return $y;
    }
}

function is_prime($num) {
    if ($num <= 1) {
        return false;
    }
    if ($num <= 3) {
        return true;
    }
    if ($num % 2 == 0 || $num % 3 == 0) {
        return false;
    }
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) {
            return false;
        }
    }
    return true;
}","function candidate(...$args) {
    return x_or_y(...$args);
}

function test(): void {
    if (candidate(7, 34, 12) !== 34) { throw new Exception(""Test failed!""); }
    if (candidate(15, 8, 5) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(3, 33, 5212) !== 33) { throw new Exception(""Test failed!""); }
    if (candidate(1259, 3, 52) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(7919, -1, 12) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(""Test failed!""); }
    if (candidate(91, 56, 129) !== 129) { throw new Exception(""Test failed!""); }
    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 0) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 0) !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_151,ory_Orya,php,"<?php
//ସେହି ସଂଖ୍ୟାଗୁଡ଼ିକୁ ଅଣଦେଖା କରନ୍ତୁ ଯାହା ନକାରାତ୍ମକ କିମ୍ବା ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାଗୁଡିକ ନୁହେଁ ।//ଏକ ସଂଖ୍ୟାର ସରଳୀକୃତ, ସଂଖ୍ୟାର ବର୍ଗର ସମୁଦାୟକୁ ଫେରାଇଦିଅନ୍ତୁ // >>> double_the_difference(array(1, 3, 2, 0))
// 10
// >>> double_the_difference(array(-1, -2, 0))
// 0
// >>> double_the_difference(array(9, -2))
// 81
// >>> double_the_difference(array(0))
// 0
// If the input array is empty, return 0.
function double_the_difference($lst) {
","function double_the_difference($lst) {
    $sum = 0;
    foreach ($lst as $num) {
        if (is_int($num) && $num > 0 && $num % 2 !== 0) {
            $sum += $num * $num;
        }
    }
    return $sum;
}

// Example usage:
// echo double_the_difference(array(1, 3, 2, 0)); // 10
// echo double_the_difference(array(-1, -2, 0)); // 0
// echo double_the_difference(array(9, -2)); // 81
// echo double_the_difference(array(0)); // 0","function candidate(...$args) {
    return double_the_difference(...$args);
}

function test(): void {
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.0, -2.0, 8.0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.2, 3.0, 5.0)) !== 34) { throw new Exception(""Test failed!""); }
    if (candidate(array(-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_152,ory_Orya,php,"<?php
//ଉଦାହରଣ: //ଯଦି 0 ନ ହୁଏ, ତେବେ ମୂଲ୍ୟାଙ୍କନ ହେଉଛି ଅନୁମାନ ଓ ସ୍କୋର ମଧ୍ୟରେ ଥିବା ଅସୀମ ପାର୍ଥକ୍ୟ ।//ସମାନ ଲମ୍ବର ଏକ ଆରେ ଫେରାଇଥାଏ, ପ୍ରତ୍ୟେକ ଅନୁମାନ କେତେ ଦୂର ଥିଲା ତାହା ଦର୍ଶାଇଥାଏ। ଯଦି ସେମାନେ ସଠିକ୍ ଅନୁମାନ କରିଛନ୍ତି, //ଆପଣଙ୍କୁ ସମାନ ଲମ୍ବର ଦୁଇଟି ସ୍କୋର ଏବଂ ଅନୁମାନର ଆରେ ଦିଆଯାଏ, ଯେଉଁଠାରେ ପ୍ରତ୍ୟେକ ସୂଚକାଙ୍କ ଏକ ମେଳ ଦେଖାଏ _//ଆପଣଙ୍କ କାମ ହେଉଛି ଏହା ଜାଣିବା ଯେ ଜଣେ ବ୍ୟକ୍ତି କେତେଗୁଡ଼ିଏ ମ୍ୟାଚର ଫଳାଫଳକୁ ସଠିକ ଭାବରେ ଅନୁମାନ କରିପାରିଛନ୍ତି କି ନାହିଁ ।//ଏହା ନିଶ୍ଚିତ ଭାବେ ଉଲ୍ଲେଖନୀୟ ଏବଂ ତୁଳନାତ୍ମକ ।//ଏହି ଘଟଣାଟି ଶେଷରେ ଜଣା ପଡିଛି । ସେହି ମୁହୂର୍ତ୍ତରେ ଆପଣଙ୍କର ଭାବନା ଏବଂ ଚିନ୍ତାଧାରା ହେଉଛି //ମୁଁ ଭାବୁଛି ଆମେ ସମସ୍ତେ ସେହି ଅନୁଭବକୁ ମନେ ପକାଉଛୁ ଯେତେବେଳେ ଦୀର୍ଘ ପ୍ରତୀକ୍ଷିତ // >>> compare(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))
// array(0, 0, 0, 0, 3, 3)
// >>> compare(array(0, 5, 0, 0, 0, 4), array(4, 1, 1, 0, 0, -2))
// array(4, 4, 1, 0, 0, 6)
function compare($game, $guess) {
","function compare($game, $guess) {
    $result = array();
    for ($i = 0; $i < count($game); $i++) {
        $result[] = abs($game[$i] - $guess[$i]);
    }
    return $result;
}","function candidate(...$args) {
    return compare(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_153,ory_Orya,php,"<?php
//ଉଦାହରଣ://(ଏହାର ଶକ୍ତି -୧) ।//'Slices.SERVINGSliCes' କୁ ଫେରାଇଥାଏ କାରଣ 'SERVINGSliCes' ହେଉଛି ସବୁଠାରୁ ଶକ୍ତିଶାଳୀ ସଂପ୍ରସାରଣ //['ସର୍ଭିଙ୍ଗ୍ ସିଲିସ୍', 'ଚିଜ୍', 'ଷ୍ଟୁଫେଡ୍'] ତେବେ ଆପଣ //ଉଦାହରଣ ସ୍ୱରୂପ, ଯଦି ଆପଣଙ୍କୁ ""Slices"" ଦିଆଯାଏ ତେବେ ଏହା ହେଉଛି ଶ୍ରେଣୀ ଏବଂ  ର ଏକ ସରଳୀକରଣ//ଆରେରେ ପ୍ରଥମେ ଆସୁଥିବା ଗୋଟିଏକୁ ବାଛନ୍ତୁ.//ଯଦି ଦୁଇଟି କିମ୍ବା ଅଧିକ ସଂପ୍ରସାରଣ ସମାନ ଶକ୍ତି ସହିତ ଅଛି, ତେବେ ଆପଣ //ଶୈଳୀ: ଶ୍ରେଣୀ ନାମ. ଶକ୍ତିଶାଳୀ ଅନୁଲଗ୍ନ ନାମ. //ଆପଣଙ୍କୁ ସବୁଠାରୁ ଅଧିକ ଶକ୍ତିଶାଳୀ ସଂପ୍ରସାରଣ ଖୋଜିବାକୁ ହେବ ଏବଂ ଏଥିରେ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ୍ ଫେରାଇବାକୁ ହେବ//ସଂପ୍ରସାରଣର ନାମରେ, ଶକ୍ତି CAP - SM ଫ୍ରାକସନ୍ ଦ୍ୱାରା ଦିଆଯାଇଥାଏ ।//ସଂପ୍ରସାରଣର ନାମରେ ଥିବା ଅକ୍ଷର, ଏବଂ SM କୁ ଛୋଟ ଅକ୍ଷର ସଂଖ୍ୟା ଭାବରେ ଗ୍ରହଣ କରନ୍ତୁ //ସଂପ୍ରସାରଣର ଶକ୍ତି ନିମ୍ନଲିଖିତ ଅଟେ: CAP କୁ ବଡ଼ ଅକ୍ଷରର ସଂଖ୍ୟା ବୋଲି ଧରିନେବା //ସେହି ସମ୍ପ୍ରସାରଣଗୁଡ଼ିକ ଶ୍ରେଣୀକୁ ଅତିରିକ୍ତ ଶ୍ରେଣୀଗୁଡ଼ିକୁ ଲୋଡ୍ କରିବା ପାଇଁ ବ୍ୟବହାର କରାଯିବ ।//ଆପଣଙ୍କୁ ଏକ ଶ୍ରେଣୀ ନାମ (ଏକ ବାକ୍ୟଖଣ୍ଡ) ଏବଂ ଏକ ସଂପ୍ରସାରଣର ଏକ ସରଳୀକୃତ ଦିଆଯିବ.// >>> Strongest_Extension(""my_class"", array(""AA"", ""Be"", ""CC""))
// ""my_class.AA""
function Strongest_Extension($class_name, $extensions) {
","function Strongest_Extension($class_name, $extensions) {
    $strongestExtension = '';
    $maxStrength = null;

    foreach ($extensions as $extension) {
        $cap = preg_match_all('/[A-Z]/', $extension);
        $sm = preg_match_all('/[a-z]/', $extension);
        $strength = $cap - $sm;

        if ($maxStrength === null || $strength > $maxStrength) {
            $maxStrength = $strength;
            $strongestExtension = $extension;
        }
    }

    return $class_name . '.' . $strongestExtension;
}","function candidate(...$args) {
    return Strongest_Extension(...$args);
}

function test(): void {
    if (candidate(""Watashi"", array(""tEN"", ""niNE"", ""eIGHt8OKe"")) !== ""Watashi.eIGHt8OKe"") { throw new Exception(""Test failed!""); }
    if (candidate(""Boku123"", array(""nani"", ""NazeDa"", ""YEs.WeCaNe"", ""32145tggg"")) !== ""Boku123.YEs.WeCaNe"") { throw new Exception(""Test failed!""); }
    if (candidate(""__YESIMHERE"", array(""t"", ""eMptY"", ""nothing"", ""zeR00"", ""NuLl__"", ""123NoooneB321"")) !== ""__YESIMHERE.NuLl__"") { throw new Exception(""Test failed!""); }
    if (candidate(""K"", array(""Ta"", ""TAR"", ""t234An"", ""cosSo"")) !== ""K.TAR"") { throw new Exception(""Test failed!""); }
    if (candidate(""__HAHA"", array(""Tab"", ""123"", ""781345"", ""-_-"")) !== ""__HAHA.123"") { throw new Exception(""Test failed!""); }
    if (candidate(""YameRore"", array(""HhAas"", ""okIWILL123"", ""WorkOut"", ""Fails"", ""-_-"")) !== ""YameRore.okIWILL123"") { throw new Exception(""Test failed!""); }
    if (candidate(""finNNalLLly"", array(""Die"", ""NowW"", ""Wow"", ""WoW"")) !== ""finNNalLLly.WoW"") { throw new Exception(""Test failed!""); }
    if (candidate(""_"", array(""Bb"", ""91245"")) !== ""_.Bb"") { throw new Exception(""Test failed!""); }
    if (candidate(""Sp"", array(""671235"", ""Bb"")) !== ""Sp.671235"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_154,ory_Orya,php,"<?php
//ଆପଣଙ୍କୁ ୨ଟି ଶବ୍ଦ ଦିଆଯାଇଛି. ଆପଣଙ୍କୁ ସତ୍ୟ ଫେରାଇବାକୁ ହେବ ଯଦି ଦ୍ୱିତୀୟ ଶବ୍ଦ କିମ୍ବା ଏହାର କୌଣସି ଘୂର୍ଣ୍ଣନ ପ୍ରଥମ ଶବ୍ଦରେ ଏକ ସବଷ୍ଟ୍ରିଙ୍ଗ୍ // >>> cycpattern_check(""abcd"", ""abd"")
// false
// >>> cycpattern_check(""hello"", ""ell"")
// true
// >>> cycpattern_check(""whassup"", ""psus"")
// false
// >>> cycpattern_check(""abab"", ""baa"")
// true
// >>> cycpattern_check(""efef"", ""eeff"")
// false
// >>> cycpattern_check(""himenss"", ""simen"")
// true
function cycpattern_check($a, $b) {
","function cycpattern_check($a, $b) {
    $lenB = strlen($b);
    // Generate all rotations of the second word
    for ($i = 0; $i < $lenB; $i++) {
        $rotation = substr($b, $i) . substr($b, 0, $i);
        if (strpos($a, $rotation) !== false) {
            return true;
        }
    }
    return false;
}","function candidate(...$args) {
    return cycpattern_check(...$args);
}

function test(): void {
    if (candidate(""xyzw"", ""xyw"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""yello"", ""ell"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""whattup"", ""ptut"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""efef"", ""fee"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""abab"", ""aabb"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""winemtt"", ""tinem"") !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_155,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଏକ ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଦିଆଗଲା, ଏକ ସରଳୀକରଣ ଫେରାଇଥାଏ ଯେଉଁଥିରେ ଯଥାକ୍ରମେ ଯୁଗ୍ମ ଏବଂ ଅଙ୍କ ସଂଖ୍ୟା ଥାଏ ।// >>> even_odd_count(-12)
// array(1, 1)
// >>> even_odd_count(123)
// array(1, 2)
function even_odd_count($num) {
","function even_odd_count($num) {
    $num = abs($num);
    $evenCount = 0;
    $oddCount = 0;

    while ($num > 0) {
        $digit = $num % 10;
        if ($digit % 2 == 0) {
            $evenCount++;
        } else {
            $oddCount++;
        }
        $num = intval($num / 10);
    }

    return array($evenCount, $oddCount);
}","function candidate(...$args) {
    return even_odd_count(...$args);
}

function test(): void {
    if (candidate(7) !== array(0, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(-78) !== array(1, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(3452) !== array(2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(346211) !== array(3, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(-345821) !== array(3, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(-2) !== array(1, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(-45347) !== array(2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== array(1, 0)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_156,ory_Orya,php,"<?php
//ଉଦାହରଣ://ପ୍ରତିବନ୍ଧକ: 1 <= ସଂଖ୍ୟା <= 1000 //ଏବଂ ଏହାକୁ ଛୋଟ ଅକ୍ଷରରେ ଲେଖନ୍ତୁ ।//ଏକ ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା ଦିଆଗଲା, ଏହାର ରୋମାନ୍ ସଂଖ୍ୟା ସମକକ୍ଷକୁ ଏକ ଷ୍ଟ୍ରିଙ୍ଗ ଭାବରେ ପ୍ରାପ୍ତ କରନ୍ତୁ, // >>> int_to_mini_roman(19)
// ""xix""
// >>> int_to_mini_roman(152)
// ""clii""
// >>> int_to_mini_roman(426)
// ""cdxxvi""
function int_to_mini_roman($number) {
","function int_to_mini_roman($number) {
    $map = [
        1000 => 'm',
        900 => 'cm',
        500 => 'd',
        400 => 'cd',
        100 => 'c',
        90 => 'xc',
        50 => 'l',
        40 => 'xl',
        10 => 'x',
        9 => 'ix',
        5 => 'v',
        4 => 'iv',
        1 => 'i'
    ];

    $roman = '';
    while ($number > 0) {
        foreach ($map as $val => $symbol) {
            if ($number >= $val) {
                $roman .= $symbol;
                $number -= $val;
                break;
            }
        }
    }

    return $roman;
}","function candidate(...$args) {
    return int_to_mini_roman(...$args);
}

function test(): void {
    if (candidate(19) !== ""xix"") { throw new Exception(""Test failed!""); }
    if (candidate(152) !== ""clii"") { throw new Exception(""Test failed!""); }
    if (candidate(251) !== ""ccli"") { throw new Exception(""Test failed!""); }
    if (candidate(426) !== ""cdxxvi"") { throw new Exception(""Test failed!""); }
    if (candidate(500) !== ""d"") { throw new Exception(""Test failed!""); }
    if (candidate(1) !== ""i"") { throw new Exception(""Test failed!""); }
    if (candidate(4) !== ""iv"") { throw new Exception(""Test failed!""); }
    if (candidate(43) !== ""xliii"") { throw new Exception(""Test failed!""); }
    if (candidate(90) !== ""xc"") { throw new Exception(""Test failed!""); }
    if (candidate(94) !== ""xciv"") { throw new Exception(""Test failed!""); }
    if (candidate(532) !== ""dxxxii"") { throw new Exception(""Test failed!""); }
    if (candidate(900) !== ""cm"") { throw new Exception(""Test failed!""); }
    if (candidate(994) !== ""cmxciv"") { throw new Exception(""Test failed!""); }
    if (candidate(1000) !== ""m"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_157,ory_Orya,php,"<?php
//ଉଦାହରଣ://90 ଡିଗ୍ରୀ ।//ଏକ ସଠିକ କୋଣ ବିଶିଷ୍ଟ ତ୍ରିଭୁଜ ହେଉଛି ଏକ ତ୍ରିଭୁଜ ଯେଉଁଥିରେ ଗୋଟିଏ କୋଣ ସଠିକ କୋଣ ବା //ପାର୍ଶ୍ବଗୁଡ଼ିକ ଏକ ସଠିକ କୋଣ ବିଶିଷ୍ଟ ତ୍ରିଭୁଜ ଗଠନ କରେ, ଅନ୍ୟଥା ଏହା ମିଥ୍ୟା ।//ତ୍ରିଭୁଜର ତିନି ପାର୍ଶ୍ବ ର ଲମ୍ବ ଦିଆଗଲା.// >>> right_angle_triangle(3, 4, 5)
// true
// >>> right_angle_triangle(1, 2, 3)
// false
function right_angle_triangle($a, $b, $c) {
","function right_angle_triangle($a, $b, $c) {
    // Sort the sides to make it easier to apply the Pythagorean theorem
    $sides = [$a, $b, $c];
    sort($sides);
    
    // Apply the Pythagorean theorem to check for a right-angled triangle
    return $sides[0] ** 2 + $sides[1] ** 2 === $sides[2] ** 2;
}","function candidate(...$args) {
    return right_angle_triangle(...$args);
}

function test(): void {
    if (candidate(3, 4, 5) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 3) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(10, 6, 8) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(7, 24, 25) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(10, 5, 7) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(5, 12, 13) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(15, 8, 17) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(48, 55, 73) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1, 1, 1) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 10) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_158,ory_Orya,php,"<?php
//ଅକ୍ଷରଗୁଡ଼ିକର ତାଲିକାକୁ ବଦଳାଇ, ଶବ୍ଦକୋଷିକ କ୍ରମରେ ପ୍ରଥମେ ଆସୁଥିବା ଅକ୍ଷରକୁ ଫେରାଇବ ।//ଯଦି ଏକାଧିକ ଷ୍ଟ୍ରିଙ୍ଗ୍ ରେ ସର୍ବାଧିକ ସଂଖ୍ୟକ ଅନନ୍ୟ ଅକ୍ଷର ଅଛି //ଏହି ଧାଡ଼ିରେ ଭିନ୍ନ ଭିନ୍ନ ଶବ୍ଦ ଅଛି. ସର୍ବାଧିକ ସଂଖ୍ୟକ ସହିତ ଶବ୍ଦକୁ ଫେରାଇଦିଅନ୍ତୁ //ଏକ ଫଳନ ଲେଖନ୍ତୁ ଯାହା ଏକ ଶୃଙ୍ଖଳାକୁ ଗ୍ରହଣ କରେ _// >>> find_max(array(""name"", ""of"", ""string""))
// ""string""
// >>> find_max(array(""name"", ""enam"", ""game""))
// ""enam""
// >>> find_max(array(""aaaaaaa"", ""bb"", ""cc""))
// ""aaaaaaa""
function find_max($words) {
","function find_max($words) {
    $maxUniqueChars = 0;
    $result = '';
    
    foreach ($words as $word) {
        // Get unique characters count
        $uniqueCharsCount = count(array_unique(str_split($word)));
        
        // Determine if this word has more unique characters or comes first lexicographically
        if ($uniqueCharsCount > $maxUniqueChars || ($uniqueCharsCount === $maxUniqueChars && ($result === '' || strcmp($word, $result) < 0))) {
            $maxUniqueChars = $uniqueCharsCount;
            $result = $word;
        }
    }
    
    return $result;
}","function candidate(...$args) {
    return find_max(...$args);
}

function test(): void {
    if (candidate(array(""name"", ""of"", ""string"")) !== ""string"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""name"", ""enam"", ""game"")) !== ""enam"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""aaaaaaa"", ""bb"", ""cc"")) !== ""aaaaaaa"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""abc"", ""cba"")) !== ""abc"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""play"", ""this"", ""game"", ""of"", ""footbott"")) !== ""footbott"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""we"", ""are"", ""gonna"", ""rock"")) !== ""gonna"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""we"", ""are"", ""a"", ""mad"", ""nation"")) !== ""nation"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""this"", ""is"", ""a"", ""prrk"")) !== ""this"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""b"")) !== ""b"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""play"", ""play"", ""play"")) !== ""play"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_159,ory_Orya,php,"<?php
//ଉଦାହରଣ://ଯଦି ବାକି ଥିବା ଗାଜର ଯଥେଷ୍ଟ ନଥାଏ, ତେବେ ଆପଣ ବାକି ଥିବା ଗାଜର ସବୁ ଖାଇଦେବେ, କିନ୍ତୁ ତଥାପି ଆପଣଙ୍କୁ ଭୋକ ଲାଗିବ ।//ଖାଦ୍ୟ ଖାଇବା ପରେ କେତେ ଗାଜର ବାକି ଅଛି ] //ଆପଣ ଖାଦ୍ୟ ଖାଇବା ପରେ ଖାଇଥିବା ଗାଜରର ମୋଟ ସଂଖ୍ୟାକୁ ଫେରାଇବେ ।//କିନ୍ତୁ ଏବେ ଆପଣଙ୍କୁ ଅଧିକ ଗାଜର ଖାଇବା ଆବଶ୍ୟକ, ଯାହାଦ୍ୱାରା ଆପଣ ଦିନର ଖାଦ୍ୟକୁ ସଂପୂର୍ଣ୍ଣ କରିପାରିବେ ।//ତୁମେ ଭୋକିଲା ବିଲେଇ, ଏବଂ ତୁମେ ପୂର୍ବରୁ କିଛି ଗାଜର ଖାଇ ସାରିଛ,// >>> eat(5, 6, 10)
// array(11, 4)
// >>> eat(4, 8, 9)
// array(12, 1)
// >>> eat(1, 10, 10)
// array(11, 0)
// >>> eat(2, 11, 5)
// array(7, 0)
// Variables:
// @number : integer
// the number of carrots that you have eaten.
// @need : integer
// the number of carrots that you need to eat.
// @remaining : integer
// the number of remaining carrots thet exist in stock
// Constrain:
// * 0 <= number <= 1000
// * 0 <= need <= 1000
// * 0 <= remaining <= 1000
// Have fun :)
function eat($number, $need, $remaining) {
","function eat($number, $need, $remaining) {
    $totalEaten = $number + min($need, $remaining);
    $carrotsLeft = max(0, $remaining - $need);
    return array($totalEaten, $carrotsLeft);
}","function candidate(...$args) {
    return eat(...$args);
}

function test(): void {
    if (candidate(5, 6, 10) !== array(11, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(4, 8, 9) !== array(12, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(1, 10, 10) !== array(11, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(2, 11, 5) !== array(7, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(4, 5, 7) !== array(9, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(4, 5, 1) !== array(5, 0)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_160,ory_Orya,php,"<?php
//ଅପରେଟର ମାର୍ଜୀରେ ଅତି କମରେ ଗୋଟିଏ ଅପରେଟର ଥାଏ, ଏବଂ ଅପରେଣ୍ଡ ମାର୍ଜୀରେ ଅତି କମରେ ଦୁଇଟି ଅପରେଣ୍ଡ ଥାଏ ।//ଅପରେଣ୍ଡ ହେଉଛି ଏକ ନନ୍-ନଗେଟିଭ୍ ଇଣ୍ଟେଜର ଆରେ ।//ଅପରେଟର ଆରେର ଲମ୍ବ ଅପରେଣ୍ଡ ଆରେର ଲମ୍ବ ଏକରୁ କମ୍ ।//ନୋଟ: //=> ଫଳ = 9 //ଫଳ = 2 + 3 * 4 - 5 //ଆରେ = [2, 3, 4, 5] //ଅପରେଟର ['+', '*', '-'] //ଉଦାହରଣ://ବିସ୍ତାରିତ (**) //ମହଲା ବିଭାଜନ ( //) //ଗୁଣନ (*) //କାଟିବା (- ) //ଯୋଗ କରିବା (+) //ମୌଳିକ ବୀଜାଣୁ କ୍ରିୟା://expression କୁ ପୁନଃସ୍ଥାପନ କରି expression ର ମୂଲ୍ୟାଙ୍କନକୁ ଫେରାଇଥାଏ.//ଦ୍ବିତୀୟ ଧାଡି ହେଉଛି ସମ୍ପୂର୍ଣ୍ଣ ସଂଖ୍ୟାମାନଙ୍କର ଧାଡି ।//ଦୁଇଟି ଆରେ ଅପରେଟର ଏବଂ ଅପରେଣ୍ଡ ଦିଆଗଲା। ପ୍ରଥମ ଆରେରେ ମୌଳିକ ଆଲଜେବ୍ରିକ କାର୍ଯ୍ୟ ଅଛି, ଏବଂ function do_algebra($operator, $operand) {
","function do_algebra($operator, $operand) {
    $expression = $operand[0]; // Start with the first operand
    for ($i = 0; $i < count($operator); $i++) {
        $currentOperator = $operator[$i];
        $currentOperand = $operand[$i + 1];
        
        switch ($currentOperator) {
            case '+':
                $expression .= "" + $currentOperand"";
                break;
            case '-':
                $expression .= "" - $currentOperand"";
                break;
            case '*':
                $expression .= "" * $currentOperand"";
                break;
            case '//':
                $expression .= "" // $currentOperand"";
                break;
            case '**':
                $expression .= "" ** $currentOperand"";
                break;
        }
    }

    // Use eval to evaluate the constructed expression
    eval(""\$result = {$expression};"");

    // Return the result
    return $result;
}","function candidate(...$args) {
    return do_algebra(...$args);
}

function test(): void {
    if (candidate(array(""**"", ""*"", ""+""), array(2, 3, 4, 5)) !== 37) { throw new Exception(""Test failed!""); }
    if (candidate(array(""+"", ""*"", ""-""), array(2, 3, 4, 5)) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(array(""//"", ""*""), array(7, 3, 4)) !== 8) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_161,ory_Orya,php,"<?php
//ଉଦାହରଣ //ଫଳନଟି ଫଳାଫଳ ବାକ୍ୟଖଣ୍ଡକୁ ଫେରାଇବ.//ଯଦି string ରେ କୌଣସି ଅକ୍ଷର ନଥାଏ, ତେବେ string କୁ ଓଲଟାଇ ଦିଅନ୍ତୁ.//ନଚେତ ସେମିତି ରଖ ।//ଯଦି s[i] ଏକ ଅକ୍ଷର, ତେବେ ଏହାର କେସକୁ ନିମ୍ନରୁ ଉପର କିମ୍ବା ବାମରୁ ବାମକୁ ଓଲଟାଇ ଦିଅନ୍ତୁ, //ଆପଣଙ୍କୁ ଗୋଟିଏ string s ଦିଆଗଲା.// >>> solve(""1234"")
// ""4321""
// >>> solve(""ab"")
// ""AB""
// >>> solve(""#a@C"")
// ""#A@c""
function solve($s) {
","function solve($s) {
    // Check if the string contains any letter
    if (preg_match('/[a-zA-Z]/', $s)) {
        // Change the case for each character in the string
        $result = '';
        for ($i = 0; $i < strlen($s); $i++) {
            $char = $s[$i];
            if (ctype_alpha($char)) {
                // If the character is a letter, reverse its case
                if (ctype_lower($char)) {
                    $result .= strtoupper($char);
                } else {
                    $result .= strtolower($char);
                }
            } else {
                // Otherwise, keep it as it is
                $result .= $char;
            }
        }
        return $result;
    } else {
        // If the string contains no letters, reverse the string
        return strrev($s);
    }
}","function candidate(...$args) {
    return solve(...$args);
}

function test(): void {
    if (candidate(""AsDf"") !== ""aSdF"") { throw new Exception(""Test failed!""); }
    if (candidate(""1234"") !== ""4321"") { throw new Exception(""Test failed!""); }
    if (candidate(""ab"") !== ""AB"") { throw new Exception(""Test failed!""); }
    if (candidate(""#a@C"") !== ""#A@c"") { throw new Exception(""Test failed!""); }
    if (candidate(""#AsdfW^45"") !== ""#aSDFw^45"") { throw new Exception(""Test failed!""); }
    if (candidate(""#6@2"") !== ""2@6#"") { throw new Exception(""Test failed!""); }
    if (candidate(""#$a^D"") !== ""#$A^d"") { throw new Exception(""Test failed!""); }
    if (candidate(""#ccc"") !== ""#CCC"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_162,ory_Orya,php,"<?php
//ଯଦି 'text' ଏକ ଖାଲି ଷ୍ଟ୍ରିଙ୍ଗ, null ଫେରାଇଥାଏ.//ଏକ ଷ୍ଟ୍ରିଙ୍ଗ 'ଟେକ୍ସଟ' ଦିଆଗଲା, ଏହାର md5 ହ୍ୟାଶ ସମକକ୍ଷ ଷ୍ଟ୍ରିଙ୍ଗ ଫେରାଇଦେବେ.// >>> string_to_md5(""Hello world"")
// ""3e25960a79dbc69b674cd4ec67a72c62""
function string_to_md5($text) {
","function string_to_md5($text) {
    if ($text === '') {
        return null;
    }
    return md5($text);
}","function candidate(...$args) {
    return string_to_md5(...$args);
}

function test(): void {
    if (candidate(""Hello world"") !== ""3e25960a79dbc69b674cd4ec67a72c62"") { throw new Exception(""Test failed!""); }
    if (candidate("""") !== null) { throw new Exception(""Test failed!""); }
    if (candidate(""A B C"") !== ""0ef78513b0cb8cef12743f5aeb35f888"") { throw new Exception(""Test failed!""); }
    if (candidate(""password"") !== ""5f4dcc3b5aa765d61d8327deb882cf99"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_163,ory_Orya,php,"<?php
//ଉଦାହରଣ ସ୍ୱରୂପ: //ଏବଂ b, କ୍ରମାନୁସାରେ ।//ଦୁଇଟି ସକାରାତ୍ମକ ପୂର୍ଣ୍ଣ ସଂଖ୍ୟା a ଏବଂ b ଦିଆଗଲା, a  ମଧ୍ୟରେ ଥିବା ଯୁଗ୍ମ ଅଙ୍କକୁ ଫେରାଇବ// >>> generate_integers(2, 8)
// array(2, 4, 6, 8)
// >>> generate_integers(8, 2)
// array(2, 4, 6, 8)
// >>> generate_integers(10, 14)
// array()
function generate_integers($a, $b) {
","function generate_integers($a, $b) {
    $evenNumbers = [];
    $start = min($a, $b);
    $end = max($a, $b);
    for ($i = $start; $i <= $end; $i++) {
        if ($i % 2 == 0) {
            $evenNumbers[] = $i;
        }
    }
    return $evenNumbers;
}","function candidate(...$args) {
    return generate_integers(...$args);
}

function test(): void {
    if (candidate(2, 10) !== array(2, 4, 6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(10, 2) !== array(2, 4, 6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(132, 2) !== array(2, 4, 6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(17, 89) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
