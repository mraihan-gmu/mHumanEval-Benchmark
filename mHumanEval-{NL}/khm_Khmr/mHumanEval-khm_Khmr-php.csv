task_id,nl,pl,prompt,canonical_solution,tests
HumanEval_0,khm_Khmr,php,"<?php
//កម្រិតកំណត់។//ពិនិត្យមើលថា ក្នុងអារេនៃលេខដែលបានផ្តល់ជូន តើមានលេខពីរណាដែលជិតគ្នាជាង // >>> has_close_elements(array(1.0, 2.0, 3.0), 0.5)
// false
// >>> has_close_elements(array(1.0, 2.8, 3.0, 4.0, 5.0, 2.0), 0.3)
// true
function has_close_elements($numbers, $threshold) {
","function has_close_elements($numbers, $threshold) {
    $count = count($numbers);
    for ($i = 0; $i < $count; $i++) {
        for ($j = $i + 1; $j < $count; $j++) {
            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {
                return true;
            }
        }
    }
    return false;
}","function candidate(...$args) {
    return has_close_elements(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.3) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2), 0.05) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.95) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0), 0.8) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0), 0.1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 1.0) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1), 0.5) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_1,khm_Khmr,php,"<?php
//សូមបំភ្លេចអគារដែលស្ថិតនៅក្នុង string input ។//ក្រុមដាច់ដោយឡែកត្រូវបានតុល្យភាព (ស្លាកស្នាមបើកនីមួយៗ ត្រូវបានបិទត្រឹមត្រូវ) និងមិនត្រូវបានបង្កប់គ្នាទៅវិញទៅមក។//បែងចែកក្រុមទាំងនោះទៅជាសរសៃដែកដាច់ដោយឡែក និងបញ្ជូន array របស់ពួកគេ។//Input ទៅកាន់ function នេះគឺជា string ដែលមានក្រុមច្រើននៃ parentheses ដែលមានកន្ទុយ។ គោលដៅរបស់អ្នកគឺដើម្បី // >>> separate_paren_groups(""( ) (( )) (( )( ))"")
// array(""()"", ""(())"", ""(()())"")
function separate_paren_groups($paren_string) {
","function separate_paren_groups($paren_string) {
    $paren_string = str_replace(' ', '', $paren_string);
    $groups = [];
    $balance = 0;
    $currentGroup = '';

    for ($i = 0; $i < strlen($paren_string); $i++) {
        $char = $paren_string[$i];
        $currentGroup .= $char;

        if ($char === '(') {
            $balance++;
        } elseif ($char === ')') {
            $balance--;
        }

        if ($balance === 0 && $currentGroup !== '') {
            $groups[] = $currentGroup;
            $currentGroup = '';
        }
    }

    return $groups;
}","function candidate(...$args) {
    return separate_paren_groups(...$args);
}

function test(): void {
    if (candidate(""(()()) ((())) () ((())()())"") !== array(""(()())"", ""((()))"", ""()"", ""((())()())"")) { throw new Exception(""Test failed!""); }
    if (candidate(""() (()) ((())) (((())))"") !== array(""()"", ""(())"", ""((()))"", ""(((())))"")) { throw new Exception(""Test failed!""); }
    if (candidate(""(()(())((())))"") !== array(""(()(())((())))"")) { throw new Exception(""Test failed!""); }
    if (candidate(""( ) (( )) (( )( ))"") !== array(""()"", ""(())"", ""(()())"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_2,khm_Khmr,php,"<?php
//សូមត្រឡប់ទៅផ្នែកដប់នៃចំនួន។//(ភាគដែលនៅសល់គឺតូចជាង 1 ដដែល) ។//និងភាគគុណនៃចំនួនសរុប (ចំនួនសរុបធំជាងចំនួនដែលបានផ្តល់) និងតួលេខដប់ //ដោយបានផ្តល់ចំនួនពិន្ទុលេចធ្លាយវិជ្ជមានវាអាចត្រូវបានបំបែកទៅជា // >>> truncate_number(3.5)
// 0.5
function truncate_number($number) {
","function truncate_number($number) {
    $integerPart = floor($number);  // Get the integer part using floor
    return $number - $integerPart;  // Subtract the integer part from the original number to get the decimal part
}","function candidate(...$args) {
    return truncate_number(...$args);
}

function test(): void {
    if (candidate(3.5) !== 0.5) { throw new Exception(""Test failed!""); }
    if (candidate(1.25) !== 0.25) { throw new Exception(""Test failed!""); }
    if (candidate(123.0) !== 0.0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_3,khm_Khmr,php,"<?php
//នៅចំណុចនោះ function គួរតែត្រឡប់ true វិញ បើមិនដូច្នេះទេវាគួរតែត្រឡប់ false វិញ។//សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់សល់//អ្នកត្រូវបានផ្តល់នូវការដាក់ប្រាក់ និងការដកប្រាក់ជាច្រើនទៅលើគណនីធនាគារ ដែលចាប់ផ្តើមដោយ // >>> below_zero(array(1, 2, 3))
// false
// >>> below_zero(array(1, 2, -4, 5))
// true
function below_zero($operations) {
","function below_zero($operations) {
    $balance = 0;
    foreach ($operations as $operation) {
        $balance += $operation;
        if ($balance < 0) {
            return true;
        }
    }
    return false;
}","function candidate(...$args) {
    return below_zero(...$args);
}

function test(): void {
    if (candidate(array()) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, -3, 1, 2, -3)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, -4, 5, 6)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -4)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 2, -2, 5, -5, 4, -5)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -2, 2, -2, 5, -5, 4, -4)) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_4,khm_Khmr,php,"<?php
//MAD = មធ្យម  x - x_mean //ចំណុច និង ចំណុចកណ្តាល (មធ្យមក្នុងករណីនេះ) ៖//Mean Absolute Deviation គឺជាការខុសគ្នារវាងទាំងពីរ។//នៅជុំវិញមធ្យមនៃតួលេខនេះ ។//សម្រាប់ការផ្តល់នូវលំដាប់នៃលេខចូល, គណនា Mean Absolute Deviation ។// >>> mean_absolute_deviation(array(1.0, 2.0, 3.0, 4.0))
// 1.0
function mean_absolute_deviation($numbers) {
","function mean_absolute_deviation($numbers) {
    $n = count($numbers);
    if ($n == 0) return 0;
    
    $mean = array_sum($numbers) / $n;
    $absoluteDifferences = array_map(function($x) use ($mean) {
        return abs($x - $mean);
    }, $numbers);
    
    return array_sum($absoluteDifferences) / $n;
}","function candidate(...$args) {
    return mean_absolute_deviation(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0)) !== 0.5) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0)) !== 1.0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== 1.2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_5,khm_Khmr,php,"<?php
//បញ្ចូលលេខ ""ដកដង្ហើម"" រវាងតួទាំងពីរដងជាប់គ្នានៃ array input ∀numbers"" // >>> intersperse(array(), 4)
// array()
// >>> intersperse(array(1, 2, 3), 4)
// array(1, 4, 2, 4, 3)
function intersperse($numbers, $delimeter) {
","function intersperse($numbers, $delimeter) {
    if (empty($numbers)) {
        return $numbers;
    }
    $result = array();
    $count = count($numbers);
    for ($i = 0; $i < $count; $i++) {
        $result[] = $numbers[$i];
        if ($i < $count - 1) {
            $result[] = $delimeter;
        }
    }
    return $result;
}","function candidate(...$args) {
    return intersperse(...$args);
}

function test(): void {
    if (candidate(array(), 7) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 3, 2), 8) !== array(5, 8, 6, 8, 3, 8, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 2, 2), 2) !== array(2, 2, 2, 2, 2)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_6,khm_Khmr,php,"<?php
//ឧទាហរណ៍ (() (()) មានកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិតកម្រិត//សម្រាប់ក្រុមនីមួយៗ បញ្ចេញកម្រិតជ្រៅបំផុតនៃការដាក់គំនុំ។//Input ទៅកាន់ function នេះគឺជា string តំណាងឱ្យក្រុមជាច្រើនសម្រាប់ parentheses nested បំបែកដោយ spaces ។// >>> parse_nested_parens(""(()()) ((())) () ((())()())"")
// array(2, 3, 1, 3)
function parse_nested_parens($paren_string) {
","function parse_nested_parens($paren_string) {
    $groups = explode(' ', $paren_string);
    $results = [];

    foreach ($groups as $group) {
        $max_depth = 0;
        $current_depth = 0;

        for ($i = 0; $i < strlen($group); $i++) {
            if ($group[$i] === '(') {
                $current_depth++;
                if ($current_depth > $max_depth) {
                    $max_depth = $current_depth;
                }
            } elseif ($group[$i] === ')') {
                $current_depth--;
            }
        }

        $results[] = $max_depth;
    }

    return $results;
}","function candidate(...$args) {
    return parse_nested_parens(...$args);
}

function test(): void {
    if (candidate(""(()()) ((())) () ((())()())"") !== array(2, 3, 1, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(""() (()) ((())) (((())))"") !== array(1, 2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(""(()(())((())))"") !== array(4)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_7,khm_Khmr,php,"<?php
//ការបាញ់ត្រីអារេនៃខ្សែបញ្ចូលសម្រាប់តែខ្សែបញ្ចូលដែលមានខ្សែសង្វាក់មួយដែលបានផ្តល់ជូន // >>> filter_by_substring(array(), ""a"")
// array()
// >>> filter_by_substring(array(""abc"", ""bacd"", ""cde"", ""array""), ""a"")
// array(""abc"", ""bacd"", ""array"")
function filter_by_substring($strings, $substring) {
","function filter_by_substring($strings, $substring) {
    $filtered = array();
    foreach ($strings as $string) {
        if (strpos($string, $substring) !== false) {
            $filtered[] = $string;
        }
    }
    return $filtered;
}","function candidate(...$args) {
    return filter_by_substring(...$args);
}

function test(): void {
    if (candidate(array(), ""john"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""xxx"", ""asd"", ""xxy"", ""john doe"", ""xxxAAA"", ""xxx""), ""xxx"") !== array(""xxx"", ""xxxAAA"", ""xxx"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""xxx"", ""asd"", ""aaaxxy"", ""john doe"", ""xxxAAA"", ""xxx""), ""xx"") !== array(""xxx"", ""aaaxxy"", ""xxxAAA"", ""xxx"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""grunt"", ""trumpet"", ""prune"", ""gruesome""), ""run"") !== array(""grunt"", ""prune"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_8,khm_Khmr,php,"<?php
//លទ្ធផលសរុបគ្មានត្រូវជា 0 ហើយលទ្ធផល ផលិតផលគ្មានត្រូវជា 1 ។//សម្រាប់ array នៃចំនួនពេញមួយដែលត្រូវបានផ្តល់ជូន, សូមត្រឡប់ទៅ array ដែលមានចំនួន និងផលិតនៃចំនួនពេញទាំងអស់នៅក្នុង array ។ // >>> sum_product(array())
// array(0, 1)
// >>> sum_product(array(1, 2, 3, 4))
// array(10, 24)
function sum_product($numbers) {
","function sum_product($numbers) {
    $sum = 0;
    $product = 1;
    
    foreach ($numbers as $number) {
        $sum += $number;
        $product *= $number;
    }
    
    return array($sum, $product);
}","function candidate(...$args) {
    return sum_product(...$args);
}

function test(): void {
    if (candidate(array()) !== array(0, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, 0)) !== array(100, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 5, 7)) !== array(15, 105)) { throw new Exception(""Test failed!""); }
    if (candidate(array(10)) !== array(10, 10)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_9,khm_Khmr,php,"<?php
//ក្នុងលំដាប់។//ពី array នៃចំនួនពេញមួយដែលត្រូវបានផ្តល់ឱ្យបង្កើត array នៃ rolling ដែលមានអក្សរច្រើនបំផុតដែលត្រូវបានរកឃើញរហូតដល់ពេលកំណត់។// >>> rolling_max(array(1, 2, 3, 2, 3, 4, 2))
// array(1, 2, 3, 3, 3, 4, 4)
function rolling_max($numbers) {
","function rolling_max($numbers) {
    $result = [];
    $current_max = null;

    foreach ($numbers as $number) {
        if ($current_max === null || $number > $current_max) {
            $current_max = $number;
        }
        $result[] = $current_max;
    }

    return $result;
}","function candidate(...$args) {
    return rolling_max(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 2, 1)) !== array(4, 4, 4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 3, 100, 3)) !== array(3, 3, 3, 100, 100)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_10,khm_Khmr,php,"<?php
//- ត្រូវបន្ថែមទៅចុងនៃខ្សែប្រឆាំងនៃ prefix ខ្សែដែលមកមុននៃ suffix palindromic ។//- រក postfix ដែលមានរយៈពេលវែងបំផុតនៃ string ដែលបានផ្តល់ដែលជា palindrome ។//គំនិតអាល់ហ្សេរីទាំគឺងាយស្រួល: //រក palindrome ខ្លីបំផុតដែលចាប់ផ្តើមដោយខ្សែដែលផ្តល់ជូន។// >>> make_palindrome("""")
// """"
// >>> make_palindrome(""cat"")
// ""catac""
// >>> make_palindrome(""cata"")
// ""catac""
function make_palindrome($string) {
","function make_palindrome($string) {
    $n = strlen($string);
    if ($n == 0) {
        return """";
    }
    
    // Check for the longest palindrome suffix
    for ($i = $n; $i >= 0; $i--) {
        if (is_palindrome(substr($string, $i))) {
            break;
        }
    }
    
    // Get the prefix before the palindromic suffix
    $prefix = substr($string, 0, $i);
    
    // Append the reverse of prefix to the end of the original string
    return $string . strrev($prefix);
}

// Helper function to check if a string is a palindrome
function is_palindrome($s) {
    return $s === strrev($s);
}","function candidate(...$args) {
    return make_palindrome(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""x"") !== ""x"") { throw new Exception(""Test failed!""); }
    if (candidate(""xyz"") !== ""xyzyx"") { throw new Exception(""Test failed!""); }
    if (candidate(""xyx"") !== ""xyx"") { throw new Exception(""Test failed!""); }
    if (candidate(""jerry"") !== ""jerryrrej"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_11,khm_Khmr,php,"<?php
//អនុវត្ត XOR ជាគូលើការចូលទាំងនេះ និងត្រឡប់លទ្ធផលមកវិញជា string ។//Input គឺជា string a និង b ដែលមានតែ 1 និង 0 ប៉ុណ្ណោះ// >>> string_xor(""010"", ""110"")
// ""100""
function string_xor($a, $b) {
","function string_xor($a, $b) {
    $result = '';
    for ($i = 0; $i < strlen($a); $i++) {
        $result .= ($a[$i] === $b[$i]) ? '0' : '1';
    }
    return $result;
}","function candidate(...$args) {
    return string_xor(...$args);
}

function test(): void {
    if (candidate(""111000"", ""101010"") !== ""010010"") { throw new Exception(""Test failed!""); }
    if (candidate(""1"", ""1"") !== ""0"") { throw new Exception(""Test failed!""); }
    if (candidate(""0101"", ""0000"") !== ""0101"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_12,khm_Khmr,php,"<?php
//return null ក្នុងករណី array input គឺគ្មាន។//ក្នុងអារេនៃខ្សែ, សូមត្រឡប់ទៅខ្សែវែងបំផុត។ ត្រឡប់ទៅខ្សែវែងដំបូងក្នុងករណីមានច្រើន។// >>> longest(array())
// null
// >>> longest(array(""a"", ""b"", ""c""))
// ""a""
// >>> longest(array(""a"", ""bb"", ""ccc""))
// ""ccc""
function longest($strings) {
","function longest($strings) {
    if (empty($strings)) {
        return null;
    }

    $longestString = $strings[0];
    foreach ($strings as $string) {
        if (strlen($string) > strlen($longestString)) {
            $longestString = $string;
        }
    }

    return $longestString;
}","function candidate(...$args) {
    return longest(...$args);
}

function test(): void {
    if (candidate(array()) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""y"", ""z"")) !== ""x"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""yyy"", ""zzzz"", ""www"", ""kkkk"", ""abc"")) !== ""zzzz"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_13,khm_Khmr,php,"<?php
//ត្រឡប់មកវិញនូវមធ្យមភាគរួមដ៏ធំបំផុតនៃចំនួនគត់ a និង b ។// >>> greatest_common_divisor(3, 5)
// 1
// >>> greatest_common_divisor(25, 15)
// 5
function greatest_common_divisor($a, $b) {
","function greatest_common_divisor($a, $b) {
    while ($b != 0) {
        $t = $b;
        $b = $a % $b;
        $a = $t;
    }
    return $a;
}","function candidate(...$args) {
    return greatest_common_divisor(...$args);
}

function test(): void {
    if (candidate(3, 7) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(10, 15) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(49, 14) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(144, 60) !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_14,khm_Khmr,php,"<?php
//ត្រឡប់មកវិញនូវ array នៃ prefixes ទាំងអស់ពី shortest ទៅ longest នៃ string input ។// >>> all_prefixes(""abc"")
// array(""a"", ""ab"", ""abc"")
function all_prefixes($string) {
","function all_prefixes($string) {
    $prefixes = array();
    $length = strlen($string);
    for ($i = 1; $i <= $length; $i++) {
        $prefixes[] = substr($string, 0, $i);
    }
    return $prefixes;
}","function candidate(...$args) {
    return all_prefixes(...$args);
}

function test(): void {
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""asdfgh"") !== array(""a"", ""as"", ""asd"", ""asdf"", ""asdfg"", ""asdfgh"")) { throw new Exception(""Test failed!""); }
    if (candidate(""WWW"") !== array(""W"", ""WW"", ""WWW"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_15,khm_Khmr,php,"<?php
//បញ្ជូន string ដែលមានចំនួនកំណត់ដោយអវកាសចាប់ពី 0 រហូតដល់ n រួមបញ្ចូលគ្នា។ // >>> string_sequence(0)
// ""0""
// >>> string_sequence(5)
// ""0 1 2 3 4 5""
function string_sequence($n) {
","function string_sequence($n) {
    $sequence = range(0, $n);
    return implode(' ', $sequence);
}","function candidate(...$args) {
    return string_sequence(...$args);
}

function test(): void {
    if (candidate(0) !== ""0"") { throw new Exception(""Test failed!""); }
    if (candidate(3) !== ""0 1 2 3"") { throw new Exception(""Test failed!""); }
    if (candidate(10) !== ""0 1 2 3 4 5 6 7 8 9 10"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_16,khm_Khmr,php,"<?php
//ផ្តល់នូវសរសៃមួយ, រកមើលថា តើមានសញ្ញាបត្រខុសគ្នាប៉ុន្មាន (មិនគិតពី case) ដែលវាមានរួមបញ្ចូលគ្នា // >>> count_distinct_characters(""xyzXYZ"")
// 3
// >>> count_distinct_characters(""Jerry"")
// 4
function count_distinct_characters($string) {
","function count_distinct_characters($string) {
    $string = strtolower($string);
    $distinctChars = array_count_values(str_split($string));
    return count($distinctChars);
}","function candidate(...$args) {
    return count_distinct_characters(...$args);
}

function test(): void {
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""abcde"") !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdecadeCADE"") !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaaAAAAaaaa"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""Jerry jERRY JeRRRY"") !== 5) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_17,khm_Khmr,php,"<?php
//""កំពូល"" - កំពូលតួ, មានរយៈពេលមួយដង//""o ""កម្រ"" - កន្លះតួ, មានរយៈពេលពីរដង//""O"" - តួទាំងមូល, មានរយៈពេលបួនដង//នេះគឺជារឿងនិទានមួយ://មិន មែន ចុង ក្រោយ ទេ ។//កិច្ចការរបស់អ្នកគឺដើម្បីកែសម្រួលសរសៃនេះ និងត្រឡប់មកវិញ array នៃចំនួនពេញដែលផ្ទៀងផ្ទាត់ទៅនឹងចំនួនដងដែលវាធ្វើរៀងៗ//Input ទៅកាន់ function នេះគឺជា string តំណាងឱ្យតួអក្សរចម្រៀងក្នុងទម្រង់ ASCII ពិសេស។// >>> parse_music(""o o| .| o| o| .| .| .| .| o o"")
// array(4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4)
function parse_music($music_string) {
","function parse_music($music_string) {
    $notes = explode("" "", trim($music_string));
    $beats = [];

    foreach ($notes as $note) {
        switch ($note) {
            case 'o':
                $beats[] = 4;
                break;
            case 'o|':
                $beats[] = 2;
                break;
            case '.|':
                $beats[] = 1;
                break;
        }
    }

    return $beats;
}","function candidate(...$args) {
    return parse_music(...$args);
}

function test(): void {
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""o o o o"") !== array(4, 4, 4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate("".| .| .| .|"") !== array(1, 1, 1, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(""o| o| .| .| o o o o"") !== array(2, 2, 1, 1, 4, 4, 4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(""o| .| o| .| o o| o o|"") !== array(2, 1, 2, 1, 4, 2, 4, 2)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_18,khm_Khmr,php,"<?php
//រកមើលថា តើមានប៉ុន្មានដងដែលខ្សែអក្សរមួយអាចត្រូវបានរកឃើញនៅក្នុងខ្សែអក្សរដើម។ រាប់បញ្ចូលករណីផ្ទុយគ្នា។ // >>> how_many_times("""", ""a"")
// 0
// >>> how_many_times(""aaa"", ""a"")
// 3
// >>> how_many_times(""aaaa"", ""aa"")
// 3
function how_many_times($string, $substring) {
","function how_many_times($string, $substring) {
    if ($substring === """") {
        return 0;
    }
    
    $count = 0;
    $position = 0;
    $subLen = strlen($substring);
    
    while (($position = strpos($string, $substring, $position)) !== false) {
        $count++;
        $position += 1;
    }
    
    return $count;
}","function candidate(...$args) {
    return how_many_times(...$args);
}

function test(): void {
    if (candidate("""", ""x"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""xyxyxyx"", ""x"") !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(""cacacacac"", ""cac"") !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(""john doe"", ""john"") !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_19,khm_Khmr,php,"<?php
//បញ្ជូនលេខដែលត្រូវបានរៀបចំនៃទំហំតូចបំផុតទៅធំបំផុត//ការជ្រើសរើសដែលត្រឹមត្រូវគឺ 'សូន្យ', 'មួយ', 'ពីរ', 'បី', 'បួន', 'ប្រាំ', 'ប្រាំមួយ', 'ប្រាំពីរ', 'ប្រាំបី' និង 'ប្រាំបួន' ។//Input គឺជា string ដែលមានអវកាសកំណត់នៃ numberals ពី 'សូន្យ' ទៅ 'ប្រាំមួយ' ។// >>> sort_numbers(""three one five"")
// ""one three five""
function sort_numbers($numbers) {
","function sort_numbers($numbers) {
    // Define an array to map string numerals to their respective integer values
    $numeral_to_value = [
        'zero' => 0,
        'one' => 1,
        'two' => 2,
        'three' => 3,
        'four' => 4,
        'five' => 5,
        'six' => 6,
        'seven' => 7,
        'eight' => 8,
        'nine' => 9
    ];

    // Split the input string into an array of words
    $number_words = explode("" "", $numbers);

    // Sort the array using the integer values from numeral_to_value
    usort($number_words, function($a, $b) use ($numeral_to_value) {
        return $numeral_to_value[$a] - $numeral_to_value[$b];
    });

    // Join the sorted array back into a string and return it
    return implode("" "", $number_words);
}","function candidate(...$args) {
    return sort_numbers(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""three"") !== ""three"") { throw new Exception(""Test failed!""); }
    if (candidate(""three five nine"") !== ""three five nine"") { throw new Exception(""Test failed!""); }
    if (candidate(""five zero four seven nine eight"") !== ""zero four five seven eight nine"") { throw new Exception(""Test failed!""); }
    if (candidate(""six five four three two one zero"") !== ""zero one two three four five six"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_20,khm_Khmr,php,"<?php
//ទៀត ហើយ បញ្ជូន មក តាម លំដាប់ (ចំនួន តូច ជាង ចំនួន ធំ) ។//ពីតារាងចំនួនដែលផ្តល់ជូន (ដែលមានទំហំយ៉ាងហោចណាស់ពីរ) ជ្រើសរើសនិងត្រឡប់មកវិញចំនួនពីរដែលជិតបំផុតទៅនឹងម្នាក់ៗ// >>> find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))
// array(2.0, 2.2)
// >>> find_closest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))
// array(2.0, 2.0)
function find_closest_elements($numbers) {
","function find_closest_elements($numbers) {
    sort($numbers);
    $minDiff = PHP_FLOAT_MAX;
    $closestPair = array();

    for ($i = 0; $i < count($numbers) - 1; $i++) {
        $diff = abs($numbers[$i + 1] - $numbers[$i]);
        if ($diff < $minDiff) {
            $minDiff = $diff;
            $closestPair = array($numbers[$i], $numbers[$i + 1]);
        }
    }

    return $closestPair;
}","function candidate(...$args) {
    return find_closest_elements(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_21,khm_Khmr,php,"<?php
//ដូច្នេះចំនួនតូចបំផុតនឹងក្លាយជា 0 ហើយចំនួនធំបំផុតនឹងក្លាយជា 1 ។//ដោយបានផ្តល់នូវ array នៃលេខ (យ៉ាងហោចណាស់មានពីរ element) សូមអនុវត្តការផ្លាស់ប្តូរ linear ទៅលើ array នោះ, // >>> rescale_to_unit(array(1.0, 2.0, 3.0, 4.0, 5.0))
// array(0.0, 0.25, 0.5, 0.75, 1.0)
function rescale_to_unit($numbers) {
","function rescale_to_unit($numbers) {
    $min = min($numbers);
    $max = max($numbers);
    if ($max == $min) {
        return array_fill(0, count($numbers), 0.0);
    }
    
    $result = array_map(function($num) use ($min, $max) {
        return ($num - $min) / ($max - $min);
    }, $numbers);
    
    return $result;
}","function candidate(...$args) {
    return rescale_to_unit(...$args);
}

function test(): void {
    if (candidate(array(2.0, 49.9)) !== array(0.0, 1.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(100.0, 49.9)) !== array(1.0, 0.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0)) !== array(0.0, 0.25, 0.5, 0.75, 1.0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2.0, 1.0, 5.0, 3.0, 4.0)) !== array(0.25, 0.0, 1.0, 0.5, 0.75)) { throw new Exception(""Test failed!""); }
    if (candidate(array(12.0, 11.0, 15.0, 13.0, 14.0)) !== array(0.25, 0.0, 1.0, 0.5, 0.75)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_22,khm_Khmr,php,"<?php
//ការបាញ់ត្រី array នៃតម្លៃ phpthon ណាមួយសម្រាប់ចំនួនពេញតែប៉ុណ្ណោះ// >>> filter_integers(array(""a"", 3.14, 5))
// array(5)
// >>> filter_integers(array(1, 2, 3, ""abc"", array(), array()))
// array(1, 2, 3)
function filter_integers($values) {
","function filter_integers($values) {
    return array_values(array_filter($values, 'is_int'));
}","function candidate(...$args) {
    return filter_integers(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, array(), array(), 23.2, 9, ""adasd"")) !== array(4, 9)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, ""c"", 3, 3, ""a"", ""b"")) !== array(3, 3, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_23,khm_Khmr,php,"<?php
//ត្រឡប់មកវិញនៃខ្សែដែលបានផ្តល់ជូន// >>> strlen("""")
// 0
// >>> strlen(""abc"")
// 3
function strlen($string) {
","function strlen($string) {
    $length = 0;
    while (isset($string[$length])) {
        $length++;
    }
    return $length;
}","function candidate(...$args) {
    return strlen(...$args);
}

function test(): void {
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""x"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""asdasnakj"") !== 9) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_24,khm_Khmr,php,"<?php
//សម្រាប់ចំនួន n ដែលបានផ្តល់អោយ, រកចំនួនធំជាងគេដែលបែងចែក n បានស្មើគ្នា, តូចជាង n // >>> largest_divisor(15)
// 5
function largest_divisor($n) {
","function largest_divisor($n) {
    for ($i = $n - 1; $i > 0; $i--) {
        if ($n % $i === 0) {
            return $i;
        }
    }
    return null; // In case no divisor is found, though for n > 1 there will always be one.
}","function candidate(...$args) {
    return largest_divisor(...$args);
}

function test(): void {
    if (candidate(3) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 50) { throw new Exception(""Test failed!""); }
    if (candidate(49) !== 7) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_25,khm_Khmr,php,"<?php
//ចំនួន Input ត្រូវតែស្មើនឹង ផលិតផលនៃកត្តាទាំងអស់//កត្តានីមួយៗ ត្រូវរៀបចំជាលំដាប់ចំនួនដង ដែលទាក់ទងនឹងចំនួនដងដែលវាបង្ហាញនៅក្នុងការបំបែកជាកត្តា។//វិលត្រឡប់ array នៃភាគរយដើមនៃចំនួនគត់ដែលត្រូវបានផ្តល់ក្នុងលំដាប់ពីតូចបំផុតទៅធំបំផុត។// >>> factorize(8)
// array(2, 2, 2)
// >>> factorize(25)
// array(5, 5)
// >>> factorize(70)
// array(2, 5, 7)
function factorize($n) {
","function factorize($n) {
    $factors = array();
    // Check for number of twos
    while ($n % 2 == 0) {
        $factors[] = 2;
        $n = $n / 2;
    }
    // Check for odd numbers
    for ($i = 3; $i <= sqrt($n); $i += 2) {
        while ($n % $i == 0) {
            $factors[] = $i;
            $n = $n / $i;
        }
    }
    // If n becomes a prime number greater than 2
    if ($n > 2) {
        $factors[] = $n;
    }
    return $factors;
}","function candidate(...$args) {
    return factorize(...$args);
}

function test(): void {
    if (candidate(2) !== array(2)) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== array(2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== array(2, 2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(57) !== array(3, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(3249) !== array(3, 3, 19, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(185193) !== array(3, 3, 3, 19, 19, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(20577) !== array(3, 19, 19, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(18) !== array(2, 3, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_26,khm_Khmr,php,"<?php
//រក្សាលំដាប់នៃអំបិលនៅដដែលដូចក្នុងចំណូល។//ពី array នៃ integer, ដក element ទាំងអស់ ដែល កើតឡើង ច្រើនជាង មួយដង ។// >>> remove_duplicates(array(1, 2, 3, 2, 4))
// array(1, 3, 4)
function remove_duplicates($numbers) {
","function remove_duplicates($numbers) {
    $counts = array_count_values($numbers);
    return array_values(array_filter($numbers, function($num) use ($counts) {
        return $counts[$num] === 1;
    }));
}","function candidate(...$args) {
    return remove_duplicates(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_27,khm_Khmr,php,"<?php
//សម្រាប់សេរ៊ីមួយដែលបានកំណត់ សូមបម្លែងអក្សរតូចទៅជាអក្សរធំ និងអក្សរធំទៅជាអក្សរតូច។// >>> flip_case(""Hello"")
// ""hELLO""
function flip_case($string) {
","function flip_case($string) {
    $flippedString = '';
    for ($i = 0; $i < strlen($string); $i++) {
        $char = $string[$i];
        if (ctype_lower($char)) {
            $flippedString .= strtoupper($char);
        } else if (ctype_upper($char)) {
            $flippedString .= strtolower($char);
        } else {
            $flippedString .= $char;
        }
    }
    return $flippedString;
}","function candidate(...$args) {
    return flip_case(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""Hello!"") !== ""hELLO!"") { throw new Exception(""Test failed!""); }
    if (candidate(""These violent delights have violent ends"") !== ""tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_28,khm_Khmr,php,"<?php
//ការបង្កើនតារាងនៃសរសៃវ៉ែនតានៅក្នុងសរសៃតែមួយ// >>> concatenate(array())
// """"
// >>> concatenate(array(""a"", ""b"", ""c""))
// ""abc""
function concatenate($strings) {
","function concatenate($strings) {
    return implode('', $strings);
}","function candidate(...$args) {
    return concatenate(...$args);
}

function test(): void {
    if (candidate(array()) !== """") { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""y"", ""z"")) !== ""xyz"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""x"", ""y"", ""z"", ""w"", ""k"")) !== ""xyzwk"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_29,khm_Khmr,php,"<?php
//ការកាត់បន្ថយអត្រានៃខ្សែដែលចាប់ផ្តើមដោយអក្សរ prefix ណាមួយ// >>> filter_by_prefix(array(), ""a"")
// array()
// >>> filter_by_prefix(array(""abc"", ""bcd"", ""cde"", ""array""), ""a"")
// array(""abc"", ""array"")
function filter_by_prefix($strings, $prefix) {
","function filter_by_prefix($strings, $prefix) {
    $result = array_filter($strings, function($string) use ($prefix) {
        return strpos($string, $prefix) === 0;
    });
    return array_values($result);
}","function candidate(...$args) {
    return filter_by_prefix(...$args);
}

function test(): void {
    if (candidate(array(), ""john"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""xxx"", ""asd"", ""xxy"", ""john doe"", ""xxxAAA"", ""xxx""), ""xxx"") !== array(""xxx"", ""xxxAAA"", ""xxx"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_30,khm_Khmr,php,"<?php
//វិលត្រឡប់មកវិញតែចំនួនវិជ្ជមាននៅក្នុង array ។// >>> get_positive(array(-1, 2, -4, 5, 6))
// array(2, 5, 6)
// >>> get_positive(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))
// array(5, 3, 2, 3, 9, 123, 1)
function get_positive($l) {
","function get_positive($l) {
    return array_filter($l, function($num) {
        return $num > 0;
    });
}","function candidate(...$args) {
    return get_positive(...$args);
}

function test(): void {
    if (candidate(array(-1, -2, 4, 5, 6)) !== array(4, 5, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10)) !== array(5, 3, 2, 3, 3, 9, 123, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2)) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_31,khm_Khmr,php,"<?php
//វិលត្រឡប់ true ប្រសិនបើចំនួនដែលបានផ្តល់គឺ prime ហើយ false បើមិនដូច្នេះទេ ។// >>> is_prime(6)
// false
// >>> is_prime(101)
// true
// >>> is_prime(11)
// true
// >>> is_prime(13441)
// true
// >>> is_prime(61)
// true
// >>> is_prime(4)
// false
// >>> is_prime(1)
// false
function is_prime($n) {
","function is_prime($n) {
    if ($n <= 1) return false;
    if ($n <= 3) return true;
    if ($n % 2 == 0 || $n % 3 == 0) return false;

    for ($i = 5; $i * $i <= $n; $i += 6) {
        if ($n % $i == 0 || $n % ($i + 2) == 0) return false;
    }
    return true;
}","function candidate(...$args) {
    return is_prime(...$args);
}

function test(): void {
    if (candidate(6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(101) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(13441) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(61) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(17) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(85) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(77) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(255379) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_33,khm_Khmr,php,"<?php
//ទៅនឹងតម្លៃនៃតារាងពិន្ទុដែលពាក់ព័ន្ធនឹង l ប៉ុន្តែត្រូវបានជ្រើសរើស។//l' គឺដូចគ្នាទៅនឹង l នៅក្នុងតារាងដែលមិនអាចបែងចែកបានដោយបី ខណៈដែលតម្លៃរបស់វានៅតារាងដែលអាចបែងចែកបានដោយបីគឺស្មើគ្នា //តួអង្គនេះយក array l ហើយវិលត្រឡប់ array l' ដូចនេះថា // >>> sort_third(array(1, 2, 3))
// array(1, 2, 3)
// >>> sort_third(array(5, 6, 3, 4, 8, 9, 2))
// array(2, 6, 3, 4, 8, 9, 5)
function sort_third($l) {
","function sort_third($l) {
    $length = count($l);
    $div_by_three_values = [];

    // Collect values at indices divisible by three
    for ($i = 0; $i < $length; $i++) {
        if ($i % 3 == 0) {
            $div_by_three_values[] = $l[$i];
        }
    }

    // Sort the collected values
    sort($div_by_three_values);

    // Replace original values with sorted ones at indices divisible by three
    $index = 0;
    for ($i = 0; $i < $length; $i++) {
        if ($i % 3 == 0) {
            $l[$i] = $div_by_three_values[$index];
            $index++;
        }
    }

    return $l;
}","function candidate(...$args) {
    return sort_third(...$args);
}

function test(): void {
    if (candidate(array(5, 6, 3, 4, 8, 9, 2)) !== array(2, 6, 3, 4, 8, 9, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 8, 3, 4, 6, 9, 2)) !== array(2, 8, 3, 4, 6, 9, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 9, 4, 8, 3, 2)) !== array(2, 6, 9, 4, 8, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 3, 4, 8, 9, 2, 1)) !== array(2, 6, 3, 4, 8, 9, 5, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_34,khm_Khmr,php,"<?php
//បញ្ជូនតួឯកឯកទេសដែលត្រូវបានជ្រើសរើសនៅក្នុង array មួយ// >>> unique(array(5, 3, 5, 2, 3, 3, 9, 0, 123))
// array(0, 2, 3, 5, 9, 123)
function unique($l) {
","function unique($l) {
    // Use array_unique to remove duplicates
    $uniqueArray = array_unique($l);
    // Sort the result array
    sort($uniqueArray);
    return $uniqueArray;
}

// Example usage
$result = unique(array(5, 3, 5, 2, 3, 3, 9, 0, 123));
print_r($result);","function candidate(...$args) {
    return unique(...$args);
}

function test(): void {
    if (candidate(array(5, 3, 5, 2, 3, 3, 9, 0, 123)) !== array(0, 2, 3, 5, 9, 123)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_35,khm_Khmr,php,"<?php
//បញ្ជូនអក្សរអតិបរមានៅក្នុង array ។// >>> max_element(array(1, 2, 3))
// 3
// >>> max_element(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10))
// 123
function max_element($l) {
","function max_element($l) {
    if (empty($l)) {
        return null; // Return null if the array is empty
    }
    $max = $l[0];
    foreach ($l as $value) {
        if ($value > $max) {
            $max = $value;
        }
    }
    return $max;
}","function candidate(...$args) {
    return max_element(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10)) !== 124) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_36,khm_Khmr,php,"<?php
//ស្វែងរកចំនួនដងដែលតួ 7 លេចឡើងនៅក្នុងចំនួនគត់តិចជាង n ដែលអាចបែងចែកបានដោយ 11 ឬ 13 ។ // >>> fizz_buzz(50)
// 0
// >>> fizz_buzz(78)
// 2
// >>> fizz_buzz(79)
// 3
function fizz_buzz($n) {
","function fizz_buzz($n) {
    $count = 0;
    for ($i = 1; $i < $n; $i++) {
        if ($i % 11 == 0 || $i % 13 == 0) {
            $digits = str_split((string)$i);
            foreach ($digits as $digit) {
                if ($digit == '7') {
                    $count++;
                }
            }
        }
    }
    return $count;
}","function candidate(...$args) {
    return fizz_buzz(...$args);
}

function test(): void {
    if (candidate(50) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(78) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(79) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(200) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(4000) !== 192) { throw new Exception(""Test failed!""); }
    if (candidate(10000) !== 639) { throw new Exception(""Test failed!""); }
    if (candidate(100000) !== 8026) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_37,khm_Khmr,php,"<?php
//ទៅនឹងតម្លៃនៃសញ្ញាបត្រដែលស្មើនឹង l ប៉ុន្តែត្រូវបានរៀបចំ។//l' គឺដូចគ្នាទៅនឹង l នៅក្នុងតារាងមិនស្មើគ្នា ខណៈដែលតម្លៃរបស់វានៅតារាងស្មើគ្នាគឺស្មើគ្នា //តួអង្គនេះយក array l ហើយវិលត្រឡប់ array l' ដូចនេះថា // >>> sort_even(array(1, 2, 3))
// array(1, 2, 3)
// >>> sort_even(array(5, 6, 3, 4))
// array(3, 6, 5, 4)
function sort_even($l) {
","function sort_even($l) {
    $even_indices = [];

    // Extract values at even indices
    for ($i = 0; $i < count($l); $i += 2) {
        $even_indices[] = $l[$i];
    }

    // Sort the extracted even-indexed values
    sort($even_indices);

    // Rebuild the original array with sorted even-indexed values
    $evenIndex = 0;
    for ($i = 0; $i < count($l); $i++) {
        if ($i % 2 == 0) {
            $l[$i] = $even_indices[$evenIndex];
            $evenIndex++;
        }
    }

    return $l;
}","function candidate(...$args) {
    return sort_even(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3)) !== array(1, 2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)) !== array(-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 8, -12, 4, 23, 2, 3, 11, 12, -10)) !== array(-12, 8, 3, 4, 5, 2, 12, 11, 23, -10)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_39,khm_Khmr,php,"<?php
//prime_fib ផ្តល់នូវចំនួន n-th ដែលជាចំនួន Fibonacci ហើយវាក៏ជាចំនួនមួយ។ // >>> prime_fib(1)
// 2
// >>> prime_fib(2)
// 3
// >>> prime_fib(3)
// 5
// >>> prime_fib(4)
// 13
// >>> prime_fib(5)
// 89
function prime_fib($n) {
","function is_prime($num) {
    if ($num <= 1) return false;
    if ($num <= 3) return true;
    if ($num % 2 == 0 || $num % 3 == 0) return false;
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) return false;
    }
    return true;
}

function prime_fib($n) {
    $fib1 = 1;
    $fib2 = 1;
    $fib_index = 2;
    $prime_fib_count = 0;
    
    while (true) {
        $fib_index++;
        $fib = $fib1 + $fib2;
        $fib1 = $fib2;
        $fib2 = $fib;
        
        if (is_prime($fib)) {
            $prime_fib_count++;
            if ($prime_fib_count == $n) {
                return $fib;
            }
        }
    }
}","function candidate(...$args) {
    return prime_fib(...$args);
}

function test(): void {
    if (candidate(1) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(2) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== 13) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 89) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== 233) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== 1597) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 28657) { throw new Exception(""Test failed!""); }
    if (candidate(9) !== 514229) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 433494437) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_40,khm_Khmr,php,"<?php
//សរុបទៅជាសូន្យ ហើយខុសទៀត។//វានឹងវិលត្រឡប់ true ប្រសិនបើមានអំបិលខុសគ្នាបីនៅក្នុង array ដែល //triples_sum_to_zero ប្រើ array នៃ integer ជា Input ។// >>> triples_sum_to_zero(array(1, 3, 5, 0))
// false
// >>> triples_sum_to_zero(array(1, 3, -2, 1))
// true
// >>> triples_sum_to_zero(array(1, 2, 3, 7))
// false
// >>> triples_sum_to_zero(array(2, 4, -5, 3, 9, 7))
// true
// >>> triples_sum_to_zero(array(1))
// false
function triples_sum_to_zero($l) {
","function triples_sum_to_zero($l) {
    $n = count($l);
    if ($n < 3) return false;
    sort($l);
    for ($i = 0; $i < $n - 2; $i++) {
        $left = $i + 1;
        $right = $n - 1;
        while ($left < $right) {
            $sum = $l[$i] + $l[$left] + $l[$right];
            if ($sum === 0) {
                return true;
            } elseif ($sum < 0) {
                $left++;
            } else {
                $right--;
            }
        }
    }
    return false;
}","function candidate(...$args) {
    return triples_sum_to_zero(...$args);
}

function test(): void {
    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 5, -1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, -2, 1)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 5, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, -5, 3, 9, 7)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 5, -100)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, 3, 5, -100)) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_41,khm_Khmr,php,"<?php
//មុខងារនេះបញ្ចេញចំនួននៃការប៉ះទង្គិចបែបនេះ ។//នៅលើផ្លូវរបស់វា ដូចជាមិនប៉ះទង្គិចគ្នា។//ទោះជាយ៉ាងណាក៏ដោយ រថយន្តទាំងនោះមានភាពរឹងមាំ និងខ្លាំងណាស់ ដូច្នេះហើយពួកគេនៅតែបន្តដំណើរទៅមុខទៀត។//នៅពេលដែលរថយន្តដែលចល័តពីឆ្វេងទៅស្តាំ បុករថយន្តដែលចល័តពីស្តាំទៅឆ្វេង។//រថយន្តទាំងអស់ដើរក្នុងល្បឿនដូចគ្នា រថយន្តពីរគ្រឿងត្រូវបានគេនិយាយថា ប៉ះគ្នា//កំពុងបើកបរពីស្តាំទៅឆ្វេង រថយន្តទាំងពីរបានចាប់ផ្តើមនៅឆ្ងាយពីគ្នា//n រថយន្តកំពុងបើកឆ្វេងទៅស្តាំ; ស្របពេលជាមួយគ្នានោះ, រថយន្ត n ផ្សេងទៀត//សូមទស្សនាបង្ហាញផ្លូវមួយ ដែលមានលក្ខណៈត្រឹមត្រូវ ដោយគ្មានកម្រិត។function car_race_collision($n) {
","function car_race_collision($n) {
    // Each left-to-right moving car will collide with exactly one right-to-left moving car.
    // Therefore, the number of collisions is simply equal to the number of cars in one direction, i.e., n.
    return $n;
}","function candidate(...$args) {
    return car_race_collision(...$args);
}

function test(): void {
    if (candidate(2) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== 16) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 64) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 100) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_42,khm_Khmr,php,"<?php
//ត្រឡប់ array ជាមួយនឹងតួដែលបង្កើនឡើងដោយ 1. // >>> incr_list(array(1, 2, 3))
// array(2, 3, 4)
// >>> incr_list(array(5, 3, 5, 2, 3, 3, 9, 0, 123))
// array(6, 4, 6, 3, 4, 4, 10, 1, 124)
function incr_list($l) {
","function incr_list($l) {
    return array_map(function($item) {
        return $item + 1;
    }, $l);
}","function candidate(...$args) {
    return incr_list(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1)) !== array(4, 3, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 2, 5, 2, 3, 3, 9, 0, 123)) !== array(6, 3, 6, 3, 4, 4, 10, 1, 124)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_43,khm_Khmr,php,"<?php
//សរុបទៅជាសូន្យ ហើយខុសទៀត។//វានឹងវិលត្រឡប់ true ប្រសិនបើមានអំបិលពីរផ្សេងគ្នានៅក្នុង array ដែល //pairs_sum_to_zero ប្រើ array នៃ integer ជា Input ។// >>> pairs_sum_to_zero(array(1, 3, 5, 0))
// false
// >>> pairs_sum_to_zero(array(1, 3, -2, 1))
// false
// >>> pairs_sum_to_zero(array(1, 2, 3, 7))
// false
// >>> pairs_sum_to_zero(array(2, 4, -5, 3, 5, 7))
// true
// >>> pairs_sum_to_zero(array(1))
// false
function pairs_sum_to_zero($l) {
","function pairs_sum_to_zero($l) {
    $seen = [];
    foreach ($l as $num) {
        if (isset($seen[-$num])) {
            return true;
        }
        $seen[$num] = true;
    }
    return false;
}","function candidate(...$args) {
    return pairs_sum_to_zero(...$args);
}

function test(): void {
    if (candidate(array(1, 3, 5, 0)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, -2, 1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, -5, 3, 5, 7)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 3, 2, 30)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 3, 2, 31)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 4, 2, 30)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 9, -1, 4, 2, 31)) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_44,khm_Khmr,php,"<?php
//ចំនួនមូលដ្ឋានគឺតិចជាង 10 ។//return string representation ក្រោយការបម្លែង។//ផ្លាស់ប្តូរមូលដ្ឋានចំនួននៃលេខ x ដែលចូលទៅជាមូលដ្ឋាន។// >>> change_base(8, 3)
// ""22""
// >>> change_base(8, 2)
// ""1000""
// >>> change_base(7, 2)
// ""111""
function change_base($x, $base) {
","function change_base($x, $base) {
    if ($base < 2 || $base > 9) {
        return false; // base must be between 2 and 9
    }
    
    $result = '';
    do {
        $remainder = $x % $base;
        $result = $remainder . $result;
        $x = intdiv($x, $base);
    } while ($x > 0);
    
    return $result;
}","function candidate(...$args) {
    return change_base(...$args);
}

function test(): void {
    if (candidate(8, 3) !== ""22"") { throw new Exception(""Test failed!""); }
    if (candidate(9, 3) !== ""100"") { throw new Exception(""Test failed!""); }
    if (candidate(234, 2) !== ""11101010"") { throw new Exception(""Test failed!""); }
    if (candidate(16, 2) !== ""10000"") { throw new Exception(""Test failed!""); }
    if (candidate(8, 2) !== ""1000"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 2) !== ""111"") { throw new Exception(""Test failed!""); }
    if (candidate(2, 3) !== ""2"") { throw new Exception(""Test failed!""); }
    if (candidate(3, 4) !== ""3"") { throw new Exception(""Test failed!""); }
    if (candidate(4, 5) !== ""4"") { throw new Exception(""Test failed!""); }
    if (candidate(5, 6) !== ""5"") { throw new Exception(""Test failed!""); }
    if (candidate(6, 7) !== ""6"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 8) !== ""7"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_45,khm_Khmr,php,"<?php
//ដោយបានផ្តល់នូវទទឹងនៃផ្នែកមួយ និងផ្ទៃនៃការវិលត្រឡប់ខ្ពស់សម្រាប់ត្រីកោណ។// >>> triangle_area(5, 3)
// 7.5
function triangle_area($a, $h) {
","function triangle_area($a, $h) {
    return 0.5 * $a * $h;
}","function candidate(...$args) {
    return triangle_area(...$args);
}

function test(): void {
    if (candidate(5, 3) !== 7.5) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2) !== 2.0) { throw new Exception(""Test failed!""); }
    if (candidate(10, 8) !== 40.0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_46,khm_Khmr,php,"<?php
//សូមសរសេរ function ដើម្បីធ្វើការគណនាប្រកបដោយប្រសិទ្ធភាពនៃ element n-th នៃ sequence number fib4 ។ កុំប្រើ recursion ។ //fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4) ។//fib4(3) -> 0 //fib4(2) -> 2 //fib4(1) -> 0 //fib4(0) -> 0 //លំដាប់លេខ Fib4 គឺជាលំដាប់ដែលស្រដៀងនឹងលំដាប់ Fibbonacci ដែលត្រូវបានកំណត់ដូចខាងក្រោម: // >>> fib4(5)
// 4
// >>> fib4(6)
// 8
// >>> fib4(7)
// 14
function fib4($n) {
","function fib4($n) {
    if ($n == 0 || $n == 1 || $n == 3) return 0;
    if ($n == 2) return 2;

    $fib4 = [0, 0, 2, 0];
    
    for ($i = 4; $i <= $n; $i++) {
        $fib4[$i % 4] = $fib4[0] + $fib4[1] + $fib4[2] + $fib4[3];
    }

    return $fib4[$n % 4];
}","function candidate(...$args) {
    return fib4(...$args);
}

function test(): void {
    if (candidate(5) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 28) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 104) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== 386) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_47,khm_Khmr,php,"<?php
//វិលត្រឡប់មកវិញនៃអក្សរធាតុនៅក្នុង array l ។ // >>> median(array(3, 1, 2, 4, 5))
// 3
// >>> median(array(-10, 4, 6, 1000, 10, 20))
// 15.0
function median($l) {
","function median($l) {
    sort($l); // Sort the array
    $count = count($l); // Get the count of the array's elements
    
    if ($count % 2 == 0) { // If even number of elements
        $middle1 = $l[$count / 2 - 1];
        $middle2 = $l[$count / 2];
        return ($middle1 + $middle2) / 2;
    } else { // If odd number of elements
        return $l[floor($count / 2)];
    }
}","function candidate(...$args) {
    return median(...$args);
}

function test(): void {
    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(""Test failed!""); }
    if (candidate(array(5)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_48,khm_Khmr,php,"<?php
//ត្រួតពិនិត្យថាតើ string ត្រូវបានផ្តល់ជា palindrome // >>> is_palindrome("""")
// true
// >>> is_palindrome(""aba"")
// true
// >>> is_palindrome(""aaaaa"")
// true
// >>> is_palindrome(""zbcd"")
// false
function is_palindrome($text) {
","function is_palindrome($text) {
    // Remove any white space and convert to lowercase
    $text = strtolower(str_replace(' ', '', $text));
    
    // Get the reversed version of the text
    $reversedText = strrev($text);
    
    // Check if the text is the same as the reversed version
    return $text === $reversedText;
}","function candidate(...$args) {
    return is_palindrome(...$args);
}

function test(): void {
    if (candidate("""") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""aba"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaaa"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""zbcd"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""xywyx"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""xywyz"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""xywzx"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_49,khm_Khmr,php,"<?php
//សូមត្រឡប់ទៅ 2^n modulo p (ត្រូវដឹងអំពីតួអក្សរ) ។// >>> modp(3, 5)
// 3
// >>> modp(1101, 101)
// 2
// >>> modp(0, 101)
// 1
// >>> modp(3, 11)
// 8
// >>> modp(100, 101)
// 1
function modp($n, $p) {
","function modp($n, $p) {
    return pow(2, $n) % $p;
}","function candidate(...$args) {
    return modp(...$args);
}

function test(): void {
    if (candidate(3, 5) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(1101, 101) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(0, 101) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(3, 11) !== 8) { throw new Exception(""Test failed!""); }
    if (candidate(100, 101) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(30, 5) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(31, 5) !== 3) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_51,khm_Khmr,php,"<?php
//remove_vowels គឺជាមុខងារដែលយក string ហើយបញ្ជូន string ដោយគ្មាន vowels ។ // >>> remove_vowels("""")
// """"
// >>> remove_vowels(""abcdef"")
// ""bcdf""
// >>> remove_vowels(""aaaaa"")
// """"
// >>> remove_vowels(""aaBAA"")
// ""B""
// >>> remove_vowels(""zbcd"")
// ""zbcd""
function remove_vowels($text) {
","function remove_vowels($text) {
    return preg_replace('/[aeiouAEIOU]/', '', $text);
}","function candidate(...$args) {
    return remove_vowels(...$args);
}

function test(): void {
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""abcdef\nghijklm"") !== ""bcdf\nghjklm"") { throw new Exception(""Test failed!""); }
    if (candidate(""fedcba"") !== ""fdcb"") { throw new Exception(""Test failed!""); }
    if (candidate(""eeeee"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""acBAA"") !== ""cB"") { throw new Exception(""Test failed!""); }
    if (candidate(""EcBOO"") !== ""cB"") { throw new Exception(""Test failed!""); }
    if (candidate(""ybcd"") !== ""ybcd"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_52,khm_Khmr,php,"<?php
//ត្រឡប់មក true ប្រសិនបើចំនួនទាំងអស់នៅក្នុង array l ស្ថិតនៅក្រោមកម្រិត t ។ // >>> below_threshold(array(1, 2, 4, 10), 100)
// true
// >>> below_threshold(array(1, 20, 4, 10), 5)
// false
function below_threshold($l, $t) {
","function below_threshold($l, $t) {
    foreach ($l as $number) {
        if ($number >= $t) {
            return false;
        }
    }
    return true;
}","function candidate(...$args) {
    return below_threshold(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 4, 10), 100) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10), 5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10), 21) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10), 22) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 8, 4, 10), 11) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 8, 4, 10), 10) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_53,khm_Khmr,php,"<?php
//បន្ថែមចំនួនពីរ x និង y // >>> add(2, 3)
// 5
// >>> add(5, 7)
// 12
function add($x, $y) {
","return $x + $y;
}","function candidate(...$args) {
    return add(...$args);
}

function test(): void {
    if (candidate(0, 1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(1, 0) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(2, 3) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(5, 7) !== 12) { throw new Exception(""Test failed!""); }
    if (candidate(7, 5) !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_54,khm_Khmr,php,"<?php
//ពិនិត្យមើលថាតើពាក្យពីរមានអក្សរដូចគ្នាឬអត់។// >>> same_chars(""eabcdzzzz"", ""dddzzzzzzzddeddabc"")
// true
// >>> same_chars(""abcd"", ""dddddddabc"")
// true
// >>> same_chars(""dddddddabc"", ""abcd"")
// true
// >>> same_chars(""eabcd"", ""dddddddabc"")
// false
// >>> same_chars(""abcd"", ""dddddddabce"")
// false
// >>> same_chars(""eabcdzzzz"", ""dddzzzzzzzddddabc"")
// false
function same_chars($s0, $s1) {
","function same_chars($s0, $s1) {
    $countChars = function($str) {
        $charCount = [];
        for ($i = 0; $i < strlen($str); $i++) {
            $char = $str[$i];
            if (!isset($charCount[$char])) {
                $charCount[$char] = 0;
            }
            $charCount[$char]++;
        }
        return $charCount;
    };

    $countS0 = $countChars($s0);
    $countS1 = $countChars($s1);

    foreach ($countS0 as $char => $count) {
        if (!isset($countS1[$char])) {
            return false;
        }
    }

    foreach ($countS1 as $char => $count) {
        if (!isset($countS0[$char])) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return same_chars(...$args);
}

function test(): void {
    if (candidate(""eabcdzzzz"", ""dddzzzzzzzddeddabc"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"", ""dddddddabc"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""dddddddabc"", ""abcd"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""eabcd"", ""dddddddabc"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"", ""dddddddabcf"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""eabcdzzzz"", ""dddzzzzzzzddddabc"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""aabb"", ""aaccc"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_55,khm_Khmr,php,"<?php
//សូមត្រឡប់មកលេខ Fibonacci លេខ n-th វិញ។// >>> fib(10)
// 55
// >>> fib(1)
// 1
// >>> fib(8)
// 21
function fib($n) {
","function fib($n) {
    if ($n <= 0) {
        return 0;
    } elseif ($n === 1) {
        return 1;
    }
    
    $a = 0;
    $b = 1;
    
    for ($i = 2; $i <= $n; $i++) {
        $temp = $a + $b;
        $a = $b;
        $b = $temp;
    }
    
    return $b;
}","function candidate(...$args) {
    return fib(...$args);
}

function test(): void {
    if (candidate(10) !== 55) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 21) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== 89) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== 144) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_56,khm_Khmr,php,"<?php
//return true ប្រសិនបើក្របខ័ណ្ឌបើកមួយមានក្របខ័ណ្ឌបិទដែលស្របគ្នា។ //brackets គឺជាខ្សែនៃ ""<"" និង "">"" ។// >>> correct_bracketing(""<"")
// false
// >>> correct_bracketing(""<>"")
// true
// >>> correct_bracketing(""<<><>>"")
// true
// >>> correct_bracketing(""><<>"")
// false
function correct_bracketing($brackets) {
","function correct_bracketing($brackets) {
    $balance = 0;
    $length = strlen($brackets);

    for ($i = 0; $i < $length; $i++) {
        if ($brackets[$i] === '<') {
            $balance++;
        } else if ($brackets[$i] === '>') {
            $balance--;
        }

        // If at any point the balance is negative, there are more closing than opening brackets
        if ($balance < 0) {
            return false;
        }
    }

    // If balance is zero, all opening brackets have been closed properly
    return $balance === 0;
}","function candidate(...$args) {
    return correct_bracketing(...$args);
}

function test(): void {
    if (candidate(""<>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<<><>>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<><>><>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<<><><>><>><<><><<>>>"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""<<<><>>>>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""><<>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<<<<"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("">"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<<>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<><>><>><<>"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""<><><<><>><>>><>"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_57,khm_Khmr,php,"<?php
//Return true is អំបិលអារេមានភាពកើនឡើង ឬថយចុះដោយសាមញ្ញ។// >>> monotonic(array(1, 2, 4, 20))
// true
// >>> monotonic(array(1, 20, 4, 10))
// false
// >>> monotonic(array(4, 1, 0, -10))
// true
function monotonic($l) {
","function monotonic($l) {
    if (count($l) <= 1) {
        return true;
    }

    $isIncreasing = true;
    $isDecreasing = true;

    for ($i = 1; $i < count($l); $i++) {
        if ($l[$i] > $l[$i - 1]) {
            $isDecreasing = false;
        }
        if ($l[$i] < $l[$i - 1]) {
            $isIncreasing = false;
        }
        if (!$isIncreasing && !$isDecreasing) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return monotonic(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 4, 20)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 20, 4, 10)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 1, 0, -10)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 1, 1, 0)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 2, 5, 60)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_58,khm_Khmr,php,"<?php
//បញ្ជូនតួឯករួមតែមួយដែលត្រូវបានរៀបចំនូវតួឯកសម្រាប់ arrays ពីរ។// >>> common(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121))
// array(1, 5, 653)
// >>> common(array(5, 3, 2, 8), array(3, 2))
// array(2, 3)
function common($l1, $l2) {
","function common($l1, $l2) {
    $intersection = array_intersect($l1, $l2);
    $unique = array_unique($intersection);
    sort($unique);
    return $unique;
}","function candidate(...$args) {
    return common(...$args);
}

function test(): void {
    if (candidate(array(1, 4, 3, 34, 653, 2, 5), array(5, 7, 1, 5, 9, 653, 121)) !== array(1, 5, 653)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 3, 2, 8), array(3, 2)) !== array(2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 2, 8), array(3, 2, 4)) !== array(2, 3, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 2, 8), array()) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_59,khm_Khmr,php,"<?php
//សូមត្រឡប់ទៅកត្តាដំបូងដ៏ធំបំផុតនៃ n. សូមចាត់ទុកថា n > 1 ហើយមិនមែនជាចំនួនដំបូងទេ។ // >>> largest_prime_factor(13195)
// 29
// >>> largest_prime_factor(2048)
// 2
function largest_prime_factor($n) {
","function largest_prime_factor($n) {
    $largestPrime = -1;

    // Divide $n by 2 until it's odd
    while ($n % 2 === 0) {
        $largestPrime = 2;
        $n /= 2;
    }

    // Check for odd factors from 3 to sqrt(n)
    for ($i = 3; $i * $i <= $n; $i += 2) {
        while ($n % $i === 0) {
            $largestPrime = $i;
            $n /= $i;
        }
    }

    // If $n is a prime number greater than 2
    if ($n > 2) {
        $largestPrime = $n;
    }

    return $largestPrime;
}","function candidate(...$args) {
    return largest_prime_factor(...$args);
}

function test(): void {
    if (candidate(15) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(27) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(63) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(330) !== 11) { throw new Exception(""Test failed!""); }
    if (candidate(13195) !== 29) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_60,khm_Khmr,php,"<?php
//sum_to_n គឺជាមុខងារដែលសរុបចំនួនពី 1 ដល់ n ។ // >>> sum_to_n(30)
// 465
// >>> sum_to_n(100)
// 5050
// >>> sum_to_n(5)
// 15
// >>> sum_to_n(10)
// 55
// >>> sum_to_n(1)
// 1
function sum_to_n($n) {
","function sum_to_n($n) {
    return ($n * ($n + 1)) / 2;
}","function candidate(...$args) {
    return sum_to_n(...$args);
}

function test(): void {
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== 21) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== 66) { throw new Exception(""Test failed!""); }
    if (candidate(30) !== 465) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 5050) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_61,khm_Khmr,php,"<?php
//return true ប្រសិនបើក្របខ័ណ្ឌបើកមួយមានក្របខ័ណ្ឌបិទដែលស្របគ្នា។ //brackets គឺជាខ្សែនៃ ""("" និង """") ។// >>> correct_bracketing(""("")
// false
// >>> correct_bracketing(""()"")
// true
// >>> correct_bracketing(""(()())"")
// true
// >>> correct_bracketing("")(()"")
// false
function correct_bracketing($brackets) {
","function correct_bracketing($brackets) {
    $balance = 0;
    $n = strlen($brackets);
    
    for ($i = 0; $i < $n; $i++) {
        if ($brackets[$i] === '(') {
            $balance++;
        } elseif ($brackets[$i] === ')') {
            $balance--;
        }
        
        if ($balance < 0) {
            return false;
        }
    }
    
    return $balance === 0;
}","function candidate(...$args) {
    return correct_bracketing(...$args);
}

function test(): void {
    if (candidate(""()"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""(()())"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""()()(()())()"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""()()((()()())())(()()(()))"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""((()())))"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("")(()"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""("") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""(((("") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("")"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""(()"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""()()(()())())(()"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""()()(()())()))()"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_62,khm_Khmr,php,"<?php
//សូមត្រឡប់មកនូវដកចេញនៃពូជមាត្រនេះ ក្នុងទម្រង់ដូចគ្នា។//xs[0] + xs[1] * x + xs[2] * x^2 + .... //xs តំណាងឱ្យកម្រិតនៃពូជភាគ។// >>> derivative(array(3, 1, 2, 4, 5))
// array(1, 4, 12, 20)
// >>> derivative(array(1, 2, 3))
// array(2, 6)
function derivative($xs) {
","function derivative($xs) {
    $derivative = [];
    for ($i = 1; $i < count($xs); $i++) {
        $derivative[] = $xs[$i] * $i;
    }
    return $derivative;
}","function candidate(...$args) {
    return derivative(...$args);
}

function test(): void {
    if (candidate(array(3, 1, 2, 4, 5)) !== array(1, 4, 12, 20)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3)) !== array(2, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1)) !== array(2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1, 0, 4)) !== array(2, 2, 0, 16)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_63,khm_Khmr,php,"<?php
//សូមសរសេរ function ដើម្បីធ្វើការគណនាប្រកបដោយប្រសិទ្ធភាពនៃ element n-th នៃ sequence number fibfib ។//fibfib ((n) == fibfib ((n-1) + fibfib ((n-2) + fibfib ((n-3)) ។//fib fib ((2) == 1 //fib fib ((1)) == 0 //fib fib ((0) == 0 //លំដាប់លេខ FibFib គឺជាលំដាប់ដែលស្រដៀងនឹងលំដាប់ Fibbonacci ដែលត្រូវបានកំណត់ដូចខាងក្រោម: // >>> fibfib(1)
// 0
// >>> fibfib(5)
// 4
// >>> fibfib(8)
// 24
function fibfib($n) {
","function fibfib($n) {
    if ($n === 0) return 0;
    if ($n === 1) return 0;
    if ($n === 2) return 1;

    $fibfib_values = [0, 0, 1];

    for ($i = 3; $i <= $n; $i++) {
        $fibfib_values[$i] = $fibfib_values[$i - 1] + $fibfib_values[$i - 2] + $fibfib_values[$i - 3];
    }

    return $fibfib_values[$n];
}","function candidate(...$args) {
    return fibfib(...$args);
}

function test(): void {
    if (candidate(2) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== 24) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 81) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== 274) { throw new Exception(""Test failed!""); }
    if (candidate(14) !== 927) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_64,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //សម្លេងសូរ តែប៉ុណ្ណោះ នៅពេលដែលវាស្ថិតនៅចុងនៃពាក្យដែលបានផ្តល់។//Vowels នៅក្នុងករណីនេះគឺ 'a', 'e', 'i', 'o', 'u' ។នៅទីនេះ 'y' ក៏ជា a //ពាក្យជាចំណូល និងវិលត្រឡប់មកចំនួនសម្លេងនៅក្នុងខ្សែ។//សរសេរមុខងារ vowels_count ដែលប្រើខ្សែតំណាងអោយ // >>> vowels_count(""abcde"")
// 2
// >>> vowels_count(""ACEDY"")
// 3
function vowels_count($s) {
","function vowels_count($s) {
    $vowels = ['a', 'e', 'i', 'o', 'u'];
    $count = 0;
    $length = strlen($s);
    
    for ($i = 0; $i < $length; $i++) {
        $char = strtolower($s[$i]);
        if (in_array($char, $vowels)) {
            $count++;
        }
        if ($char === 'y' && $i === $length - 1) {
            $count++;
        }
    }
    
    return $count;
}","function candidate(...$args) {
    return vowels_count(...$args);
}

function test(): void {
    if (candidate(""abcde"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""Alone"") !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(""key"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""bye"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""keY"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""bYe"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""ACEDY"") !== 3) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_65,khm_Khmr,php,"<?php
//ប្រសិនបើ shift > ចំនួននៃលេខ, return លេខបកប្រែ។//និងបញ្ជូនលទ្ធផលមកជា string ។//ការផ្លាស់ប្តូររង្វង់នៃលេខនៃ integer x, ការផ្លាស់ប្តូរលេខខាងស្តាំដោយការផ្លាស់ប្តូរ // >>> circular_shift(12, 1)
// ""21""
// >>> circular_shift(12, 2)
// ""12""
function circular_shift($x, $shift) {
","function circular_shift($x, $shift) {
    $digits = strval($x);
    $num_digits = strlen($digits);

    if ($shift > $num_digits) {
        return strrev($digits);
    }

    $shift = $shift % $num_digits;
    if ($shift == 0) {
        return $digits;
    }

    $right_part = substr($digits, -$shift);
    $left_part = substr($digits, 0, $num_digits - $shift);

    return $right_part . $left_part;
}","function candidate(...$args) {
    return circular_shift(...$args);
}

function test(): void {
    if (candidate(100, 2) !== ""001"") { throw new Exception(""Test failed!""); }
    if (candidate(12, 2) !== ""12"") { throw new Exception(""Test failed!""); }
    if (candidate(97, 8) !== ""79"") { throw new Exception(""Test failed!""); }
    if (candidate(12, 1) !== ""21"") { throw new Exception(""Test failed!""); }
    if (candidate(11, 101) !== ""11"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_66,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កូដ ASCII ។//សរសេរមុខងារដែលយក string ជា Input ហើយត្រឡប់មកវិញនូវចំនួននៃតួអក្សរខាងលើតែប៉ុណ្ណោះ' //កិច្ចការ // >>> digitSum("""")
// 0
// >>> digitSum(""abAB"")
// 131
// >>> digitSum(""abcCd"")
// 67
// >>> digitSum(""helloE"")
// 69
// >>> digitSum(""woArBld"")
// 131
// >>> digitSum(""aAaaaXa"")
// 153
function digitSum($s) {
","function digitSum($s) {
    $sum = 0;
    for ($i = 0; $i < strlen($s); $i++) {
        if (ctype_upper($s[$i])) {
            $sum += ord($s[$i]);
        }
    }
    return $sum;
}","function candidate(...$args) {
    return digitSum(...$args);
}

function test(): void {
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""abAB"") !== 131) { throw new Exception(""Test failed!""); }
    if (candidate(""abcCd"") !== 67) { throw new Exception(""Test failed!""); }
    if (candidate(""helloE"") !== 69) { throw new Exception(""Test failed!""); }
    if (candidate(""woArBld"") !== 131) { throw new Exception(""Test failed!""); }
    if (candidate(""aAaaaXa"") !== 153) { throw new Exception(""Test failed!""); }
    if (candidate("" How are yOu?"") !== 151) { throw new Exception(""Test failed!""); }
    if (candidate(""You arE Very Smart"") !== 327) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_67,khm_Khmr,php,"<?php
//សម្រាប់ examble: //ក្នុង កញ្ចប់ បង្ហាញ ចំនួន ផ្លែ ម្នាស់ ក្នុង កញ្ចប់ ។//ផ្លែប៉ោម និង ផ្លែប៉ោម និងចំនួនសរុបដែលតំណាងឱ្យចំនួនសរុបនៃផ្លែឈើ //ផ្លែប៉ោម, ផ្លែក្រូច និង ផ្លែឈើ មៀន ។ ដោយបាន ផ្តល់ នូវ ខ្សែ ដែល តំណាង ឲ្យ ចំនួន សរុប នៃ //ដែលត្រូវបានចែកចាយនៅក្នុងកញ្ចប់ផ្លែឈើ កញ្ចប់នេះមាន//ក្នុងកិច្ចការនេះ អ្នកនឹងទទួលបានខ្សែមួយដែលតំណាងឱ្យចំនួនផ្លែប៉ោម និងផ្លែប៉ោម។// >>> fruit_distribution(""5 apples and 6 oranges"", 19)
// 8
// >>> fruit_distribution(""0 apples and 1 oranges"", 3)
// 2
// >>> fruit_distribution(""2 apples and 3 oranges"", 100)
// 95
// >>> fruit_distribution(""100 apples and 1 oranges"", 120)
// 19
function fruit_distribution($s, $n) {
","function fruit_distribution($s, $n) {
    // Extract numbers from the string using regular expression
    preg_match_all('!\d+!', $s, $matches);
    
    // Find out number of apples and oranges from the matches
    $apples = $matches[0][0];
    $oranges = $matches[0][1];
    
    // Calculate total mangoes
    $total_apples_and_oranges = $apples + $oranges;
    $mangoes = $n - $total_apples_and_oranges;
    
    return $mangoes;
}

// Example usage:
echo fruit_distribution(""5 apples and 6 oranges"", 19); // Output: 8","function candidate(...$args) {
    return fruit_distribution(...$args);
}

function test(): void {
    if (candidate(""5 apples and 6 oranges"", 19) !== 8) { throw new Exception(""Test failed!""); }
    if (candidate(""5 apples and 6 oranges"", 21) !== 10) { throw new Exception(""Test failed!""); }
    if (candidate(""0 apples and 1 oranges"", 3) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""1 apples and 0 oranges"", 3) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""2 apples and 3 oranges"", 100) !== 95) { throw new Exception(""Test failed!""); }
    if (candidate(""2 apples and 3 oranges"", 5) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""1 apples and 100 oranges"", 120) !== 19) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_68,khm_Khmr,php,"<?php
//ឧទាហរណ៍ទី១://ប្រសិនបើគ្មានតម្លៃគូ ឬ array ដែលបានផ្តល់នោះគឺគ្មានអ្វីទេ, ត្រឡប់មកវិញ []. //កុងតឺន័រដែលត្រូវបានដកចេញត្រូវត្រូវបានបញ្ជូនមកក្នុងអារេ, [smallest_value, its index], //ប្រសិនបើមាន node ច្រើនដែលមានតម្លៃ even តូចបំផុតដូចគ្នានោះ return node ដែលមាន index តូចបំផុត។ //កុងតឺន័រដែលត្រូវបានដកចេញគួរតែជាកុងតឺន័រដែលមានតម្លៃស្មើតូចបំផុត។//កិច្ចការរបស់អ្នកគឺដើម្បីដកកំណាត់មួយ និងបញ្ជូនវាទៅវិញ។//""ដោយបានផ្តល់នូវ array ដែលតំណាងឱ្យសាខានៃដើមឈើដែលមាន node integer ដែលមិនមែនជាអវិជ្ជមាន // >>> pluck(array(4, 2, 3))
// array(2, 1)
// Explanation: 2 has the smallest even value, and 2 has the smallest index.
// Example 2:
// >>> pluck(array(1, 2, 3))
// array(2, 1)
// Explanation: 2 has the smallest even value, and 2 has the smallest index.
// Example 3:
// >>> pluck(array())
// array()
// Example 4:
// >>> pluck(array(5, 0, 3, 0, 4, 2))
// array(0, 1)
// Explanation: 0 is the smallest value, but  there are two zeros,
// so we will choose the first zero, which has the smallest index.
// Constraints:
// * 1 <= nodes.length <= 10000
// * 0 <= node.value
function pluck($arr) {
","function pluck($arr) {
    $smallestEven = null;
    $smallestIndex = null;

    foreach ($arr as $index => $value) {
        if ($value % 2 == 0) {
            if ($smallestEven === null || $value < $smallestEven) {
                $smallestEven = $value;
                $smallestIndex = $index;
            }
        }
    }

    return $smallestEven === null ? [] : [$smallestEven, $smallestIndex];
}","function candidate(...$args) {
    return pluck(...$args);
}

function test(): void {
    if (candidate(array(4, 2, 3)) !== array(2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3)) !== array(2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 0, 3, 0, 4, 2)) !== array(0, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 0, 5, 3)) !== array(0, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 4, 8, 4, 8)) !== array(4, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 6, 7, 1)) !== array(6, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 9, 7, 1)) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_69,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ប្រសិនបើគ្មានតម្លៃបែបនេះទេ, ត្រឡប់មកវិញ -១ ។//លំដាប់នៃចំនួនគត់គឺចំនួនដងដែលវាបានបង្ហាញនៅក្នុង array ។//សូន្យ ហើយមានអត្រាខ្ពស់ជាង ឬស្មើនឹងតម្លៃនៃចំនួនសរុបផ្ទាល់ខ្លួន។//អ្នកបានទទួល array ដែលមិនមែនជាអង្រឹងនៃចំនួនពេញវិជ្ជមាន។ សូមត្រឡប់ទៅចំនួនពេញធំជាងគេដែលធំជាង // >>> search(array(4, 1, 2, 2, 3, 1))
// 2
// >>> search(array(1, 2, 2, 3, 3, 3, 4, 4, 4))
// 3
// >>> search(array(5, 5, 4, 4, 4))
// -1
function search($lst) {
","function search($lst) {
    // Create an associative array to store the frequencies of each integer
    $frequency = array_count_values($lst);

    // Initialize the result to -1 (to be returned if no valid integer is found)
    $result = -1;

    // Iterate over the frequency array
    foreach ($frequency as $number => $count) {
        // Check if the integer meets the criteria
        if ($number <= $count && $number > $result) {
            $result = $number;
        }
    }

    return $result;
}","function candidate(...$args) {
    return search(...$args);
}

function test(): void {
    if (candidate(array(5, 5, 5, 5, 1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 1, 4, 1, 4, 4)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 3)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 8, 8, 8, 8, 8, 8, 8)) !== 8) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 3, 3, 2, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 7, 8, 8, 4, 8, 7, 3, 9, 6, 5, 10, 4, 3, 6, 7, 1, 7, 4, 10, 8, 1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 8, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 7, 1, 8, 8, 10, 5, 8, 5, 3, 10)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 8, 3, 6, 5, 6, 4)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 9, 6, 7, 1, 4, 7, 1, 8, 8, 9, 8, 10, 10, 8, 4, 10, 4, 10, 1, 2, 9, 5, 7, 9)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 9, 10, 1, 3)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(6, 9, 7, 5, 8, 7, 5, 3, 7, 5, 10, 10, 3, 6, 10, 2, 8, 6, 5, 4, 9, 5, 3, 10)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(8, 8, 10, 6, 4, 3, 5, 8, 2, 4, 2, 8, 4, 6, 10, 4, 2, 1, 10, 2, 1, 1, 5)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 10, 4, 8, 2, 10, 5, 1, 2, 9, 5, 5, 6, 3, 8, 6, 4, 10)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 6, 10, 1, 6, 9, 10, 8, 6, 8, 7, 3)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 2, 4, 1, 5, 1, 5, 2, 5, 7, 7, 7, 3, 10, 1, 5, 4, 2, 8, 4, 1, 9, 10, 7, 10, 2, 8, 10, 9, 4)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 6, 4, 2, 8, 7, 5, 6, 4, 10, 4, 6, 3, 7, 8, 8, 3, 1, 4, 2, 2, 10, 7)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 8, 6, 10, 2, 6, 10, 2, 7, 8, 10, 3, 8, 2, 6, 2, 3, 1)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 5, 3, 9, 5, 6, 3, 2, 8, 5, 6, 10, 10, 6, 8, 4, 10, 7, 7, 10, 8)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(10)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 7, 7, 2, 4, 7, 2, 10, 9, 7, 5, 7, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 4, 10, 2, 1, 1, 10, 3, 6, 1, 8)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 9, 9, 9, 3, 4, 1, 5, 9, 1, 2, 1, 1, 10, 7, 5, 6, 7, 6, 7, 7, 6)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 10, 10, 9, 2)) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_70,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //បន្ទាប់មកចំនួនពេញដែលនៅសល់ច្រើនបំផុត បន្ទាប់មកចំនួនតូចបំផុត និងដដែលៗ។//ការជ្រើសរើសខុសគ្នា គឺនៅពេលដែលអ្នកចាប់ផ្តើមដោយតម្លៃអប្បបរមា, //ដោយបានផ្តល់នូវ array នៃចំនួនពេញ, return array ក្នុងលំដាប់មិនធម្មតា។// >>> strange_sort_list(array(1, 2, 3, 4))
// array(1, 4, 2, 3)
// >>> strange_sort_list(array(5, 5, 5, 5))
// array(5, 5, 5, 5)
// >>> strange_sort_list(array())
// array()
function strange_sort_list($lst) {
","function strange_sort_list($lst) {
    $result = array();
    sort($lst); // Sort the array in ascending order
    
    while (!empty($lst)) {
        // Take the first (minimum) element
        $result[] = array_shift($lst);
        
        // If there are still elements left, take the last (maximum) element
        if (!empty($lst)) {
            $result[] = array_pop($lst);
        }
    }
    
    return $result;
}","function candidate(...$args) {
    return strange_sort_list(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4)) !== array(1, 4, 2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 7, 8, 9)) !== array(5, 9, 6, 8, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5)) !== array(1, 5, 2, 4, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 6, 7, 8, 9, 1)) !== array(1, 9, 5, 8, 6, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 5, 5, 5)) !== array(5, 5, 5, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8)) !== array(1, 8, 2, 7, 3, 6, 4, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 2, 2, 2, 5, 5, -5, -5)) !== array(-5, 5, -5, 5, 0, 2, 2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(111111)) !== array(111111)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_71,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ជាងខាងទីបី។//ផ្នែកទាំងបីបង្កើតជាត្រីកោណត្រឹមត្រូវ នៅពេលដែលចំនួននៃផ្នែកទាំងពីរណាធំជាង។//បើមិនដូច្នេះត្រឡប់មកវិញ -1 //ត្រីចក្រ ដែលបានពង្រឹងទៅ 2 ដឺស៊ីម៉ាល់ពិន្ទុ ប្រសិនបើភាគីទាំងបីបង្កើតជាត្រីចក្រត្រឹមត្រូវ។//ដោយបានផ្តល់នូវប្រវែងនៃភាគីទាំងបីនៃត្រីកោណ។ សូមត្រឡប់ទៅតំបន់នៃ // >>> triangle_area(3, 4, 5)
// 6.0
// >>> triangle_area(1, 2, 10)
// -1
function triangle_area($a, $b, $c) {
","function triangle_area($a, $b, $c) {
    // Check if the sides form a valid triangle
    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {
        // Calculate semi-perimeter
        $s = ($a + $b + $c) / 2;
        // Calculate the area using Heron's formula
        $area = sqrt($s * ($s - $a) * ($s - $b) * ($s - $c));
        // Return the area rounded to 2 decimal places
        return round($area, 2);
    } else {
        return -1; // Not a valid triangle
    }
}","function candidate(...$args) {
    return triangle_area(...$args);
}

function test(): void {
    if (candidate(3, 4, 5) !== 6.0) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 10) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(4, 8, 5) !== 8.18) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 2) !== 1.73) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 3) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(10, 5, 7) !== 16.25) { throw new Exception(""Test failed!""); }
    if (candidate(2, 6, 3) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(1, 1, 1) !== 0.43) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 10) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_72,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //វត្ថុ q នឹងហោះ បើវាមានតុល្យភាព (វាជា array palindromic) និងចំនួននៃអំបិលរបស់វាតិចជាងឬស្មើនឹងទម្ងន់ដែលអាចធ្វើបាន w ។//សរសេរ function ដែល return true ប្រសិនបើវត្ថុ q នឹង fly ហើយ false បើមិនដូច្នេះទេ// >>> will_it_fly(array(1, 2), 5)
// false
// # 1+2 is less than the maximum possible weight, but it's unbalanced.
// >>> will_it_fly(array(3, 2, 3), 1)
// false
// # it's balanced, but 3+2+3 is more than the maximum possible weight.
// >>> will_it_fly(array(3, 2, 3), 9)
// true
// # 3+2+3 is less than the maximum possible weight, and it's balanced.
// >>> will_it_fly(array(3), 5)
// true
// # 3 is less than the maximum possible weight, and it's balanced.
function will_it_fly($q, $w) {
","function will_it_fly($q, $w) {
    // Check if the array is palindromic
    if ($q !== array_reverse($q)) {
        return false;
    }
    
    // Calculate the sum of elements in the array
    $sum = array_sum($q);
    
    // Check if the sum is less than or equal to the maximum possible weight
    return $sum <= $w;
}","function candidate(...$args) {
    return will_it_fly(...$args);
}

function test(): void {
    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2), 5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(3), 5) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 3), 1) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3), 6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(5), 5) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_73,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //អាចអានដូចគ្នាទៅវិញទៅមក។ ក្នុងការផ្លាស់ប្តូរមួយអ្នកអាចផ្លាស់ប្តូរអក្សរមួយទៅអក្សរផ្សេងទៀត។//ត្រូវតែត្រូវបានផ្លាស់ប្តូរដើម្បីធ្វើឱ្យ array ជា palindromic array គឺជា array ដែល //ដោយបានផ្តល់នូវ array arr នៃចំនួនពេញ រកចំនួនអក្សរតិចបំផុតដែល // >>> smallest_change(array(1, 2, 3, 5, 4, 7, 9, 6))
// 4
// >>> smallest_change(array(1, 2, 3, 4, 3, 2, 2))
// 1
// >>> smallest_change(array(1, 2, 3, 2, 1))
// 0
function smallest_change($arr) {
","function smallest_change($arr) {
    $n = count($arr);
    $changes = 0;

    for ($i = 0; $i < $n / 2; $i++) {
        if ($arr[$i] !== $arr[$n - $i - 1]) {
            $changes++;
        }
    }

    return $changes;
}","function candidate(...$args) {
    return smallest_change(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 5, 4, 7, 9, 6)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 3, 2, 2)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 2)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 4, 2)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 2, 1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 1, 1, 3)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 1)) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_74,khm_Khmr,php,"<?php
//ឧទាហរណ៍//ប្រសិនបើ arrays ទាំងពីរមានចំនួន chars ដូចគ្នា, សូមត្រឡប់ array ដំបូងវិញ។//ចំនួនសរុបនៃកា រ៉េ ក្នុងសរសៃទាំងអស់នៃ array តិចជាង array ផ្សេងទៀត។//សរសេរមុខងារដែលទទួលយក arrays នៃ string ពីរ និងវិលត្រឡប់ array ដែលមាន // >>> total_match(array(), array())
// array()
// >>> total_match(array(""hi"", ""admin""), array(""hI"", ""Hi""))
// array(""hI"", ""Hi"")
// >>> total_match(array(""hi"", ""admin""), array(""hi"", ""hi"", ""admin"", ""project""))
// array(""hi"", ""admin"")
// >>> total_match(array(""hi"", ""admin""), array(""hI"", ""hi"", ""hi""))
// array(""hI"", ""hi"", ""hi"")
// >>> total_match(array(""4""), array(""1"", ""2"", ""3"", ""4"", ""5""))
// array(""4"")
function total_match($lst1, $lst2) {
","function total_match($lst1, $lst2) {
    $countChars = function($arr) {
        $totalChars = 0;
        foreach ($arr as $str) {
            $totalChars += strlen($str);
        }
        return $totalChars;
    };

    $chars1 = $countChars($lst1);
    $chars2 = $countChars($lst2);

    if ($chars1 < $chars2) {
        return $lst1;
    } else {
        return $lst2;
    }
}","function candidate(...$args) {
    return total_match(...$args);
}

function test(): void {
    if (candidate(array(), array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hi"", ""hi"")) !== array(""hi"", ""hi"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hi"", ""hi"", ""admin"", ""project"")) !== array(""hi"", ""admin"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""4""), array(""1"", ""2"", ""3"", ""4"", ""5"")) !== array(""4"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hI"", ""Hi"")) !== array(""hI"", ""Hi"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hI"", ""hi"", ""hi"")) !== array(""hI"", ""hi"", ""hi"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""hi"", ""admin""), array(""hI"", ""hi"", ""hii"")) !== array(""hi"", ""admin"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(), array(""this"")) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""this""), array()) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_75,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដោយដឹងថា (a) តិចជាង 100 ។//និងខុសពីគ្នា។//សរសេរ function ដែល return true ប្រសិនបើចំនួនដែលបានផ្តល់គឺការបូកនៃចំនួនដើម 3 ។// >>> is_multiply_prime(30)
// true
// 30 = 2 * 3 * 5
function is_multiply_prime($a) {
","function is_prime($num) {
    if ($num <= 1) return false;
    if ($num <= 3) return true;
    if ($num % 2 == 0 || $num % 3 == 0) return false;
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) return false;
    }
    return true;
}

function is_multiply_prime($a) {
    if ($a < 2) return false;
    $primes = [];
    for ($i = 2; $i < 100; $i++) {
        if (is_prime($i)) {
            $primes[] = $i;
        }
    }
    $count = count($primes);
    for ($i = 0; $i < $count; $i++) {
        for ($j = $i; $j < $count; $j++) {
            for ($k = $j; $k < $count; $k++) {
                if ($primes[$i] * $primes[$j] * $primes[$k] == $a) {
                    return true;
                }
            }
        }
    }
    return false;
}","function candidate(...$args) {
    return is_multiply_prime(...$args);
}

function test(): void {
    if (candidate(5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(30) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(125) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(105) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(126) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(729) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(891) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1001) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_76,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //x គឺជាជួរសាមញ្ញនៃ n ប្រសិនបើ n**int=x //នៃ n និង false នៅក្នុងករណីផ្សេងទៀត។//កិច្ចការរបស់អ្នកគឺសរសេរ function ដែលត្រឡប់ true ប្រសិនបើចំនួន x គឺជាលេខសាមញ្ញមួយ// >>> is_simple_power(1, 4)
// true
// >>> is_simple_power(2, 2)
// true
// >>> is_simple_power(8, 2)
// true
// >>> is_simple_power(3, 2)
// false
// >>> is_simple_power(3, 1)
// false
// >>> is_simple_power(5, 3)
// false
function is_simple_power($x, $n) {
","function is_simple_power($x, $n) {
    if ($x < 1 || $n < 1) {
        return false;
    }

    $power = 1;
    while ($power < $x) {
        $power *= $n;
    }

    return $power === $x;
}","function candidate(...$args) {
    return is_simple_power(...$args);
}

function test(): void {
    if (candidate(16, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(143214, 16) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(4, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(9, 3) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(16, 4) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(24, 2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(128, 4) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(12, 6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1, 1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1, 12) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_77,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: អ្នកអាចគិតថា input គឺមានប្រសិទ្ធភាពជានិច្ច។//បើសិនជា ingeger នេះជាគុម្ពនៃចំនួនគត់ណាមួយ។//សរសេរអក្សរ function ដែលយកចំនួនសរុប a ហើយវិលត្រឡប់ true វិញ// >>> iscube(1)
// true
// >>> iscube(2)
// false
// >>> iscube(-1)
// true
// >>> iscube(64)
// true
// >>> iscube(0)
// true
// >>> iscube(180)
// false
function iscube($a) {
","function iscube($a) {
    $cubeRoot = round(pow(abs($a), 1/3));
    return $cubeRoot * $cubeRoot * $cubeRoot === abs($a);
}","function candidate(...$args) {
    return iscube(...$args);
}

function test(): void {
    if (candidate(1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(-1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(64) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(180) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1000) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1729) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_78,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //និងសញ្ញាប័ត្រ A,B,C,D,E,F តែងតែមានអក្សរធំ។//កត់សម្គាល់: អ្នកអាចគិតថា input គឺត្រឹមត្រូវឬគ្មាន string, //B (= ដប់ដប់ 11), D (= ដប់ដប់ 13) ។//ដូច្នេះអ្នកត្រូវកំណត់ចំនួននៃលេខដូចខាងក្រោមនេះ: 2, 3, 5, 7, //ចំនួនសាមញ្ញគឺ 2, 3, 5, 7, 11, 13, 17...។//តួអក្សរ hexadecimal គឺ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F ។//ធំជាង 1 ដែលមិនមែនជាផលនៃចំនួនធម្មជាតិតូចជាង 2 នោះ) ។//តួដែលជាចំនួនសាមញ្ញ (ចំនួនសាមញ្ញ ឬ prime គឺជាចំនួនធម្មជាតិ)//ចំនួនដប់ដប់ជា string និងរាប់ចំនួនដប់ដប់ //អ្នកត្រូវបានបញ្ជាឱ្យសរសេរ function ដែលទទួល // >>> hex_key(""AB"")
// 1
// >>> hex_key(""1077E"")
// 2
// >>> hex_key(""ABED1A33"")
// 4
// >>> hex_key(""123456789ABCDEF0"")
// 6
// >>> hex_key(""2020"")
// 2
function hex_key($num) {
","function hex_key($num) {
    // Map of hexadecimal digits to their respective prime number interpretation
    $primeDigits = ['2', '3', '5', '7', 'B', 'D'];
    
    // Initialize count for prime numbers
    $primeCount = 0;

    // Iterate through each character in the hexadecimal string
    for ($i = 0; $i < strlen($num); $i++) {
        // Get the current character
        $char = $num[$i];

        // Check if the character is a prime hexadecimal digit
        if (in_array($char, $primeDigits)) {
            $primeCount++;
        }
    }

    // Return the count of prime hexadecimal digits
    return $primeCount;
}","function candidate(...$args) {
    return hex_key(...$args);
}

function test(): void {
    if (candidate(""AB"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""1077E"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""ABED1A33"") !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(""2020"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""123456789ABCDEF0"") !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(""112233445566778899AABBCCDDEEFF00"") !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_79,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //តួអក្សរបន្ថែមមាននៅទីនោះដើម្បីជួយជាមួយទម្រង់។//នឹងមានតួអក្សរ ""db"" មួយចំនួនបន្ថែមនៅដើមនិងចុងនៃស្លាក។//តួអក្សរនីមួយៗ នៅក្នុងសេរីវាយនឹងមានចំនួន ""0"" ឬ ""1"" ។//រូបមន្តបៃតង Function គួរតែបញ្ជូនត្រីសងមួយ ដោយតួអក្សរនីមួយៗ តំណាងឱ្យបៃតង //អ្នកនឹងទទួលបានលេខនៅក្នុងទម្រង់ដប់ ហើយការងាររបស់អ្នកគឺបម្លែងវាទៅជា // >>> decimal_to_binary(15)
// ""db1111db""
// >>> decimal_to_binary(32)
// ""db100000db""
function decimal_to_binary($decimal) {
","function decimal_to_binary($decimal) {
    // Convert the decimal number to binary string
    $binary = decbin($decimal);
    
    // Add 'db' at the start and end of the binary string
    return 'db' . $binary . 'db';
}","function candidate(...$args) {
    return decimal_to_binary(...$args);
}

function test(): void {
    if (candidate(0) !== ""db0db"") { throw new Exception(""Test failed!""); }
    if (candidate(32) !== ""db100000db"") { throw new Exception(""Test failed!""); }
    if (candidate(103) !== ""db1100111db"") { throw new Exception(""Test failed!""); }
    if (candidate(15) !== ""db1111db"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_80,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //String គឺជា happhp ប្រសិនបើវាត្រូវបានមានរយៈពេលយ៉ាងហោចណាស់ 3 ហើយអក្សរ 3 ជាប់គ្នាទាំងអស់គឺខុសគ្នា //កិច្ចការរបស់អ្នកគឺដើម្បីពិនិត្យមើលថាតើ string គឺជា happhp ឬមិន។//អ្នកត្រូវបានផ្តល់ string s ។// >>> is_happy(""a"")
// false
// >>> is_happy(""aa"")
// false
// >>> is_happy(""abcd"")
// true
// >>> is_happy(""aabb"")
// false
// >>> is_happy(""adb"")
// true
// >>> is_happy(""xyy"")
// false
function is_happy($s) {
","function is_happy($s) {
    $length = strlen($s);
    if ($length < 3) {
        return false;
    }

    for ($i = 0; $i <= $length - 3; $i++) {
        if ($s[$i] == $s[$i + 1] || $s[$i] == $s[$i + 2] || $s[$i + 1] == $s[$i + 2]) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return is_happy(...$args);
}

function test(): void {
    if (candidate(""a"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""aa"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""aabb"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""adb"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""xyy"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""iopaxpoi"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""iopaxioi"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_81,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //0.0 E //> 0.0 D- //> 0.7 D //> 1.0 D+ //> 1.3 C- //> 1.7 C //> 2.0 C+ //> 2.3 B- //> 2.7 B //> ៣.០ B+ //> 3.3 A- //> 3.7 A //4.0 A+ //GPA  សញ្ញាបត្រ //មុខងារដែលអាចបញ្ចេញ array នៃកម្រិតអក្សរដោយប្រើតារាងដូចខាងក្រោម: //នាងបានផ្តល់ឱ្យអ្នកនូវ GPA ជាច្រើនសម្រាប់សិស្សមួយចំនួន ហើយអ្នកត្រូវតែសរសេរ។//បញ្ហាតែមួយគត់គឺ នាងបានបាត់បង់កូដដែលនាងបានប្រើសម្រាប់ការវាយតម្លៃ។//គ្រូ បង្រៀន បាន បង្កើត អាល់ហ្ស៊ីម របស់ ខ្លួន សម្រាប់ ការ វាយ តម្លៃ។//វាជាសប្តាហ៍ចុងក្រោយនៃវស្សា ហើយគ្រូត្រូវផ្តល់ចំណាត់ថ្នាក់// >>> grade_equation(array(4.0, 3, 1.7, 2, 3.5))
// array(""A+"", ""B"", ""C-"", ""C"", ""A-"")
function numerical_letter_grade($grades) {
","function numerical_letter_grade($grades) {
    $letterGrades = array();

    foreach ($grades as $gpa) {
        if ($gpa >= 4.0) {
            $letterGrades[] = ""A+"";
        } elseif ($gpa > 3.7) {
            $letterGrades[] = ""A"";
        } elseif ($gpa > 3.3) {
            $letterGrades[] = ""A-"";
        } elseif ($gpa > 3.0) {
            $letterGrades[] = ""B+"";
        } elseif ($gpa > 2.7) {
            $letterGrades[] = ""B"";
        } elseif ($gpa > 2.3) {
            $letterGrades[] = ""B-"";
        } elseif ($gpa > 2.0) {
            $letterGrades[] = ""C+"";
        } elseif ($gpa > 1.7) {
            $letterGrades[] = ""C"";
        } elseif ($gpa > 1.3) {
            $letterGrades[] = ""C-"";
        } elseif ($gpa > 1.0) {
            $letterGrades[] = ""D+"";
        } elseif ($gpa > 0.7) {
            $letterGrades[] = ""D"";
        } elseif ($gpa > 0.0) {
            $letterGrades[] = ""D-"";
        } else {
            $letterGrades[] = ""E"";
        }
    }

    return $letterGrades;
}","function candidate(...$args) {
    return numerical_letter_grade(...$args);
}

function test(): void {
    if (candidate(array(4.0, 3, 1.7, 2, 3.5)) !== array(""A+"", ""B"", ""C-"", ""C"", ""A-"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.2)) !== array(""D+"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.5)) !== array(""D-"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.0)) !== array(""E"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 0.3, 1.5, 2.8, 3.3)) !== array(""D"", ""D-"", ""C-"", ""B"", ""B+"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.0, 0.7)) !== array(""E"", ""D-"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_82,khm_Khmr,php,"<?php
//ឧទាហរណ៍//length គឺជាចំនួនដើម ឬខុស បើមិនដូច្នេះទេ//សរសេរអក្សរ function ដែលយក string ហើយត្រឡប់ true វិញ ប្រសិនបើ string នោះ // >>> prime_length(""Hello"")
// true
// >>> prime_length(""abcdcba"")
// true
// >>> prime_length(""kittens"")
// true
// >>> prime_length(""orange"")
// false
function prime_length($string) {
","function prime_length($string) {
    $length = strlen($string);

    if ($length < 2) {
        return false;
    }

    for ($i = 2; $i <= sqrt($length); $i++) {
        if ($length % $i === 0) {
            return false;
        }
    }

    return true;
}","function candidate(...$args) {
    return prime_length(...$args);
}

function test(): void {
    if (candidate(""Hello"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdcba"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""kittens"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""orange"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""wow"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""world"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""MadaM"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""Wow"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""HI"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""go"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""gogo"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaaaaaaaaaaaaa"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""Madam"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""M"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""0"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_83,khm_Khmr,php,"<?php
//តួគ៌សរុបវិជ្ជមានដែលចាប់ផ្តើមឬបញ្ចប់ដោយ 1 ។//ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន n, សូមត្រឡប់មកវិញចំនួននៃចំនួននៃ n-លេខ function starts_one_ends($n) {
","function starts_one_ends($n) {
    if ($n <= 0) return 0;
    if ($n == 1) return 1;

    $total_count = 9 * pow(10, $n - 1); // Total count of n-digit numbers
    $non_one_start_count = 8 * pow(10, $n - 2); // n-digit numbers where the second digit is not zero
    
    // All numbers that start with 1:
    $start_with_one_count = pow(10, $n - 1);

    // All numbers that end with 1:
    $end_with_one_count = pow(10, $n - 1);

    // Numbers that both start and end with 1 are counted twice in the above summation
    // so we subtract those:
    $start_and_end_with_one_count = 1 * pow(10, $n - 2);
    
    $result = $start_with_one_count + $end_with_one_count - $start_and_end_with_one_count;    
    return $result;
}","function candidate(...$args) {
    return starts_one_ends(...$args);
}

function test(): void {
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(2) !== 18) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== 180) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== 1800) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 18000) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_84,khm_Khmr,php,"<?php
//ឧទាហរណ៍//ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន N, សូមត្រឡប់មកវិញចំនួនសរុបនៃតួខ្លួនរបស់វាជាគូ។ // >>> solve(1000)
// ""1""
// >>> solve(150)
// ""110""
// >>> solve(147)
// ""1100""
// Variables:
// @N integer
// Constraints: 0 ≤ N ≤ 10000.
// Output:
// a string of binary number
function solve($N) {
","function solve($N) {
    $sum = array_sum(str_split($N));
    return decbin($sum);
}","function candidate(...$args) {
    return solve(...$args);
}

function test(): void {
    if (candidate(1000) !== ""1"") { throw new Exception(""Test failed!""); }
    if (candidate(150) !== ""110"") { throw new Exception(""Test failed!""); }
    if (candidate(147) !== ""1100"") { throw new Exception(""Test failed!""); }
    if (candidate(333) !== ""1001"") { throw new Exception(""Test failed!""); }
    if (candidate(963) !== ""10010"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_85,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដោយបានផ្តល់នូវ array ដែលមិនមែនជាលេខពេញលេញ លេខ lst. បន្ថែមនូវតួគណដែលនៅក្នុងអង់ដេសមិនសូវជាធម្មតា .. // >>> add(array(4, 2, 6, 7))
// 2
function add($lst) {
","function add($lst) {
    $sum = 0;
    for ($i = 1; $i < count($lst); $i += 2) {
        if ($lst[$i] % 2 == 0) {
            $sum += $lst[$i];
        }
    }
    return $sum;
}","function candidate(...$args) {
    return add(...$args);
}

function test(): void {
    if (candidate(array(4, 88)) !== 88) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 5, 6, 7, 2, 122)) !== 122) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 0, 6, 7)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 4, 6, 8)) !== 12) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_86,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: អ្នកគួរតែរក្សានូវលំដាប់នៃពាក្យ និងកន្លែងបិទនៅក្នុងសំនួរ។//តាមលំដាប់ឡើងទៅលើតម្លៃ ASCII ។//ត្រូវបានជំនួសដោយពាក្យថ្មីមួយ ដែលមានសញ្ញាទាំងអស់រៀបចំឡើងនៅក្នុង //វីដេអូដែលត្រូវបានបញ្ជាដោយសរសៃ, គឺជាសរសៃដែលពាក្យទាំងអស់ (បែងចែកដោយអគារ) //សរសេរ function មួយ ដែល យក string មក និង បញ្ជូន វីដេអូ ដែល មាន លក្ខណៈ ជា ordered ។// >>> anti_shuffle(""Hi"")
// ""Hi""
// >>> anti_shuffle(""hello"")
// ""ehllo""
// >>> anti_shuffle(""Hello World!!!"")
// ""Hello !!!Wdlor""
function anti_shuffle($s) {
","function anti_shuffle($s) {
    // Split the string by space to preserve words and spaces
    $words = preg_split('/(\s+)/', $s, -1, PREG_SPLIT_DELIM_CAPTURE);

    // Array to hold ordered words
    $ordered_words = [];

    // Iterate through each word or space in the array
    foreach ($words as $word) {
        // If it's a word (not only spaces)
        if (trim($word) !== '') {
            // Convert the word into an array of characters, sort it, and rejoin
            $chars = str_split($word);
            sort($chars);
            $ordered_words[] = implode('', $chars);
        } else {
            // If it's a space or multiple spaces, preserve them as they are
            $ordered_words[] = $word;
        }
    }

    // Join the array back into a string and return
    return implode('', $ordered_words);
}","function candidate(...$args) {
    return anti_shuffle(...$args);
}

function test(): void {
    if (candidate(""Hi"") !== ""Hi"") { throw new Exception(""Test failed!""); }
    if (candidate(""hello"") !== ""ehllo"") { throw new Exception(""Test failed!""); }
    if (candidate(""number"") !== ""bemnru"") { throw new Exception(""Test failed!""); }
    if (candidate(""abcd"") !== ""abcd"") { throw new Exception(""Test failed!""); }
    if (candidate(""Hello World!!!"") !== ""Hello !!!Wdlor"") { throw new Exception(""Test failed!""); }
    if (candidate("""") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""Hi. My name is Mister Robot. How are you?"") !== "".Hi My aemn is Meirst .Rboot How aer ?ouy"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_87,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដូចគ្នាដែរ, ត្រូវរៀបចំតួអង្គនៃជួរតាមតួអង្គតាមលំដាប់ធ្លាក់ចុះ។//ប្រភេទតួអង្គដំបូងតាមជួរតាមលំដាប់ឡើង//array នីមួយៗ គឺជាតួអង្គ - (ជួរ, ជួរ) ចាប់ផ្តើមដោយ 0 ។//និងត្រឡប់មកវិញ array នៃ arrays, [(x1, y1), (x2, y2) ...] ដូចជាថា //ដោយបានផ្តល់ lst, និង integer x, រក integer x នៅក្នុង array, //កំណត់ត្រាដែលអាចត្រូវបានបែងចែកជាពីរ។//ដែលមានលក្ខណៈដូចទៅនឹង matrix ប៉ុន្តែមិនដូចទៅនឹង matrix ទេ ។//អ្នកបានទទួលទិន្នន័យ 2 ដីម៉ិនស្យុង ក្នុងទម្រង់ជា arrays ដែលមានកន្ទុយគ្នា// >>> get_row(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1)
// array(array(0, 0), array(1, 4), array(1, 0), array(2, 5), array(2, 0))
// >>> get_row(array(), 1)
// array()
// >>> get_row(array(array(), array(1), array(1, 2, 3)), 3)
// array(array(2, 2))
function get_row($lst, $x) {
","function get_row($lst, $x) {
    $coordinates = array();
    // Iterate over each row with its index.
    foreach ($lst as $row_idx => $row) {
        $row_coordinates = array();
        // Iterate over each element in the row with its index.
        foreach ($row as $col_idx => $value) {
            if ($value === $x) {
                // Add the coordinate as a pair (row index, column index).
                $row_coordinates[] = array($row_idx, $col_idx);
            }
        }
        // Sort the coordinates of this row by columns in descending order.
        usort($row_coordinates, function($a, $b) {
            return $b[1] - $a[1];
        });
        // Merge sorted row coordinates into the main coordinates list.
        $coordinates = array_merge($coordinates, $row_coordinates);
    }
    // Return the sorted coordinates.
    return $coordinates;
}","function candidate(...$args) {
    return get_row(...$args);
}

function test(): void {
    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 4), array(1, 0), array(2, 5), array(2, 0))) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6)), 2) !== array(array(0, 1), array(1, 1), array(2, 1), array(3, 1), array(4, 1), array(5, 1))) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2, 3, 4, 5, 6), array(1, 2, 3, 4, 5, 6), array(1, 1, 3, 4, 5, 6), array(1, 2, 1, 4, 5, 6), array(1, 2, 3, 1, 5, 6), array(1, 2, 3, 4, 1, 6), array(1, 2, 3, 4, 5, 1)), 1) !== array(array(0, 0), array(1, 0), array(2, 1), array(2, 0), array(3, 2), array(3, 0), array(4, 3), array(4, 0), array(5, 4), array(5, 0), array(6, 5), array(6, 0))) { throw new Exception(""Test failed!""); }
    if (candidate(array(), 1) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1)), 2) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(), array(1), array(1, 2, 3)), 3) !== array(array(2, 2))) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_88,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //* កុំផ្លាស់ប្តូរ array ដែលបានផ្តល់។ //កត់សម្គាល់: //ឬជម្រើសវាតាមលំដាប់ធ្លាក់ចុះ ប្រសិនបើចំនួន ((តម្លៃបញ្ជីដំបូង, តម្លៃបញ្ជីចុងក្រោយ) គឺស្មើគ្នា។ //អ្នកនឹងរៀបចំ array ដែលបានផ្តល់ឱ្យក្នុងលំដាប់ឡើងទៅ ប្រសិនបើចំនួន ((តម្លៃបញ្ជីដំបូង, តម្លៃបញ្ជីចុងក្រោយ) គឺមិនស្មើគ្នា, //ដោយបានផ្តល់នូវ array នៃចំនួនពេញមិនជាអវិជ្ជមាន, ត្រឡប់មកវិញ cophp នៃ array ដែលបានផ្តល់បន្ទាប់ពីការរៀបចំ, // >>> sort_array(array())
// array()
// >>> sort_array(array(5))
// array(5)
// >>> sort_array(array(2, 4, 3, 0, 1, 5))
// array(0, 1, 2, 3, 4, 5)
// >>> sort_array(array(2, 4, 3, 0, 1, 5, 6))
// array(6, 5, 4, 3, 2, 1, 0)
function sort_array($array) {
","function sort_array($array) {
    if (empty($array)) {
        return $array;
    }

    $firstIndexValue = $array[0];
    $lastIndexValue = $array[count($array) - 1];
    $sum = $firstIndexValue + $lastIndexValue;

    $sortedArray = $array;
    if ($sum % 2 === 0) {
        // Sort in descending order
        rsort($sortedArray);
    } else {
        // Sort in ascending order
        sort($sortedArray);
    }

    return $sortedArray;
}","function candidate(...$args) {
    return sort_array(...$args);
}

function test(): void {
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(5)) !== array(5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 3, 0, 1, 5)) !== array(0, 1, 2, 3, 4, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 3, 0, 1, 5, 6)) !== array(6, 5, 4, 3, 2, 1, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 1)) !== array(1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(15, 42, 87, 32, 11, 0)) !== array(0, 11, 15, 32, 42, 87)) { throw new Exception(""Test failed!""); }
    if (candidate(array(21, 14, 23, 11)) !== array(23, 21, 14, 11)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_89,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ប្តូរទៅក្រោម ២ ដងចំនែកទៅលើ ២ កន្លែង។//អក្សរអក្សរត្រូវតែត្រូវបានបម្លែងតាមរបៀបដែលអក្សរ //ត្រឡប់មកវិញនូវ string ដែលត្រូវបានបិទដោយការផ្លាស់ប្តូរអក្សរអក្សរ។//បង្កើតតួប្រអប់ដែលយកសរសៃវែងជាអាភារៈ និង // >>> encrypt(""hi"")
// ""lm""
// >>> encrypt(""asdfghjkl"")
// ""ewhjklnop""
// >>> encrypt(""gf"")
// ""kj""
// >>> encrypt(""et"")
// ""ix""
function encrypt($s) {
","function encrypt($s) {
    $result = '';
    $shift = 4; // 2 multiplied by 2
    
    for ($i = 0; $i < strlen($s); $i++) {
        $char = $s[$i];
        
        if (ctype_alpha($char)) {
            $ordStart = ctype_lower($char) ? ord('a') : ord('A');
            $char = chr($ordStart + (ord($char) - $ordStart + $shift) % 26);
        }
        
        $result .= $char;
    }
    
    return $result;
}","function candidate(...$args) {
    return encrypt(...$args);
}

function test(): void {
    if (candidate(""hi"") !== ""lm"") { throw new Exception(""Test failed!""); }
    if (candidate(""asdfghjkl"") !== ""ewhjklnop"") { throw new Exception(""Test failed!""); }
    if (candidate(""gf"") !== ""kj"") { throw new Exception(""Test failed!""); }
    if (candidate(""et"") !== ""ix"") { throw new Exception(""Test failed!""); }
    if (candidate(""faewfawefaewg"") !== ""jeiajeaijeiak"") { throw new Exception(""Test failed!""); }
    if (candidate(""hellomyfriend"") !== ""lippsqcjvmirh"") { throw new Exception(""Test failed!""); }
    if (candidate(""dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh"") !== ""hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl"") { throw new Exception(""Test failed!""); }
    if (candidate(""a"") !== ""e"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_90,khm_Khmr,php,"<?php
//ត្រឡប់មកវិញ null ប្រសិនបើគ្មានអក្សរដូច្នោះ។//សរសេរមុខងារ next_smallest ({}) ដែលវិលត្រឡប់មកវិញនូវអំបិលតូចជាងគេទី 2 នៃ array ។ //អ្នកបានទទួល array នៃចំនួនពេញ។// >>> next_smallest(array(1, 2, 3, 4, 5))
// 2
// >>> next_smallest(array(5, 1, 4, 3, 2))
// 2
// >>> next_smallest(array())
// null
// >>> next_smallest(array(1, 1))
// null
function next_smallest($lst) {
","function next_smallest($lst) {
    // Remove duplicate elements
    $unique_lst = array_unique($lst);

    // Sort the array
    sort($unique_lst);

    // Check if there are at least two elements in the sorted array
    if (count($unique_lst) < 2) {
        return null;
    }

    // Return the second smallest element
    return $unique_lst[1];
}","function candidate(...$args) {
    return next_smallest(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4, 5)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 1, 4, 3, 2)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1)) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1, 1, 0)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1)) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(-35, 34, 12, -45)) !== -35) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_91,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ឃ្លាត្រូវបានបែងចែកដោយ '.', '?' ឬ '!'.//នៃការធុញទ្រាន់ ភាពធុញទ្រាន់គឺជាពាក្យមួយដែលចាប់ផ្តើមដោយពាក្យ ""I"" ។//អ្នកនឹងទទួលបានពាក្យជាច្រើន ហើយការងាររបស់អ្នកគឺរាប់ចំនួននោះ// >>> is_bored(""Hello world"")
// 0
// >>> is_bored(""The sky is blue. The sun is shining. I love this weather"")
// 1
function is_bored($S) {
","function is_bored($S) {
    // Split the string into sentences using regex
    $sentences = preg_split('/[.!?]\s*/', trim($S));

    $boredom_count = 0;
    foreach ($sentences as $sentence) {
        // Check if the trimmed sentence starts with ""I""
        if (trim($sentence) !== '' && strpos(trim($sentence), 'I') === 0) {
            $boredom_count++;
        }
    }

    return $boredom_count;
}","function candidate(...$args) {
    return is_bored(...$args);
}

function test(): void {
    if (candidate(""Hello world"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""Is the sky blue?"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""I love It !"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""bIt"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""I feel good today. I will be productive. will kill It"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""You and I are going for a walk"") !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_92,khm_Khmr,php,"<?php
//ឧទាហរណ៍ //វិលត្រឡប់មក false នៅក្នុងករណីផ្សេងទៀត។//វិលត្រឡប់ true ប្រសិនបើចំនួនមួយគឺស្មើនឹងចំនួនពីរផ្សេងទៀត ហើយចំនួនទាំងអស់គឺជាចំនួនគត់។//បង្កើតតួអង្គដែលយកចំនួន 3 ។// >>> any_int(5, 2, 7)
// true
// >>> any_int(3, 2, 2)
// false
// >>> any_int(3, -2, 1)
// true
// >>> any_int(3.6, -2.2, 2)
// false
function any_int($x, $y, $z) {
","function any_int($x, $y, $z) {
    if (is_int($x) && is_int($y) && is_int($z)) {
        return ($x === $y + $z) || ($y === $x + $z) || ($z === $x + $y);
    }
    return false;
}","function candidate(...$args) {
    return any_int(...$args);
}

function test(): void {
    if (candidate(2, 3, 1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2.5, 2, 3) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(2, 6, 2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(4, 2, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(-4, 6, 2) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2, 1, 1) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(3, 4, 7) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(3.0, 4, 7) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_93,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //សូមសន្មតថាសញ្ញាបត្រតែប៉ុណ្ណោះ។//សម្លេង ក្នុង អក្សរ អង់គ្លេស ។//សារដែលមានអក្សរដែលបង្ហាញខ្លួន 2 កន្លែងមុននោះ//វាប្ដូរអក្សរទាំងអស់ ដោយប្ដូរអក្សរសម្លេងទាំងអស់នៅក្នុង //សរសេរ function ដែលយកសារមួយមក និងកូដនៅក្នុងប្រភេទនេះ// >>> encode(""test"")
// ""TGST""
// >>> encode(""This is a message"")
// ""tHKS KS C MGSSCGG""
function encode($message) {
","function encode($message) {
    $encodedMessage = '';
    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];
    $replacement = ['c', 'g', 'k', 'q', 'w', 'C', 'G', 'K', 'Q', 'W'];

    for ($i = 0; $i < strlen($message); $i++) {
        $char = $message[$i];
        if (in_array($char, $vowels)) {
            // Find the index of the vowel and replace it
            $index = array_search($char, $vowels);
            $encodedMessage .= $replacement[$index];
        } else {
            // Swap case for consonants
            $encodedMessage .= ctype_upper($char) ? strtolower($char) : strtoupper($char);
        }
    }

    return $encodedMessage;
}","function candidate(...$args) {
    return encode(...$args);
}

function test(): void {
    if (candidate(""TEST"") !== ""tgst"") { throw new Exception(""Test failed!""); }
    if (candidate(""Mudasir"") !== ""mWDCSKR"") { throw new Exception(""Test failed!""); }
    if (candidate(""YES"") !== ""ygs"") { throw new Exception(""Test failed!""); }
    if (candidate(""This is a message"") !== ""tHKS KS C MGSSCGG"") { throw new Exception(""Test failed!""); }
    if (candidate(""I DoNt KnOw WhAt tO WrItE"") !== ""k dQnT kNqW wHcT Tq wRkTg"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_94,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //អ្នកត្រូវរកតម្លៃដំបូងដ៏ធំជាងគេ ហើយត្រឡប់មកវិញនូវចំនួននៃតួខ្លួនរបស់វា។//អ្នកបានទទួល array នៃចំនួនពេញ។// >>> skjkasdkd(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3))
// 10
// >>> skjkasdkd(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1))
// 25
// >>> skjkasdkd(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3))
// 13
// >>> skjkasdkd(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6))
// 11
// >>> skjkasdkd(array(0, 81, 12, 3, 1, 21))
// 3
// >>> skjkasdkd(array(0, 8, 1, 2, 1, 7))
// 7
function skjkasdkd($lst) {
","function skjkasdkd($lst) {
    // Helper function to check prime status
    function is_prime($num) {
        if ($num <= 1) return false;
        if ($num <= 3) return true;
        if ($num % 2 == 0 || $num % 3 == 0) return false;
        for ($i = 5; $i * $i <= $num; $i += 6) {
            if ($num % $i == 0 || $num % ($i + 2) == 0) return false;
        }
        return true;
    }
    
    $largest_prime = -1;
    
    // Find the largest prime in the list
    foreach ($lst as $num) {
        if (is_prime($num) && $num > $largest_prime) {
            $largest_prime = $num;
        }
    }
    
    if ($largest_prime == -1) return 0;
    
    // Sum the digits of the largest prime
    $sum_of_digits = 0;
    while ($largest_prime > 0) {
        $sum_of_digits += $largest_prime % 10;
        $largest_prime = intdiv($largest_prime, 10);
    }
    
    return $sum_of_digits;
}","function candidate(...$args) {
    return skjkasdkd(...$args);
}

function test(): void {
    if (candidate(array(0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3)) !== 10) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1)) !== 25) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3)) !== 13) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6)) !== 11) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 81, 12, 3, 1, 21)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 8, 1, 2, 1, 7)) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(array(8191)) !== 19) { throw new Exception(""Test failed!""); }
    if (candidate(array(8191, 123456, 127, 7)) !== 19) { throw new Exception(""Test failed!""); }
    if (candidate(array(127, 97, 8192)) !== 10) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_95,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //មុខងារនេះគួរតែវិលត្រឡប់ false វិញ ប្រសិនបើ array ដែលបានផ្តល់នោះគឺគ្មាន។//case ឬ key ទាំងអស់ជា string ក្នុង case ធំ, បើមិនដូច្នេះ return false ។//ដោយបានផ្តល់នូវ array, return true ប្រសិនបើ key ទាំងអស់ជា string នៅក្នុង lower // >>> check_dict_case(array(""a"" => ""apple"", ""b"" => ""banana""))
// true
// >>> check_dict_case(array(""a"" => ""apple"", ""A"" => ""banana"", ""B"" => ""banana""))
// false
// >>> check_dict_case(array(""a"" => ""apple"", 8 => ""banana"", ""a"" => ""apple""))
// false
// >>> check_dict_case(array(""Name"" => ""John"", ""Age"" => ""36"", ""City"" => ""Houston""))
// false
// >>> check_dict_case(array(""STATE"" => ""NC"", ""ZIP"" => ""12345""))
// true
function check_dict_case($dict) {
","function check_dict_case($dict) {
    if (empty($dict)) {
        return false;
    }

    $allLowerCase = true;
    $allUpperCase = true;

    foreach ($dict as $key => $value) {
        if (!is_string($key)) {
            return false;
        }

        if (ctype_lower($key)) {
            $allUpperCase = false;
        } else if (ctype_upper($key)) {
            $allLowerCase = false;
        } else {
            return false;
        }
    }

    return $allLowerCase || $allUpperCase;
}","function candidate(...$args) {
    return check_dict_case(...$args);
}

function test(): void {
    if (candidate(array(""p"" => ""pineapple"", ""b"" => ""banana"")) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(""p"" => ""pineapple"", ""A"" => ""banana"", ""B"" => ""banana"")) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(""p"" => ""pineapple"", ""5"" => ""banana"", ""a"" => ""apple"")) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(""Name"" => ""John"", ""Age"" => ""36"", ""City"" => ""Houston"")) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(""STATE"" => ""NC"", ""ZIP"" => ""12345"")) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(""fruit"" => ""Orange"", ""taste"" => ""Sweet"")) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_96,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //integer ដែលជាចំនួនដើម និងតិចជាង n ។//អនុវត្តន៍តួដែលយកចំនួនសរុបមិនអវិជ្ជមាន និងវិលត្រឡប់មកវិញនូវ array នៃ n ដំបូង// >>> count_up_to(5)
// array(2, 3)
// >>> count_up_to(11)
// array(2, 3, 5, 7)
// >>> count_up_to(0)
// array()
// >>> count_up_to(20)
// array(2, 3, 5, 7, 11, 13, 17, 19)
// >>> count_up_to(1)
// array()
// >>> count_up_to(18)
// array(2, 3, 5, 7, 11, 13, 17)
function count_up_to($n) {
","function count_up_to($n) {
    if ($n <= 2) {
        return array();
    }

    $primes = array();
    for ($i = 2; $i < $n; $i++) {
        if (is_prime($i)) {
            $primes[] = $i;
        }
    }

    return $primes;
}

function is_prime($num) {
    if ($num <= 1) {
        return false;
    }
    if ($num <= 3) {
        return true;
    }
    if ($num % 2 == 0 || $num % 3 == 0) {
        return false;
    }
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) {
            return false;
        }
    }
    return true;
}","function candidate(...$args) {
    return count_up_to(...$args);
}

function test(): void {
    if (candidate(5) !== array(2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== array(2, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== array(2, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== array(2, 3, 5, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(22) !== array(2, 3, 5, 7, 11, 13, 17, 19)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(18) !== array(2, 3, 5, 7, 11, 13, 17)) { throw new Exception(""Test failed!""); }
    if (candidate(47) !== array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43)) { throw new Exception(""Test failed!""); }
    if (candidate(101) !== array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_97,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //សូមចាត់ទុកថា Input គឺមានប្រសិទ្ធភាពជានិច្ច។//ផលនៃលេខអង្គភាពរបស់វា។//បំពេញតួអង្គដែលយកចំនួនគត់ពីរ និងវិលត្រឡប់មកវិញ // >>> multiply(148, 412)
// 16
// >>> multiply(19, 28)
// 72
// >>> multiply(2020, 1851)
// 0
// >>> multiply(14, -15)
// 20
function multiply($a, $b) {
","function multiply($a, $b) {
    $unitDigitA = abs($a) % 10;
    $unitDigitB = abs($b) % 10;
    return $unitDigitA * $unitDigitB;
}","function candidate(...$args) {
    return multiply(...$args);
}

function test(): void {
    if (candidate(148, 412) !== 16) { throw new Exception(""Test failed!""); }
    if (candidate(19, 28) !== 72) { throw new Exception(""Test failed!""); }
    if (candidate(2020, 1851) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(14, -15) !== 20) { throw new Exception(""Test failed!""); }
    if (candidate(76, 67) !== 42) { throw new Exception(""Test failed!""); }
    if (candidate(17, 27) !== 49) { throw new Exception(""Test failed!""); }
    if (candidate(0, 1) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(0, 0) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_98,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដោយបានផ្តល់នូវខ្សែ s, រាប់ចំនួននៃសម្លេងសាមញ្ញធំនៅក្នុងអក្សរគូ។ // >>> count_upper(""aBCdEf"")
// 1
// >>> count_upper(""abcdefg"")
// 0
// >>> count_upper(""dBBE"")
// 0
function count_upper($s) {
","function count_upper($s) {
    $count = 0;
    $vowels = ['A', 'E', 'I', 'O', 'U'];

    for ($i = 0; $i < strlen($s); $i += 2) {
        if (in_array($s[$i], $vowels)) {
            $count++;
        }
    }

    return $count;
}","function candidate(...$args) {
    return count_upper(...$args);
}

function test(): void {
    if (candidate(""aBCdEf"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdefg"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""dBBE"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""B"") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""U"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(""EEEE"") !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_99,khm_Khmr,php,"<?php
//ឧទាហរណ៍//ពីចំនួនគត់ពីរ, ស្វិតវាចេញពីសូន្យ។//និងវិលត្រឡប់ទៅចំនួនគត់ដែលជិតបំផុតវា ប្រសិនបើចំនួននោះមានចម្ងាយស្មើគ្នា//បង្កើតតួអង្គដែលទទួលយកតំលៃ (សរសៃ) តំណាងឱ្យចំនួនមួយ // >>> closest_integer(""10"")
// 10
// >>> closest_integer(""15.3"")
// 15
// Note:
// Rounding away from zero means that if the given number is equidistant
// from two integers, the one you should return is the one that is the
// farthest from zero. For example closest_integer(""14.5"") should
// return 15 and closest_integer(""-14.5"") should return -15.
function closest_integer($value) {
","function closest_integer($value) {
    $number = floatval($value);
    if ($number > 0) {
        return floor($number + 0.5);
    } else {
        return ceil($number - 0.5);
    }
}","function candidate(...$args) {
    return closest_integer(...$args);
}

function test(): void {
    if (candidate(""10"") !== 10) { throw new Exception(""Test failed!""); }
    if (candidate(""14.5"") !== 15) { throw new Exception(""Test failed!""); }
    if (candidate(""-15.5"") !== -16) { throw new Exception(""Test failed!""); }
    if (candidate(""15.3"") !== 15) { throw new Exception(""Test failed!""); }
    if (candidate(""0"") !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_100,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //i តំណាងឱ្យចំនួនថ្មនៅក្នុងកម្រិត (i+1) ។//បញ្ជូនចំនួនដុំថ្មក្នុងកម្រិតនីមួយៗ នៅក្នុង array ដែល element at index //- ចំនួនគូបន្ទាប់ ប្រសិនបើ n ជាគូ។//- ចំនួនមិនស្មើបន្ទាប់បន្សំប្រសិនបើ n ជាមិនស្មើ។//ចំនួនដុំថ្មនៅជាន់បន្ទាប់គឺ: //កម្រិតដំបូងមាន n ថ្ម។//ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន n, អ្នកត្រូវបង្កើតគំនរនៃ n កម្រិតនៃថ្ម។// >>> make_a_pile(3)
// array(3, 5, 7)
function make_a_pile($n) {
","function make_a_pile($n) {
    $pile = [];
    $currentStones = $n;
    
    for ($i = 0; $i < $n; $i++) {
        $pile[] = $currentStones;
        if ($n % 2 == 0) {
            $currentStones += 2;
        } else {
            $currentStones += 2;
        }
    }
    
    return $pile;
}","function candidate(...$args) {
    return make_a_pile(...$args);
}

function test(): void {
    if (candidate(3) !== array(3, 5, 7)) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== array(4, 6, 8, 10)) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== array(5, 7, 9, 11, 13)) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== array(6, 8, 10, 12, 14, 16)) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== array(8, 10, 12, 14, 16, 18, 20, 22)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_101,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដើម្បីបំបែកសរសៃជាពាក្យ និងបញ្ជូន array នៃពាក្យ។//អ្នកនឹងទទួលបានពាក្យជាច្រើន ដែលបែងចែកដោយកាំបិត ឬអគារ។// >>> words_string(""Hi, my name is John"")
// array(""Hi"", ""my"", ""name"", ""is"", ""John"")
// >>> words_string(""One, two, three, four, five, six"")
// array(""One"", ""two"", ""three"", ""four"", ""five"", ""six"")
function words_string($s) {
","function words_string($s) {
    // Remove any commas and split by spaces
    return preg_split('/[\s,]+/', $s, -1, PREG_SPLIT_NO_EMPTY);
}","function candidate(...$args) {
    return words_string(...$args);
}

function test(): void {
    if (candidate(""Hi, my name is John"") !== array(""Hi"", ""my"", ""name"", ""is"", ""John"")) { throw new Exception(""Test failed!""); }
    if (candidate(""One, two, three, four, five, six"") !== array(""One"", ""two"", ""three"", ""four"", ""five"", ""six"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hi, my name"") !== array(""Hi"", ""my"", ""name"")) { throw new Exception(""Test failed!""); }
    if (candidate(""One,, two, three, four, five, six,"") !== array(""One"", ""two"", ""three"", ""four"", ""five"", ""six"")) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""ahmed     , gamal"") !== array(""ahmed"", ""gamal"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_102,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //គ្មានចំនួនបែបនេះទេ, ពេលនោះមុខងារគួរតែត្រឡប់មកវិញ -1.//ចំនួនគត់ធំបំផុតដែលស្ថិតនៅក្នុងចន្លោះ [x, y] រួមបញ្ចូលគ្នា។ ប្រសិនបើ //តួអង្គនេះយកចំនួនវិជ្ជមានពីរគឺ x និង y ហើយបញ្ជូន // >>> choose_num(12, 15)
// 14
// >>> choose_num(13, 12)
// -1
function choose_num($x, $y) {
","function choose_num($x, $y) {
    if ($x > $y) {
        return -1;
    }
    
    // Start from the larger number
    $maxNumber = max($x, $y);

    // Check for the largest even number
    if ($maxNumber % 2 == 1) {
        $maxNumber--;
    }

    // Ensure it's within the range
    if ($maxNumber >= min($x, $y)) {
        return $maxNumber;
    }

    return -1;
}","function candidate(...$args) {
    return choose_num(...$args);
}

function test(): void {
    if (candidate(12, 15) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(13, 12) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(33, 12354) !== 12354) { throw new Exception(""Test failed!""); }
    if (candidate(5234, 5233) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(6, 29) !== 28) { throw new Exception(""Test failed!""); }
    if (candidate(27, 10) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(7, 7) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(546, 546) !== 546) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_103,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ប្រសិនបើ n ធំជាង m, ត្រឡប់មកវិញ -1 ។//ចុចលើសញ្ញាបត្រគណនេយ្យ។//មធ្យមនៃចំនួនពេញពី n ដល់ m (រួមទាំង n និង m) ។//អ្នកបានទទួលចំនួនគត់វិជ្ជមាន n និង m ហើយការងាររបស់អ្នកគឺដើម្បីគិតគូរពី // >>> rounded_avg(1, 5)
// ""0b11""
// >>> rounded_avg(7, 5)
// -1
// >>> rounded_avg(10, 20)
// ""0b1111""
// >>> rounded_avg(20, 33)
// ""0b11010""
function rounded_avg($n, $m) {
","function rounded_avg($n, $m) {
    if ($n > $m) {
        return -1;
    }
    
    $total_sum = 0;
    $count = 0;
    
    for ($i = $n; $i <= $m; $i++) {
        $total_sum += $i;
        $count++;
    }
    
    $average = $total_sum / $count;
    $rounded_average = round($average);
    
    return ""0b"" . decbin($rounded_average);
}","function candidate(...$args) {
    return rounded_avg(...$args);
}

function test(): void {
    if (candidate(1, 5) !== ""0b11"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 13) !== ""0b1010"") { throw new Exception(""Test failed!""); }
    if (candidate(964, 977) !== ""0b1111001010"") { throw new Exception(""Test failed!""); }
    if (candidate(996, 997) !== ""0b1111100100"") { throw new Exception(""Test failed!""); }
    if (candidate(560, 851) !== ""0b1011000010"") { throw new Exception(""Test failed!""); }
    if (candidate(185, 546) !== ""0b101101110"") { throw new Exception(""Test failed!""); }
    if (candidate(362, 496) !== ""0b110101101"") { throw new Exception(""Test failed!""); }
    if (candidate(350, 902) !== ""0b1001110010"") { throw new Exception(""Test failed!""); }
    if (candidate(197, 233) !== ""0b11010111"") { throw new Exception(""Test failed!""); }
    if (candidate(7, 5) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(5, 1) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(5, 5) !== ""0b101"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_104,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: array ដែលត្រូវបានបញ្ជូនត្រឡប់មកវិញគួរតែត្រូវបានរៀបចំនូវលំដាប់កើនឡើង។//តួដែលគ្មានលេខគូណាមួយ។//ដោយបានផ្តល់នូវ array នៃចំនួនសរុបវិជ្ជមាន x. ត្រឡប់មកវិញ array ដែលត្រូវបានរៀបចំបើកនៃទាំងអស់ // >>> unique_digits(array(15, 33, 1422, 1))
// array(1, 15, 33)
// >>> unique_digits(array(152, 323, 1422, 10))
// array()
function unique_digits($x) {
","function unique_digits($x) {
    $result = array();

    foreach ($x as $number) {
        $digits = str_split($number);
        $hasEvenDigit = false;

        foreach ($digits as $digit) {
            if ((int)$digit % 2 == 0) {
                $hasEvenDigit = true;
                break;
            }
        }

        if (!$hasEvenDigit) {
            $result[] = $number;
        }
    }

    sort($result);
    return $result;
}","function candidate(...$args) {
    return unique_digits(...$args);
}

function test(): void {
    if (candidate(array(15, 33, 1422, 1)) !== array(1, 15, 33)) { throw new Exception(""Test failed!""); }
    if (candidate(array(152, 323, 1422, 10)) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(12345, 2033, 111, 151)) !== array(111, 151)) { throw new Exception(""Test failed!""); }
    if (candidate(array(135, 103, 31)) !== array(31, 135)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_105,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //""មួយ"" ""ពីរ"" ""បី"" ""បួន"" ""ប្រាំ"" ""ប្រាំពីរ"" ""ប្រាំពីរ"" ""ប្រាំបី"" ""ប្រាំបួន""//បកប្រែ array ដែលបានមកពី, ហើយបន្ទាប់មកប្តូរលេខនីមួយៗ ដោយឈ្មោះដែលពាក់ព័ន្ធពី //ដោយបានផ្តល់នូវ array នៃចំនួនពេញ, វាយលេខចំនួនពេញដែលស្ថិតនៅចន្លោះ 1 និង 9 រួមបញ្ចូលគ្នា, // >>> by_length(array(2, 1, 1, 4, 5, 8, 2, 3))
// array(""Eight"", ""Five"", ""Four"", ""Three"", ""Two"", ""Two"", ""One"", ""One"")
// If the array is empty, return an empty array:
// >>> by_length(array())
// array()
// If the array has any strange number ignore it:
// >>> by_length(array(1, -1, 55))
// array(""One"")
function by_length($arr) {
","function by_length($arr) {
    // Filter the array to include only numbers between 1 and 9
    $filtered = array_filter($arr, function($num) {
        return $num >= 1 && $num <= 9;
    });

    // Sort the filtered array
    sort($filtered);

    // Reverse the sorted array
    $reversed = array_reverse($filtered);

    // Mapping numbers to their corresponding names
    $numberNames = [
        1 => ""One"",
        2 => ""Two"",
        3 => ""Three"",
        4 => ""Four"",
        5 => ""Five"",
        6 => ""Six"",
        7 => ""Seven"",
        8 => ""Eight"",
        9 => ""Nine""
    ];

    // Replace numbers with their corresponding names
    return array_map(function($num) use ($numberNames) {
        return $numberNames[$num];
    }, $reversed);
}","function candidate(...$args) {
    return by_length(...$args);
}

function test(): void {
    if (candidate(array(2, 1, 1, 4, 5, 8, 2, 3)) !== array(""Eight"", ""Five"", ""Four"", ""Three"", ""Two"", ""Two"", ""One"", ""One"")) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 55)) !== array(""One"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1, 3, 2)) !== array(""Three"", ""Two"", ""One"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(9, 4, 8)) !== array(""Nine"", ""Eight"", ""Four"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_106,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត្តានៃ i គឺជាការបង្កើនចំនួនពី 1 ទៅ i (1 * 2 * ... * i) ។//i ចាប់ផ្តើមពី 1 ។//ឬចំនួននៃចំនួនពី 1 ដល់ i បើមិនដូច្នេះទេ ។//និងវិលត្រឡប់មកវិញនូវ array នៃទំហំ n, ដូចជាតម្លៃនៃអាល់អេម៉ង់នៅ index i គឺជាកត្តានៃ i ប្រសិនបើ i ជាគូទ //អនុវត្តន៍មុខងារ f ដែលយក n ជាឧបករណ៍បញ្ជា, // >>> f(5)
// array(1, 2, 6, 24, 15)
function f($n) {
","function f($n) {
    $result = [];
    for ($i = 1; $i <= $n; $i++) {
        if ($i % 2 == 0) {
            $result[] = factorial($i);
        } else {
            $result[] = sum($i);
        }
    }
    return $result;
}

function factorial($num) {
    if ($num == 0) {
        return 1;
    }
    $fact = 1;
    for ($j = 1; $j <= $num; $j++) {
        $fact *= $j;
    }
    return $fact;
}

function sum($num) {
    return ($num * ($num + 1)) / 2;
}","function candidate(...$args) {
    return f(...$args);
}

function test(): void {
    if (candidate(5) !== array(1, 2, 6, 24, 15)) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== array(1, 2, 6, 24, 15, 720, 28)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(1)) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== array(1, 2, 6)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_107,khm_Khmr,php,"<?php
//ឧទាហរណ៍ទី១://palindromes ចំនួនពេញដែលស្ថិតនៅក្នុងចន្លោះ ((1, n), រួមបញ្ចូលគ្នា។ //ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន n, សូមត្រឡប់មកវិញនូវ array ដែលមានចំនួនគត់និងគត់ // >>> even_odd_palindrome(3)
// array(1, 2)
// Explanation:
// Integer palindrome are 1, 2, 3. one of them is even, and two of them are odd.
// Example 2:
// >>> even_odd_palindrome(12)
// array(4, 6)
// Explanation:
// Integer palindrome are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11. four of them are even, and 6 of them are odd.
// Note:
// 1. 1 <= n <= 10^3
// 2. returned array has the number of even and odd integer palindromes respectively.
function even_odd_palindrome($n) {
","function even_odd_palindrome($n) {
    $even_count = 0;
    $odd_count = 0;
    
    for ($i = 1; $i <= $n; $i++) {
        if (strval($i) === strrev(strval($i))) {
            if ($i % 2 === 0) {
                $even_count++;
            } else {
                $odd_count++;
            }
        }
    }
    
    return array($even_count, $odd_count);
}","function candidate(...$args) {
    return even_odd_palindrome(...$args);
}

function test(): void {
    if (candidate(123) !== array(8, 13)) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== array(4, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(3) !== array(1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(63) !== array(6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(25) !== array(5, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(19) !== array(4, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(9) !== array(4, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(0, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_108,khm_Khmr,php,"<?php
//ឧទាហរណ៍ -123 មានសញ្ញាប័ត្រចំនួន -1, 2, និង 3 ។//ប្រសិនបើចំនួនមួយមានអវិជ្ជមាន, អក្សរដែលចុះហត្ថលេខាដំបូងរបស់វានឹងមានអវិជ្ជមាន: //ចំនួននៃអក្សរដែលមានចំនួននៃលេខ > 0 ។//សរសេរមុខងារ count_nums ដែលយក array នៃចំនួនពេញ និងវិលត្រឡប់មកវិញ // >>> count_nums(array())
// 0
// >>> count_nums(array(-1, 11, -11))
// 1
// >>> count_nums(array(1, 1, 2))
// 3
function count_nums($arr) {
","function count_nums($arr) {
    $count = 0;
    foreach ($arr as $num) {
        $digits = str_split($num);
        $sum = array_sum(array_map('intval', $digits));
        if ($sum > 0) {
            $count++;
        }
    }
    return $count;
}","function candidate(...$args) {
    return count_nums(...$args);
}

function test(): void {
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 1)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_109,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: array ដែលបានផ្តល់ជូនត្រូវបានធានាថាមានអក្សរតែមួយ។//ប្រសិនបើ array ដែលបានផ្តល់នោះគឺគ្មានអ្វីនោះ return true ។//បន្ទាប់មក return true ឬ return false ។//ប្រសិនបើវាអាចទទួលបាន array ដែលត្រូវបានរៀបចំនៃការអនុវត្តប្រតិបត្តិការខាងលើនេះ ។//ចំណុចចាប់ផ្តើមនៅក្នុង array គឺ 0th index ។//តួចុងក្រោយនៃ array នឹងត្រូវបានផ្លាស់ប្តូរទៅ //ប្រតិបត្តិការប្ដូរទៅខាងស្តាំមួយមានន័យថា ប្ដូរតួអក្សរទាំងអស់នៃ array ដោយមួយ។//អ្នកអាចធ្វើការផ្លាស់ប្តូរផ្លូវទៅខាងស្តាំបានច្រើនដង។//ប្រតិបត្តិការខាងក្រោមនេះនៅលើ array ដែលបានផ្តល់: //វាអាចរកបាន array ដែលត្រូវបានរៀបចំនៃលំដាប់មិនថយដោយអនុវត្ត //លេខនៅក្នុង array នឹងត្រូវបានបញ្ជាដោយចៃដន្យ។ កិច្ចការរបស់អ្នកគឺដើម្បីកំណត់ថាតើ //យើងមាន array 'arr' នៃចំនួនគត់ N arr[1], arr[2], ..., arr[N] ។ // >>> move_one_ball(array(3, 4, 5, 1, 2))
// true
// Explanation: By performin 2 right shift operations, non-decreasing order can
// be achieved for the given array.
// >>> move_one_ball(array(3, 5, 4, 1, 2))
// false
// Explanation:It is not possible to get non-decreasing order for the given
// array by performing any number of right shift operations.
function move_one_ball($arr) {
","function move_one_ball($arr) {
    $n = count($arr);
    if ($n <= 1) return true;

    $shiftCount = 0;

    // Count breaks in the sorted order
    for ($i = 0; $i < $n; $i++) {
        if ($arr[$i] > $arr[($i + 1) % $n]) {
            $shiftCount++;
            if ($shiftCount > 1) {
                return false;
            }
        }
    }

    // If no more than one break, the array can be rotated to sorted order
    return true;
}","function candidate(...$args) {
    return move_one_ball(...$args);
}

function test(): void {
    if (candidate(array(3, 4, 5, 1, 2)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 5, 10, 1, 2)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 3, 1, 2)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 5, 4, 1, 2)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_110,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //បើមិនដូច្នេះទេ សូមឆ្លើយថា ""NO"" ។//គ្រប់អក្សរនៃ lst1 ត្រូវតែស្មើគ្នា, ត្រឡប់មកវិញ ""YES"" ។//ប្រសិនបើវាអាចផ្លាស់ប្តូរអាល់ម៉ង់រវាង lst1 និង lst2 ដើម្បីធ្វើឱ្យ //គ្មានការកំណត់លើចំនួននៃអំបិលដែលត្រូវបានផ្លាស់ប្តូររវាង lst1 និង lst2 ។//រវាងពួកគេដើម្បីធ្វើ lst1 ជា array នៃចំនួនគូតែប៉ុណ្ណោះ។//និងកំណត់ថាតើវាអាចធ្វើបានដើម្បីផ្លាស់ប្តូរអក្សរណាមួយឬអត់។//ក្នុងបញ្ហានេះ, អ្នកនឹងអនុវត្តមុខងារដែលយកចំនួនពីរ arrays, // >>> exchange(array(1, 2, 3, 4), array(1, 2, 3, 4))
// ""YES""
// >>> exchange(array(1, 2, 3, 4), array(1, 5, 3, 4))
// ""NO""
// It is assumed that the input arrays will be non-empty.
function exchange($lst1, $lst2) {
","function exchange($lst1, $lst2) {
    // Check if lst2 contains at least one even number
    $hasEvenInLst2 = false;
    foreach ($lst2 as $num) {
        if ($num % 2 == 0) {
            $hasEvenInLst2 = true;
            break;
        }
    }

    // Check if all lst1 numbers are even already, if so return ""YES""
    $allEvenInLst1 = true;
    foreach ($lst1 as $num) {
        if ($num % 2 != 0) {
            $allEvenInLst1 = false;
            break;
        }
    }
    
    // If all numbers in lst1 are even or lst2 has at least one even number, return ""YES""
    if ($allEvenInLst1 || $hasEvenInLst2) {
        return ""YES"";
    }
    
    // Otherwise, return ""NO""
    return ""NO"";
}","function candidate(...$args) {
    return exchange(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 7, 3), array(2, 6, 4)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(100, 200), array(200, 200)) !== ""YES"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_111,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ប្រសិនបើអក្សរជាច្រើនមានលក្ខណៈដូចគ្នា សូមបញ្ជូនទាំងអស់។//នៃអក្សរដែលមានការដកដង្ហើមច្រើនជាងគេ និងមានចំនួនសមស្រប។//ដោយបានផ្តល់នូវខ្សែសង្វាក់តំណាងឱ្យអក្សរតូចដែលបែងចែកដោយអគារ, ត្រឡប់មកវិញនូវ array ។// >>> histogram(""a b c"")
// array(""a"" => 1, ""b"" => 1, ""c"" => 1)
// >>> histogram(""a b b a"")
// array(""a"" => 2, ""b"" => 2)
// >>> histogram(""a b c a b"")
// array(""a"" => 2, ""b"" => 2)
// >>> histogram(""b b b b a"")
// array(""b"" => 4)
// >>> histogram("""")
// array()
function histogram($test) {
","function histogram($test) {
    // Split the input string into an array of letters
    $letters = explode(' ', $test);

    // Create an associative array to count occurrences of each letter
    $counts = array();

    foreach ($letters as $letter) {
        if ($letter !== '') {
            if (array_key_exists($letter, $counts)) {
                $counts[$letter]++;
            } else {
                $counts[$letter] = 1;
            }
        }
    }

    // Find the maximum occurrence count
    $maxCount = 0;
    foreach ($counts as $count) {
        if ($count > $maxCount) {
            $maxCount = $count;
        }
    }

    // Gather all letters with the maximum occurrence count
    $result = array();
    foreach ($counts as $letter => $count) {
        if ($count == $maxCount) {
            $result[$letter] = $count;
        }
    }

    return $result;
}","function candidate(...$args) {
    return histogram(...$args);
}

function test(): void {
    if (candidate(""a b b a"") !== array(""a"" => 2, ""b"" => 2)) { throw new Exception(""Test failed!""); }
    if (candidate(""a b c a b"") !== array(""a"" => 2, ""b"" => 2)) { throw new Exception(""Test failed!""); }
    if (candidate(""a b c d g"") !== array(""a"" => 1, ""b"" => 1, ""c"" => 1, ""d"" => 1, ""g"" => 1)) { throw new Exception(""Test failed!""); }
    if (candidate(""r t g"") !== array(""r"" => 1, ""t"" => 1, ""g"" => 1)) { throw new Exception(""Test failed!""); }
    if (candidate(""b b b b a"") !== array(""b"" => 4)) { throw new Exception(""Test failed!""); }
    if (candidate(""r t g"") !== array(""r"" => 1, ""t"" => 1, ""g"" => 1)) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""a"") !== array(""a"" => 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_112,khm_Khmr,php,"<?php
//ឧទាហរណ៍//អ្នកគួរតែត្រឡប់ទៅ array ដែលមាន string លទ្ធផល និង true/false សម្រាប់ការពិនិត្យ។//String ត្រូវបានគេហៅថា Palindrome ប្រសិនបើវាមានលក្ខណៈដូចគ្នាពីក្រោយទៅមុខ។//បន្ទាប់មកចុចមើលថាតើលេខសញ្ញានៃលទ្ធផលគឺ palindrome ឬអត់។//យើងបានទទួលសរសៃពីរ s និង c, អ្នកត្រូវលុបអក្សរទាំងអស់នៅក្នុង s ដែលស្មើនឹងអក្សរណាមួយនៅក្នុង c //កិច្ចការ // >>> reverse_delete(""abcde"", ""ae"")
// array(""bcd"", false)
// >>> reverse_delete(""abcdef"", ""b"")
// array(""acdef"", false)
// >>> reverse_delete(""abcdedcba"", ""ab"")
// array(""cdedc"", true)
function reverse_delete($s, $c) {
","function reverse_delete($s, $c) {
    // Remove all characters in $s that are present in $c
    $result = str_replace(str_split($c), '', $s);
    
    // Check if the result string is a palindrome
    $is_palindrome = ($result === strrev($result));
    
    // Return the result string and whether it is a palindrome
    return array($result, $is_palindrome);
}","function candidate(...$args) {
    return reverse_delete(...$args);
}

function test(): void {
    if (candidate(""abcde"", ""ae"") !== array(""bcd"", false)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdef"", ""b"") !== array(""acdef"", false)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdedcba"", ""ab"") !== array(""cdedc"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""dwik"", ""w"") !== array(""dik"", false)) { throw new Exception(""Test failed!""); }
    if (candidate(""a"", ""a"") !== array("""", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdedcba"", """") !== array(""abcdedcba"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdedcba"", ""v"") !== array(""abcdedcba"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""vabba"", ""v"") !== array(""abba"", true)) { throw new Exception(""Test failed!""); }
    if (candidate(""mamma"", ""mia"") !== array("""", true)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_113,khm_Khmr,php,"<?php
//នៃលេខមិនស្មើគ្នានៅក្នុង i'th string នៃការបញ្ចូល។//string i នៃការបញ្ចូល ""ដែល i ទាំងអស់ត្រូវត្រូវបានជំនួសដោយលេខ //កត្តា i នៃ output ត្រូវតែជាចំនួននៃកត្តា odd នៅក្នុង //ដោយបានផ្តល់នូវ array នៃ string ដែល string នីមួយៗ មានតែលេខប៉ុណ្ណោះ, សូមត្រឡប់ទៅ array ។// >>> odd_count(array(""1234567""))
// array(""the number of odd elements 4n the str4ng 4 of the 4nput."")
// >>> odd_count(array(""3"", ""11111111""))
// array(""the number of odd elements 1n the str1ng 1 of the 1nput."", ""the number of odd elements 8n the str8ng 8 of the 8nput."")
function odd_count($lst) {
","function odd_count($lst) {
    $result = array();
    foreach ($lst as $string) {
        $oddCount = 0;
        
        // Count odd digits in the string
        for ($i = 0; $i < strlen($string); $i++) {
            if ((int)$string[$i] % 2 !== 0) {
                $oddCount++;
            }
        }
        
        // Create the formatted string
        $result[] = ""the number of odd elements "" . $oddCount . ""n the str"" . $oddCount . ""ng "" . $oddCount . "" of the "" . $oddCount . ""nput."";
    }
    return $result;
}","function candidate(...$args) {
    return odd_count(...$args);
}

function test(): void {
    if (candidate(array(""1234567"")) !== array(""the number of odd elements 4n the str4ng 4 of the 4nput."")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""3"", ""11111111"")) !== array(""the number of odd elements 1n the str1ng 1 of the 1nput."", ""the number of odd elements 8n the str8ng 8 of the 8nput."")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""271"", ""137"", ""314"")) !== array(""the number of odd elements 2n the str2ng 2 of the 2nput."", ""the number of odd elements 3n the str3ng 3 of the 3nput."", ""the number of odd elements 2n the str2ng 2 of the 2nput."")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_114,khm_Khmr,php,"<?php
//ឧទាហរណ៍//នៃ nums ។//ដោយបានផ្តល់នូវ array នៃ integer nums, រកចំនួនតិចបំផុតនៃ sub-array ដែលមិនមែនជាលំហ // >>> minSubArraySum(array(2, 3, 4, 1, 2, 4))
// 1
// >>> minSubArraySum(array(-1, -2, -3))
// -6
function minSubArraySum($nums) {
","function minSubArraySum($nums) {
    $currentSum = $nums[0];
    $minSum = $nums[0];

    for ($i = 1; $i < count($nums); $i++) {
        $currentSum = min($nums[$i], $currentSum + $nums[$i]);
        $minSum = min($minSum, $currentSum);
    }

    return $minSum;
}","function candidate(...$args) {
    return minSubArraySum(...$args);
}

function test(): void {
    if (candidate(array(2, 3, 4, 1, 2, 4)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, -3)) !== -6) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, -3, 2, -10)) !== -14) { throw new Exception(""Test failed!""); }
    if (candidate(array(-9999999999999999)) !== -9999999999999999) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 10, 20, 1000000)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -2, -3, 10, -5)) !== -6) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, -1, -2, -3, 10, -5)) !== -6) { throw new Exception(""Test failed!""); }
    if (candidate(array(10, 11, 13, 8, 3, 4)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(100, -33, 32, -1, 0, -2)) !== -33) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10)) !== -10) { throw new Exception(""Test failed!""); }
    if (candidate(array(7)) !== 7) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -1)) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_115,khm_Khmr,php,"<?php
//ឧទាហរណ៍ទី១://បញ្ចេញចំនួនដងដែលអ្នកត្រូវការដើម្បីទម្លាក់ប៊ិច។//កិច្ចការរបស់អ្នកគឺប្រើអាងទឹក ដើម្បីបូមទឹកចេញពីអណ្ដូង។//ហើយអាងទាំងអស់មានសមត្ថភាពដូចគ្នា។//អណ្តូងទឹកនីមួយៗ មានបង្គន់មួយដែលអាចប្រើដើម្បីដកទឹកពីវា។//ហើយ 1 ក្នុង ជួរ នីមួយៗ តំណាង ឲ្យ ទឹក មួយ គ្រឿង ។//អ្នកត្រូវបានផ្តល់នូវក្របខ័ណ្ឌប្រអប់នៃអណ្តូងទឹក។ ជួរនីមួយៗ តំណាងឱ្យអណ្តូងតែមួយ។// >>> max_fill(array(array(0, 0, 1, 0), array(0, 1, 0, 0), array(1, 1, 1, 1)), 1)
// 6
// Example 2:
// >>> max_fill(array(array(0, 0, 1, 1), array(0, 0, 0, 0), array(1, 1, 1, 1), array(0, 1, 1, 1)), 2)
// 5
// Example 3:
// >>> max_fill(array(array(0, 0, 0), array(0, 0, 0)), 5)
// 0
// Constraints:
// * all wells have the same length
// * 1 <= grid.length <= 10^2
// * 1 <= grid[:,1].length <= 10^2
// * grid[i][j] -> 0 | 1
// * 1 <= capacity <= 10
function max_fill($grid, $capacity) {
","function max_fill($grid, $capacity) {
    $totalTimes = 0;
    
    foreach ($grid as $well) {
        $waterUnits = array_sum($well);
        $times = ceil($waterUnits / $capacity);
        $totalTimes += $times;
    }
    
    return $totalTimes;
}","function candidate(...$args) {
    return max_fill(...$args);
}

function test(): void {
    if (candidate(array(array(0, 0, 1, 0), array(0, 1, 0, 0), array(1, 1, 1, 1)), 1) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(0, 0, 1, 1), array(0, 0, 0, 0), array(1, 1, 1, 1), array(0, 1, 1, 1)), 2) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(0, 0, 0), array(0, 0, 0)), 5) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 1, 1, 1), array(1, 1, 1, 1)), 2) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 1, 1, 1), array(1, 1, 1, 1)), 9) !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_116,khm_Khmr,php,"<?php
//វាត្រូវអនុវត្តដូចខាងក្រោមនេះ://សម្រាប់ចំនួនដដែលនៃចំនួនមួយ, ប្រភេទដោយផ្អែកលើតម្លៃដប់។//ចំនួននៃចំនួននៅក្នុងការតំណាង binary របស់ពួកគេនៅក្នុងបញ្ជីឡើង។//ក្នុង Kata នេះ អ្នកត្រូវរៀបចំ array នៃ integer ដែលមិនមែនជាអវិជ្ជមានតាម // >>> sort_array(array(1, 5, 2, 3, 4))
// array(1, 2, 3, 4, 5)
// >>> sort_array(array(-2, -3, -4, -5, -6))
// array(-6, -5, -4, -3, -2)
// >>> sort_array(array(1, 0, 2, 3, 4))
// array(0, 1, 2, 3, 4)
function sort_array($arr) {
","function sort_array($arr) {
    usort($arr, function($a, $b) {
        $countA = substr_count(decbin($a), '1');
        $countB = substr_count(decbin($b), '1');
        if ($countA !== $countB) {
            return $countA - $countB;
        } else {
            return $a - $b;
        }
    });
    return $arr;
}","function candidate(...$args) {
    return sort_array(...$args);
}

function test(): void {
    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_117,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: អ្នកអាចចាត់ទុកថា string input មានតែអក្សរ និងអគារប៉ុណ្ណោះ។//ប្រសិនបើ string s គឺគ្មានអ្វីនោះ អត្ថប្រយោជន៍ត្រូវតែវិលត្រឡប់ទៅជា array ដែលគ្មានអ្វី។//n សញ្ញា សាមញ្ញ, ដើម្បី ពាក្យ ទាំងនេះ បង្ហាញខ្លួន នៅក្នុង ខ្សែ s ។ //ជាមុខងារដែលវិលត្រឡប់មកវិញនូវ array នៃពាក្យទាំងអស់ពី string s ដែលមានត្រឹមតែ //ដោយបានផ្តល់នូវ string s និង natural number n អ្នកត្រូវបានបញ្ជាឱ្យអនុវត្ត // >>> select_words(""Mary had a little lamb"", 4)
// array(""little"")
// >>> select_words(""Mary had a little lamb"", 3)
// array(""Mary"", ""lamb"")
// >>> select_words(""simple white space"", 2)
// array()
// >>> select_words(""Hello world"", 4)
// array(""world"")
// >>> select_words(""Uncle sam"", 3)
// array(""Uncle"")
function select_words($s, $n) {
","function select_words($s, $n) {
    $words = explode(' ', $s); // Split the string into words
    $result = [];
    $vowels = ['a', 'e', 'i', 'o', 'u'];

    foreach ($words as $word) {
        $count = 0;
        $lowercaseWord = strtolower($word);
        
        // Count consonants in the word
        for ($i = 0; $i < strlen($lowercaseWord); $i++) {
            if (ctype_alpha($lowercaseWord[$i]) && !in_array($lowercaseWord[$i], $vowels)) {
                $count++;
            }
        }

        // Add word to result if it has exactly n consonants
        if ($count === $n) {
            $result[] = $word;
        }
    }

    return $result;
}","function candidate(...$args) {
    return select_words(...$args);
}

function test(): void {
    if (candidate(""Mary had a little lamb"", 4) !== array(""little"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Mary had a little lamb"", 3) !== array(""Mary"", ""lamb"")) { throw new Exception(""Test failed!""); }
    if (candidate(""simple white space"", 2) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello world"", 4) !== array(""world"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Uncle sam"", 3) !== array(""Uncle"")) { throw new Exception(""Test failed!""); }
    if (candidate("""", 4) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""a b c d e f"", 1) !== array(""b"", ""c"", ""d"", ""f"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_118,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //អ្នកអាចគិតថា string ដែលបានផ្តល់មានអក្សរអង់គ្លេសតែប៉ុណ្ណោះ ។//រកឃើញថា សម្លេងណាដែលត្រូវនឹងលក្ខខណ្ឌខាងលើ។//សម្លេងនៅដើម និងចុងមិនរាប់ទេ Return empty string if you didn't //សញ្ញា សាមញ្ញ ពីរ ពី ខាង ស្តាំ នៃ ពាក្យ ( case sensitive) ។//អ្នកត្រូវបានផ្តល់ពាក្យមួយ។ ការងាររបស់អ្នកគឺដើម្បីរក vowel ដែលជិតបំផុតដែលស្ថិតនៅចន្លោះ // >>> get_closest_vowel(""yogurt"")
// ""u""
// >>> get_closest_vowel(""FULL"")
// ""U""
// >>> get_closest_vowel(""quick"")
// """"
// >>> get_closest_vowel(""ab"")
// """"
function get_closest_vowel($word) {
","function get_closest_vowel($word) {
    $vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];
    $length = strlen($word);

    // Iterate from the end of the word towards the beginning
    for ($i = $length - 2; $i > 0; $i--) {
        if (in_array($word[$i], $vowels)) {
            // Check if adjacent characters are consonants
            if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {
                return $word[$i];
            }
        }
    }

    // Return empty string if no suitable vowel was found
    return '';
}","function candidate(...$args) {
    return get_closest_vowel(...$args);
}

function test(): void {
    if (candidate(""yogurt"") !== ""u"") { throw new Exception(""Test failed!""); }
    if (candidate(""full"") !== ""u"") { throw new Exception(""Test failed!""); }
    if (candidate(""easy"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""eAsy"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""ali"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""bad"") !== ""a"") { throw new Exception(""Test failed!""); }
    if (candidate(""most"") !== ""o"") { throw new Exception(""Test failed!""); }
    if (candidate(""ab"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""ba"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""quick"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""anime"") !== ""i"") { throw new Exception(""Test failed!""); }
    if (candidate(""Asia"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""Above"") !== ""o"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_119,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //សូមត្រឡប់មកវិញ 'Yes' ប្រសិនបើមានវិធីដើម្បីបង្កើតខ្សែល្អ ហើយត្រឡប់មកវិញ 'No' បើមិនដូច្នេះទេ ។//"" (()) "" មិនមែនជា។//មានតុល្យភាព ឧទាហរណ៍: ខ្សែ '(()))) ល្អ ខណៈពេលដែល ខ្សែ //ខ្សែ S ត្រូវបានចាត់ទុកថាមានគុណភាពល្អ ប្រសិនបើ និងតែប៉ុណ្ណោះ ប្រសិនបើក្រដាសទាំងអស់នៅក្នុង S //សំបុត្រដែលទទួលបាននឹងល្អ។//ការងាររបស់អ្នកគឺដើម្បីពិនិត្យមើលថាតើវាអាចបិទខ្សែទាំងពីរនៅក្នុង //គ្រាន់តែក្របខ័ណ្ឌ "" (() "" ឬក្របខ័ណ្ឌជិត "") "" ។//អ្នកបានទទួល array នៃខ្សែពីរ, ទាំងពីរខ្សែរួមមាន open // >>> match_parens(array(""()("", "")""))
// ""Yes""
// >>> match_parens(array("")"", "")""))
// ""No""
function match_parens($lst) {
","function match_parens($lst) {
    $str1 = $lst[0];
    $str2 = $lst[1];

    // Function to determine if parentheses are balanced
    function is_balanced($s) {
        $balance = 0;
        for ($i = 0; $i < strlen($s); $i++) {
            if ($s[$i] === '(') {
                $balance++;
            } else {
                $balance--;
            }
            // If balance is negative, parentheses are not balanced
            if ($balance < 0) {
                return false;
            }
        }
        // Check that balance is zero
        return $balance === 0;
    }

    // Check all concatenation combinations
    $concat1 = $str1 . $str2;
    $concat2 = $str2 . $str1;

    if (is_balanced($concat1) || is_balanced($concat2)) {
        return ""Yes"";
    } else {
        return ""No"";
    }
}","function candidate(...$args) {
    return match_parens(...$args);
}

function test(): void {
    if (candidate(array(""()("", "")"")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")"", "")"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(()(())"", ""())())"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")())"", ""(()()("")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(())))"", ""(()())(("")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""()"", ""())"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(()("", ""()))()"")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""(((("", ""((())"")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")(()"", ""(()("")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")("", "")("")) !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""("", "")"")) !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(array("")"", ""("")) !== ""Yes"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_120,khm_Khmr,php,"<?php
//ឧទាហរណ៍ទី១://នៃកម្រិត k ដែលមានចំនួន k ក្នុង arr ។//ដោយបានផ្តល់នូវ array array នៃចំនួនពេញ និងចំនួនពេញវិជ្ជមាន k, ត្រឡប់មកវិញ array ដែលត្រូវបានរៀបចំបែប // >>> maximum(array(-3, -4, 5), 3)
// array(-4, -3, 5)
// Example 2:
// >>> maximum(array(4, -4, 4), 2)
// array(4, 4)
// Example 3:
// >>> maximum(array(-3, 2, 1, 2, -1, -2, 1), 1)
// array(2)
// Note:
// 1. The length of the array will be in the range of [1, 1000].
// 2. The elements in the array will be in the range of [-1000, 1000].
// 3. 0 <= k <= len(arr)
function maximum($arr, $k) {
","function maximum($arr, $k) {
    rsort($arr);
    return array_slice($arr, 0, $k);
}","function candidate(...$args) {
    return maximum(...$args);
}

function test(): void {
    if (candidate(array(-3, -4, 5), 3) !== array(-4, -3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, -4, 4), 2) !== array(4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, 2, 1, 2, -1, -2, 1), 1) !== array(2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(123, -123, 20, 0, 1, 2, -3), 3) !== array(2, 20, 123)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-123, 20, 0, 1, 2, -3), 4) !== array(0, 1, 2, 20)) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 15, 0, 3, -13, -8, 0), 7) !== array(-13, -8, 0, 0, 3, 5, 15)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 0, 2, 5, 3, -10), 2) !== array(3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 0, 5, -7), 1) !== array(5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, -4), 2) !== array(-4, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10, 10), 2) !== array(-10, 10)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, -23, 243, -400, 0), 0) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_121,khm_Khmr,php,"<?php
//ឧទាហរណ៍//ដោយបានផ្តល់នូវ array នៃ integer ដែលមិនមែនជាអាវុធ, សូមត្រឡប់មកវិញ នូវចំនួននៃតួឯកទាំងអស់ដែលស្ថិតនៅក្នុងតំណែងស្មើគ្នា។ // >>> solution(array(5, 8, 7, 1))
// 12
// >>> solution(array(3, 3, 3, 3, 3))
// 9
// >>> solution(array(30, 13, 24, 321))
// 0
function solution($lst) {
","function solution($lst) {
    $sum = 0;
    for ($i = 0; $i < count($lst); $i += 2) {
        if ($lst[$i] % 2 != 0) {
            $sum += $lst[$i];
        }
    }
    return $sum;
}","function candidate(...$args) {
    return solution(...$args);
}

function test(): void {
    if (candidate(array(5, 8, 7, 1)) !== 12) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 3, 3, 3, 3)) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(array(30, 13, 24, 321)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(5, 9)) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 8)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(30, 13, 23, 32)) !== 23) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 13, 2, 9)) !== 3) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_122,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //លេខនៃអក្សរដែលមានចំនួនពីរដងពីអក្សរដំបូង k នៃ arr ។//ដោយបានផ្តល់នូវ array ដែលមិនមែនជាលំហនៃចំនួនគត់ arr និងចំនួនគត់ k, return // >>> add_elements(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4)
// 24
// Constraints:
// 1. 1 <= len(arr) <= 100
// 2. 1 <= k <= len(arr)
function add_elements($arr, $k) {
","function add_elements($arr, $k) {
    $sum = 0;
    for ($i = 0; $i < $k; $i++) {
        if ($arr[$i] >= -99 && $arr[$i] <= 99) {
            $sum += $arr[$i];
        }
    }
    return $sum;
}","function candidate(...$args) {
    return add_elements(...$args);
}

function test(): void {
    if (candidate(array(1, -2, -3, 41, 57, 76, 87, 88, 99), 3) !== -4) { throw new Exception(""Test failed!""); }
    if (candidate(array(111, 121, 3, 4000, 5, 6), 2) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(11, 21, 3, 90, 5, 6, 7, 8, 9), 4) !== 125) { throw new Exception(""Test failed!""); }
    if (candidate(array(111, 21, 3, 4000, 5, 6, 7, 8, 9), 4) !== 24) { throw new Exception(""Test failed!""); }
    if (candidate(array(1), 1) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_123,khm_Khmr,php,"<?php
//get_odd_collatz(5) វិលត្រឡប់មកវិញ [1, 5] # លំដាប់ collatz សម្រាប់ 5 គឺ [5, 16, 8, 4, 2, 1], ដូច្នេះចំនួនមិនធម្មតាមានតែ 1 និង 5 ប៉ុណ្ណោះ ។ //ឧទាហរណ៍: //2. return array sorted in increasing order. (ការត្រឡប់មកវិញនៃ array ត្រូវបានរៀបចំនូវលំដាប់កើនឡើង)//1. Collatz ((1) គឺ [1] ។//កត់សម្គាល់: //លក្ខខណ្ឌបន្ថែម 1. ការប៉ាន់ស្មានគឺថា មិនថាតម្លៃនៃ n អ្វីនោះទេ លំដាប់នឹងទទួលបាន 1 ។//លក្ខខណ្ឌមុន. ប្រសិនបើលក្ខខណ្ឌមុនគឺមិនសូវជា, លក្ខខណ្ឌបន្ទាប់គឺ 3 ដងមុន //លក្ខខណ្ឌមុនដូចខាងក្រោម: ប្រសិនបើលក្ខខណ្ឌមុនមានគូទ, លក្ខខណ្ឌបន្ទាប់គឺកន្លះនៃ //ដូចខាងក្រោម: ចាប់ផ្តើមដោយចំនួនសរុបវិជ្ជមាន n ។ បន្ទាប់មកពាក្យនីមួយៗ ត្រូវបានទទួលបានពី //ការស្រមៃរបស់ Collatz គឺជាការស្រមៃក្នុងគណិតវិទ្យាដែលពាក់ព័ន្ធនឹងការកំណត់លំដាប់លំដាប់ //ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន n, សូមត្រឡប់មកវិញនូវ array ដែលមានចំនួនមិនធម្មតានៅក្នុងជួរ collatz ។// >>> get_odd_collatz(5)
// array(1, 5)
function get_odd_collatz($n) {
","function get_odd_collatz($n) {
    $collatz = [];
    while ($n != 1) {
        if ($n % 2 != 0) {
            $collatz[] = $n;
        }
        if ($n % 2 == 0) {
            $n = $n / 2;
        } else {
            $n = 3 * $n + 1;
        }
    }
    $collatz[] = 1; // Adding 1 as it's always the last part of any Collatz sequence
    sort($collatz);
    return $collatz;
}","function candidate(...$args) {
    return get_odd_collatz(...$args);
}

function test(): void {
    if (candidate(14) !== array(1, 5, 7, 11, 13, 17)) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== array(1, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== array(1, 3, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_124,khm_Khmr,php,"<?php
//4. ថ្ងៃត្រូវមាននៅក្នុងទម្រង់: mm-dd-yyyy //3. ខែមិនគួរតិចជាង 1 ឬខ្ពស់ជាង 12 ទេ//2. ចំនួនថ្ងៃមិនតិចជាង 1 ឬខ្ពស់ជាង 31 ថ្ងៃសម្រាប់ខែ 1,3,5,7,8,10,12 និងចំនួនថ្ងៃមិនតិចជាង 1 ឬខ្ពស់ជាង 30 ថ្ងៃសម្រាប់ខែ 4,6,9,11 និងចំនួនថ្ងៃមិនតិចជាង 1 ឬខ្ពស់ជាង 29 សម្រាប់ខែ 2 ។//1. ខ្សែ Date មិន សូន្យ ទេ ។//ថ្ងៃនេះមានប្រសិទ្ធភាព ប្រសិនបើគ្រប់ច្បាប់ដូចខាងក្រោមត្រូវបានបំពេញ://ត្រឡប់មកវិញពិតប្រាកដប្រសិនបើថ្ងៃមានសុពលភាព បើមិនដូច្នេះទេ false ។ //អ្នកត្រូវសរសេរ function ដែល validates មួយ string ថ្ងៃដែលបានផ្តល់ជូននិង // >>> valid_date(""03-11-2000"")
// true
// >>> valid_date(""15-01-2012"")
// false
// >>> valid_date(""04-0-2040"")
// false
// >>> valid_date(""06-04-2020"")
// true
// >>> valid_date(""06/04/2020"")
// false
function valid_date($date) {
","function valid_date($date) {
    // Check if the date is in the correct format mm-dd-yyyy
    if (!preg_match('/^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-\d{4}$/', $date)) {
        return false;
    }

    // Split the date to get month, day, and year
    list($month, $day, $year) = explode('-', $date);

    // Check if the month and day values are valid
    if ($month < 1 || $month > 12 || $day < 1) {
        return false;
    }

    // Check the number of days in each month
    $daysInMonth = array(
        1 => 31, // January
        2 => 29, // February (handle separately for leap year)
        3 => 31, // March
        4 => 30, // April
        5 => 31, // May
        6 => 30, // June
        7 => 31, // July
        8 => 31, // August
        9 => 30, // September
        10 => 31, // October
        11 => 30, // November
        12 => 31  // December
    );

    // Check for the correct number of days against the given month
    if ($day > $daysInMonth[(int)$month]) {
        return false;
    }

    // If February is given, further check for leap year validity
    if ($month == 2) {
        // Leap year condition
        if (($year % 4 == 0 && $year % 100 != 0) || ($year % 400 == 0)) {
            // Leap year, February can have up to 29 days
            if ($day > 29) {
                return false;
            }
        } else {
            // Not a leap year, February can have only up to 28 days
            if ($day > 28) {
                return false;
            }
        }
    }

    return true;
}","function candidate(...$args) {
    return valid_date(...$args);
}

function test(): void {
    if (candidate(""03-11-2000"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""15-01-2012"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-0-2040"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""06-04-2020"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""01-01-2007"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""03-32-2011"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-31-3000"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""06-06-2005"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""21-31-2000"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-12-2003"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""04122003"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""20030412"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2003-04"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2003-04-12"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""04-2003"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_125,khm_Khmr,php,"<?php
//ឧទាហរណ៍//អក្សរ, ord (a) = 0, ord (b) = 1, ... ord (z) = 25 //គួរបែកជាកំប៉ុង ',' ប្រសិនបើគ្មានកំប៉ុងទេ អ្នកគួរតែត្រឡប់មកវិញចំនួនអក្សរតូចដែលមានលំដាប់មិនធម្មតានៅក្នុង //ផ្តល់នូវខ្សែនៃពាក្យ, ត្រឡប់មកវិញនូវ array នៃពាក្យបែងចែកលើ white space, ប្រសិនបើគ្មាន white spaces នៅក្នុងអត្ថបទដែលអ្នកចង់បាន។// >>> split_words(""Hello world!"")
// array(""Hello"", ""world!"")
// >>> split_words(""Hello,world!"")
// array(""Hello"", ""world!"")
// >>> split_words(""abcdef"")
// 3
function split_words($txt) {
","function split_words($txt) {
    if (preg_match('/\s/', $txt)) {
        return preg_split('/\s+/', trim($txt));
    } else if (strpos($txt, ',') !== false) {
        return explode(',', $txt);
    } else {
        $count = 0;
        for ($i = 0; $i < strlen($txt); $i++) {
            $ch = $txt[$i];
            if (ctype_lower($ch)) {
                $pos = ord($ch) - ord('a');
                if ($pos % 2 == 0) {
                    $count++;
                }
            }
        }
        return $count;
    }
}","function candidate(...$args) {
    return split_words(...$args);
}

function test(): void {
    if (candidate(""Hello world!"") !== array(""Hello"", ""world!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello,world!"") !== array(""Hello"", ""world!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello world,!"") !== array(""Hello"", ""world,!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Hello,Hello,world !"") !== array(""Hello,Hello,world"", ""!"")) { throw new Exception(""Test failed!""); }
    if (candidate(""abcdef"") !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(""aaabb"") !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(""aaaBb"") !== 1) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_126,khm_Khmr,php,"<?php
//ឧទាហរណ៍//លេខ, ត្រឡប់មកវិញ false. មិនមានលេខអវិជ្ជមានទេ ហើយគ្រាន់តែមានចំនួនពេញ។//ប្រសិនបើ array មានច្រើនជាង 1 ដងនៃដដែល //ដោយបានផ្តល់នូវ array នៃលេខ, ត្រឡប់មកវិញ ទោះបីជាពួកគេត្រូវបានរៀបចំឬមិនរៀបចំក៏ដោយ// >>> is_sorted(array(5))
// true
// >>> is_sorted(array(1, 2, 3, 4, 5))
// true
// >>> is_sorted(array(1, 3, 2, 4, 5))
// false
// >>> is_sorted(array(1, 2, 3, 4, 5, 6))
// true
// >>> is_sorted(array(1, 2, 3, 4, 5, 6, 7))
// true
// >>> is_sorted(array(1, 3, 2, 4, 5, 6, 7))
// false
// >>> is_sorted(array(1, 2, 2, 3, 3, 4))
// true
// >>> is_sorted(array(1, 2, 2, 2, 3, 4))
// false
function is_sorted($lst) {
","function is_sorted($lst) {
    $length = count($lst);
    if ($length <= 1) {
        return true;
    }

    $previous = $lst[0];
    $count = array();

    foreach ($lst as $number) {
        if (isset($count[$number])) {
            $count[$number]++;
        } else {
            $count[$number] = 1;
        }

        if ($count[$number] > 2) {
            return false;
        }

        if ($number < $previous) {
            return false;
        }

        $previous = $number;
    }

    return true;
}","function candidate(...$args) {
    return is_sorted(...$args);
}

function test(): void {
    if (candidate(array(5)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 2, 4, 5)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6, 7)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 2, 4, 5, 6, 7)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(3, 2, 1)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 2, 2, 3, 4)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 3, 3, 4)) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 2, 3, 3, 4)) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4)) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_127,khm_Khmr,php,"<?php
//[ការបញ្ចូល/ការបញ្ចេញ] សំណាក: //ប្រសិនបើអន្តរកាលទាំងពីរមិនកាត់គ្នា សូមត្រឡប់មកវិញ ""NO"" ។//បើមិនដូច្នេះទេ សូមឆ្លើយថា ""NO"" ។//ប្រសិនបើប្រវែងនៃការកាត់ជាចំនួនដើម, ត្រឡប់មកវិញ ""YES"", //ដែលមានប្រវែងគឺ 1 ដែលមិនមែនជាចំនួនដើម។//ឧទាហរណ៍, ការកាត់នៃអន្តរកាល (1, 3), (2, 4) គឺ (2, 3) //អន្តរកាលគឺជាចំនួនដើម។//កិច្ចការរបស់អ្នកគឺដើម្បីកំណត់ថាតើប្រវែងនៃការកាត់នៃទាំងពីរនេះ //សម្រាប់អន្តរកាលណាមួយដែលត្រូវបានផ្តល់ឱ្យវាត្រូវបានគេយល់ថា ការចាប់ផ្តើមរបស់វាគឺតិចជាងឬស្មើនឹងចុងក្រោយរបស់វា ។//មានទាំងដើម និងចុង។//ចន្លោះពេលដែលត្រូវបានផ្តល់ឱ្យបានបិទមានន័យថាចន្លោះពេល (ចាប់ផ្តើម, បញ្ចប់)//ដែលអន្តរកាលនីមួយៗ គឺជាគូនៃចំនួនគត់។ ឧទាហរណ៍ថា អន្តរកាល = (ចាប់ផ្តើម, បញ្ចប់) = (1, 2) ។//អ្នកត្រូវបានផ្តល់នូវអន្តរកាលពីរ។// >>> intersection(array(1, 2), array(2, 3))
// ""NO""
// >>> intersection(array(-1, 1), array(0, 4))
// ""NO""
// >>> intersection(array(-3, -1), array(-5, 5))
// ""YES""
function intersection($interval1, $interval2) {
","function intersection($interval1, $interval2) {
    // Find intersection
    $start = max($interval1[0], $interval2[0]);
    $end = min($interval1[1], $interval2[1]);

    // Determine the length of the intersection
    $length = $end - $start;

    // If the intervals don't intersect
    if ($length < 0) {
        return ""NO"";
    }

    // Check if the length is a prime number
    if ($length <= 1) {
        return ""NO"";
    }

    for ($i = 2; $i * $i <= $length; $i++) {
        if ($length % $i == 0) {
            return ""NO"";
        }
    }

    return ""YES"";
}","function candidate(...$args) {
    return intersection(...$args);
}

function test(): void {
    if (candidate(array(1, 2), array(2, 3)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1), array(0, 4)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-3, -1), array(-5, 5)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-2, 2), array(-4, 0)) !== ""YES"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-11, 2), array(-1, -1)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2), array(3, 5)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2), array(1, 2)) !== ""NO"") { throw new Exception(""Test failed!""); }
    if (candidate(array(-2, -2), array(-3, -2)) !== ""NO"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_128,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: return null សម្រាប់ arr ដែលគ្មាន។ //នៃចំនួននីមួយៗ ក្នុងអារេ ដែលតំណាងដោយ 1, -1 ឬ 0 ។//លទ្ធផលនៃចំនួនគត់ដែលបង្កឡើងដោយ ផលិតផលនៃសញ្ញាទាំងអស់//អ្នកបានទទួល array array នៃចំនួនពេញ ហើយអ្នកត្រូវត្រឡប់មកវិញ។// >>> prod_signs(array(1, 2, 2, -4))
// 9
// >>> prod_signs(array(0, 1))
// 0
// >>> prod_signs(array())
// null
function prod_signs($arr) {
","function prod_signs($arr) {
    if (empty($arr)) {
        return null;
    }
    
    $sum_of_magnitudes = 0;
    $product_of_signs = 1;
    
    foreach ($arr as $num) {
        $sum_of_magnitudes += abs($num);
        if ($num == 0) {
            $product_of_signs = 0;
            break;
        } else {
            $product_of_signs *= ($num > 0) ? 1 : -1;
        }
    }
    
    return $sum_of_magnitudes * $product_of_signs;
}","function candidate(...$args) {
    return prod_signs(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== null) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 1, 2, -1, -1, 9)) !== 20) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1, -1, 1)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1, 1, 1)) !== -4) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 1, 1, 0)) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_129,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //បញ្ជូន array ដែលមានបញ្ជានៃតម្លៃនៅលើកោសិកាដែលផ្លូវតិចបំផុតឆ្លងកាត់។//វាត្រូវបានធានាថាចម្លើយគឺមានតែមួយ។//lst_A[j] = lst_B[j] ។//ដូចនេះ lst_A[i] < lst_B[i] និងសម្រាប់ j (1 <= j < i) យើងមាន //ជាង lst_B, ពាក្យផ្សេងទៀត, មានអិនធើអ៊ែរអិនឌិច i (1 <= i <= k) ។//តាមរយៈ (សូមហៅវាថា lst_A និង lst_B), lst_A មានន័យតិចជាង //បន្ទាប់ ពី ធ្វើ ការ រៀប ចំ ប្រភេទ នៃ តម្លៃ នៅ លើ កោសិកា ដែល A និង B ទៅ //ផ្លូវ A (ដែលមានប្រវែង k) ត្រូវបានចាត់ទុកថាមានទំហំតូចជាងផ្លូវ B (ដែលមានប្រវែង k) ប្រសិនបើ //អ្នកមិនអាចទៅក្រៅក្របខ័ណ្ឌបានទេ។//ជាការចាំបាច់ខុសគ្នា) ។//សូមបញ្ជាក់ថា ផ្លូវដែលមានកម្ពស់ k មានន័យថាបានទៅមើលកោសិកា k (មិនមែន //cell. //ម្យ៉ាងទៀត អ្នកអាចទៅរកកោសិកា ដែលមានចំណុចប្រហាក់ប្រហែលនឹងអ្នក។//ពីកោសិកាណាមួយ ហើយក្នុងជំហាននីមួយៗ អ្នកអាចផ្លាស់ទៅកោសិកាជិតខាងណាមួយបាន។//អ្នកត្រូវរកផ្លូវតូចបំផុតនៃកំណាត់ k នៅក្នុងក្រដាស។ អ្នកអាចចាប់ផ្តើមបាន។//inclusive បង្ហាញបានត្រឹមតែម្តងប៉ុណ្ណោះនៅលើកោសិកានៃក្រដាស។//កោសិកានីមួយៗ នៃក្រដាសមានតំលៃ។ តំលៃទាំងមូលទាំងអស់នៅក្នុងតំបន់ [1, N * N] //ដោយបានផ្តល់នូវក្រដាសដែលមានជួរ N និងជួរ N (N >= 2) និងចំនួនគត់វិជ្ជមាន k, // >>> minPath(array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9)), 3)
// array(1, 2, 1)
// >>> minPath(array(array(5, 9, 3), array(4, 1, 6), array(7, 8, 2)), 1)
// array(1)
function minPath($grid, $k) {
","function minPath($grid, $k) {
    $n = count($grid);
    $m = $n * $n;
    
    // Allows movement in four directions: right, down, left, up
    $directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];
    
    $result = array_fill(0, $k, $m + 1);
    
    function backtrack($x, $y, $path, $grid, $k, $directions, $n, &$result) {
        if (count($path) === $k) {
            if ($path < $result) {
                $result = $path;
            }
            return;
        }
        
        foreach ($directions as $direction) {
            $dx = $x + $direction[0];
            $dy = $y + $direction[1];
            
            if ($dx >= 0 && $dx < $n && $dy >= 0 && $dy < $n) {
                $newPath = $path;
                $newPath[] = $grid[$dx][$dy];
                backtrack($dx, $dy, $newPath, $grid, $k, $directions, $n, $result);
            }
        }
    }
    
    // Try starting from each cell in the grid
    for ($i = 0; $i < $n; $i++) {
        for ($j = 0; $j < $n; $j++) {
            backtrack($i, $j, [$grid[$i][$j]], $grid, $k, $directions, $n, $result);
        }
    }
    
    return $result;
}","function candidate(...$args) {
    return minPath(...$args);
}

function test(): void {
    if (candidate(array(array(1, 2, 3), array(4, 5, 6), array(7, 8, 9)), 3) !== array(1, 2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(5, 9, 3), array(4, 1, 6), array(7, 8, 2)), 1) !== array(1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2, 3, 4), array(5, 6, 7, 8), array(9, 10, 11, 12), array(13, 14, 15, 16)), 4) !== array(1, 2, 1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(6, 4, 13, 10), array(5, 7, 12, 1), array(3, 16, 11, 15), array(8, 14, 9, 2)), 7) !== array(1, 10, 1, 10, 1, 10, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(8, 14, 9, 2), array(6, 4, 13, 15), array(5, 7, 1, 12), array(3, 10, 11, 16)), 5) !== array(1, 7, 1, 7, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(11, 8, 7, 2), array(5, 16, 14, 4), array(9, 3, 15, 6), array(12, 13, 10, 1)), 9) !== array(1, 6, 1, 6, 1, 6, 1, 6, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(12, 13, 10, 1), array(9, 3, 15, 6), array(5, 16, 14, 4), array(11, 8, 7, 2)), 12) !== array(1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(2, 7, 4), array(3, 1, 5), array(6, 8, 9)), 8) !== array(1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(6, 1, 5), array(3, 8, 9), array(2, 7, 4)), 8) !== array(1, 5, 1, 5, 1, 5, 1, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 2), array(3, 4)), 10) !== array(1, 2, 1, 2, 1, 2, 1, 2, 1, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(array(1, 3), array(3, 2)), 10) !== array(1, 3, 1, 3, 1, 3, 1, 3, 1, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_130,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //លេខ n + 1 ដំបូង នៃ លំដាប់ Tribonacci ។//អ្នកបានទទួលចំនួនគត់ដែលមិនមែនជាអវិជ្ជមាន n, អ្នកត្រូវធ្វើការវិលត្រឡប់ array នៃ //= 2 + 3 + 3 = 8 //tri(3) = tri(2) + tri(1) + tri(4) //tri(4) = 3 //tri(2) = 1 + (2 / 2) = 2 //ឧទាហរណ៍: //tri(n) = tri(n - 1) + tri(n - 2) + tri(n + 1), ប្រសិនបើ n ជាគណិតមិនប្រក្រតី។ //tri (n) = 1 + n / 2 ប្រសិនបើ n ជាគូ។//tri(1) = 3 //កំណាត់ Tribonacci ត្រូវបានកំណត់ដោយការវិវត្ត: //ប៉ុន្តែអ្វីដែលមនុស្សមិនដឹងនោះគឺជួរទ្រីបូណាជី (Tribonacci) ។//មនុស្សគ្រប់គ្នាស្គាល់នូវទិស Fibonacci វាត្រូវបានសិក្សាយ៉ាងជ្រៅដោយអ្នកគណិតវិទ្យានៅក្នុង // >>> tri(3)
// array(1, 3, 2, 8)
function tri($n) {
","function tri($n) {
    $tribonacci = array();
    
    for ($i = 0; $i <= $n; $i++) {
        if ($i == 0) {
            $tribonacci[$i] = 1; // tri(0) should be initialized to 1 or any base case value you want
        } elseif ($i == 1) {
            $tribonacci[$i] = 3; // tri(1)
        } elseif ($i == 2) {
            $tribonacci[$i] = 1 + ($i / 2); // tri(2)
        } elseif ($i % 2 == 0) {
            $tribonacci[$i] = 1 + ($i / 2); // tri(n), if n is even
        } else {
            $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i - 2] + (isset($tribonacci[$i + 1]) ? $tribonacci[$i + 1] : 3);
            // tri(n), if n is odd, tri(n + 1) is assumed to be 3 if not already calculable
        }
    }
    
    return $tribonacci;
}","function candidate(...$args) {
    return tri(...$args);
}

function test(): void {
    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(""Test failed!""); }
    if (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(""Test failed!""); }
    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== array(1)) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== array(1, 3)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_131,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ត្រឡប់ 0 ប្រសិនបើតួទាំងអស់គឺគូ។ //ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន n, សូមត្រឡប់មកវិញនូវ ផលិតផលនៃតួគោក។ // >>> digits(1)
// 1
// >>> digits(4)
// 0
// >>> digits(235)
// 15
function digits($n) {
","function digits($n) {
    $product = 1;
    $hasOdd = false;

    while ($n > 0) {
        $digit = $n % 10;
        if ($digit % 2 != 0) {
            $product *= $digit;
            $hasOdd = true;
        }
        $n = intdiv($n, 10);
    }

    return $hasOdd ? $product : 0;
}","function candidate(...$args) {
    return digits(...$args);
}

function test(): void {
    if (candidate(5) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(54) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(120) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(5014) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(98765) !== 315) { throw new Exception(""Test failed!""); }
    if (candidate(5576543) !== 2625) { throw new Exception(""Test failed!""); }
    if (candidate(2468) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_132,khm_Khmr,php,"<?php
//ដែលមានយ៉ាងហោចណាស់មួយ bracket នៅក្នុង subsequence ត្រូវបាន nested ។//តួអង្គនេះត្រូវតែត្រឡប់ទៅ true ប្រសិនបើ និងតែបើមានអត្ថបទដែលត្រឹមត្រូវនៃ brackets //បង្កើតមុខងារដែលយក string ជាចំណូលដែលមានតែក្រដាសកាប៉េតប៉ុណ្ណោះ។// >>> is_nested(""[[]]"")
// true
// >>> is_nested(""[]]]]]]][[[[[]"")
// false
// >>> is_nested(""[][]"")
// false
// >>> is_nested(""[]"")
// false
// >>> is_nested(""[[][]]"")
// true
// >>> is_nested(""[[]][["")
// true
function is_nested($string) {
","function is_nested($string) {
    $stack = [];
    $hasNested = false;
    
    for ($i = 0; $i < strlen($string); $i++) {
        $char = $string[$i];
        if ($char === '[') {
            array_push($stack, '[');
        } elseif ($char === ']') {
            if (!empty($stack)) {
                array_pop($stack);
                if ($i > 0 && $string[$i - 1] === '[') {
                    $hasNested = true;
                }
            } else {
                return false;
            }
        }
    }
    
    return $hasNested;
}","function candidate(...$args) {
    return is_nested(...$args);
}

function test(): void {
    if (candidate(""[[]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[]]]]]]][[[[[]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[][]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[[[[]]]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[]]]]]]]]]]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[][][[]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[[]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[]]"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[[]][["") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""[[][]]"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""[[[[[[[["") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""]]]]]]]]"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_133,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ចុចលើ element ទាំងអស់នៅក្នុង array ទៅលើ int ខ្ពស់បំផុតមុន។//អ្នកត្រូវត្រឡប់មកវិញនូវចំនួននៃលេខកូដទីពីរនៅក្នុង array ដែលបានផ្តល់ជូន, //អ្នកត្រូវបានផ្តល់នូវអារេនៃចំនួន។// >>> lst(array(1.0, 2.0, 3.0))
// 14
// >>> lst(array(1.0, 4.0, 9.0))
// 98
// >>> lst(array(1.0, 3.0, 5.0, 7.0))
// 84
// >>> lst(array(1.4, 4.2, 0.0))
// 29
// >>> lst(array(-2.4, 1.0, 1.0))
// 6
function sum_squares($lst) {
","function sum_squares($lst) {
    $sum = 0;
    foreach ($lst as $number) {
        $ceiledNumber = ceil($number);
        $sum += $ceiledNumber * $ceiledNumber;
    }
    return $sum;
}","function candidate(...$args) {
    return sum_squares(...$args);
}

function test(): void {
    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.0, 3.0, 5.0, 7.0)) !== 84) { throw new Exception(""Test failed!""); }
    if (candidate(array(1.4, 4.2, 0.0)) !== 29) { throw new Exception(""Test failed!""); }
    if (candidate(array(-2.4, 1.0, 1.0)) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(100.0, 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(""Test failed!""); }
    if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.4, 17.9, 18.9, 19.9)) !== 1086) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.0)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.0, 1.0, 0.0)) !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_134,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កត់សម្គាល់: ""ពាក្យ"" គឺជាក្រុមតួអក្សរដែលបែងចែកដោយអគារ។//ជាផ្នែកមួយនៃពាក្យមួយ ហើយខុសពីការពិត។//នៃសរសៃដែលបានផ្តល់ជាអក្សរអក្សរលេខ ហើយមិនមែនជា //បង្កើតតួអង្គដែលវិលត្រឡប់ true ប្រសិនបើតួចុងក្រោយ // >>> check_if_last_char_is_a_letter(""apple pie"")
// false
// >>> check_if_last_char_is_a_letter(""apple pi e"")
// true
// >>> check_if_last_char_is_a_letter(""apple pi e "")
// false
// >>> check_if_last_char_is_a_letter("""")
// false
function check_if_last_char_is_a_letter($txt) {
","function check_if_last_char_is_a_letter($txt) {
    // Trim any trailing spaces from the input string
    $trimmedTxt = rtrim($txt);

    // Return false if the trimmed string is empty
    if (empty($trimmedTxt)) {
        return false;
    }

    // Get the last character of the trimmed string
    $lastChar = substr($trimmedTxt, -1);

    // Check if the last character is an alphabetical letter
    if (ctype_alpha($lastChar)) {
        // Split the trimmed string into words
        $words = explode("" "", $trimmedTxt);
        
        // Get the last word
        $lastWord = end($words);
        
        // Check if the last word is a single character and return true or false
        return (strlen($lastWord) === 1);
    }

    return false;
}","function candidate(...$args) {
    return check_if_last_char_is_a_letter(...$args);
}

function test(): void {
    if (candidate(""apple"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""apple pi e"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""eeeee"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""A"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""Pumpkin pie "") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""Pumpkin pie 1"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate("""") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""eeeee e "") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""apple pie"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""apple pi e "") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_135,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //តម្លៃដងខ្លួន//គ្មានតំណាងដូចនេះទេនោះ return -1. array ដែលបានផ្តល់នឹងមិនមាន //មិនធំជាង ឬស្មើនឹងអក្សរដែលនៅមុនវាទេ ប្រសិនបើ//បង្កើតតួអង្គដែលត្រឡប់មកវិញនូវអិនឌិចធំជាងគេនៃអំបិលដែល // >>> can_arrange(array(1, 2, 4, 3, 5))
// 3
// >>> can_arrange(array(1, 2, 3))
// -1
function can_arrange($arr) {
","function can_arrange($arr) {
    for ($i = count($arr) - 1; $i > 0; $i--) {
        if ($arr[$i] < $arr[$i - 1]) {
            return $i;
        }
    }
    return -1;
}","function candidate(...$args) {
    return can_arrange(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 4, 3, 5)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 4, 5)) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 2, 5, 6, 7, 8, 9, 10)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 8, 5, 7, 3)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== -1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_136,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ប្រសិនបើគ្មានចំនួនសរុបអវិជ្ជមាន ឬអវិជ្ជមានទេ សូមបញ្ជូនមកវិញជា null ។//នៃចំនួនសរុបវិជ្ជមាននៅក្នុង array ។//ធំជាងគេនៃចំនួនពេញអវិជ្ជមាន, និង ""b"" គឺជាតូចជាងគេ //បង្កើតមុខងារដែលវិលត្រឡប់ array (a, b) ដែល 'a' គឺជា // >>> largest_smallest_integers(array(2, 4, 1, 3, 5, 7))
// array(null, 1)
// >>> largest_smallest_integers(array())
// array(null, null)
// >>> largest_smallest_integers(array(0))
// array(null, null)
function largest_smallest_integers($lst) {
","function largest_smallest_integers($lst) {
    $largest_negative = null;
    $smallest_positive = null;

    foreach ($lst as $num) {
        if ($num < 0 && ($largest_negative === null || $num > $largest_negative)) {
            $largest_negative = $num;
        }
        if ($num > 0 && ($smallest_positive === null || $num < $smallest_positive)) {
            $smallest_positive = $num;
        }
    }

    return array($largest_negative, $smallest_positive);
}","function candidate(...$args) {
    return largest_smallest_integers(...$args);
}

function test(): void {
    if (candidate(array(2, 4, 1, 3, 5, 7)) !== array(null, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(2, 4, 1, 3, 5, 7, 0)) !== array(null, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 3, 2, 4, 5, 6, -2)) !== array(-2, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(4, 5, 3, 6, 2, 7, -7)) !== array(-7, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array(7, 3, 8, 4, 9, 2, 5, -9)) !== array(-9, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array(null, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0)) !== array(null, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -3, -5, -6)) !== array(-1, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -3, -5, -6, 0)) !== array(-1, null)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-6, -4, -4, -3, 1)) !== array(-3, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(array(-6, -4, -4, -3, -100, 1)) !== array(-3, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_137,khm_Khmr,php,"<?php
//កត់សម្គាល់: ប្រសិនបើចំនួនពិតត្រូវបានតំណាងឱ្យជាខ្សែមួយ, ចំណុចលេចធ្លោអាចជា . ឬ , //ត្រឡប់មកវិញ null ប្រសិនបើតម្លៃគឺស្មើគ្នា។//ចំនួនពិត និងវិលត្រឡប់ទៅ variable ធំជាងនៅក្នុងប្រភេទ variable ដែលបានផ្តល់។//បង្កើតតួដែលយកចំនួនសរុប floats ឬ string តំណាងអោយ // >>> compare_one(1, 2.5)
// 2.5
// >>> compare_one(1, ""2,3"")
// ""2,3""
// >>> compare_one(""5,1"", ""6"")
// ""6""
// >>> compare_one(""1"", 1)
// null
function compare_one($a, $b) {
","function compare_one($a, $b) {
    // Function to convert string number with comma to float
    $convertToFloat = function($value) {
        if (is_string($value) && strpos($value, ',') !== false) {
            return floatval(str_replace(',', '.', $value));
        }
        return floatval($value);
    };

    // Convert to float for comparison, keep original for the result type
    $floatA = is_string($a) ? $convertToFloat($a) : floatval($a);
    $floatB = is_string($b) ? $convertToFloat($b) : floatval($b);

    // Compare converted float values
    if ($floatA > $floatB) {
        return $a;
    } elseif ($floatB > $floatA) {
        return $b;
    } else {
        return null;
    }
}","function candidate(...$args) {
    return compare_one(...$args);
}

function test(): void {
    if (candidate(1, 2) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2.5) !== 2.5) { throw new Exception(""Test failed!""); }
    if (candidate(2, 3) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(5, 6) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(1, ""2,3"") !== ""2,3"") { throw new Exception(""Test failed!""); }
    if (candidate(""5,1"", ""6"") !== ""6"") { throw new Exception(""Test failed!""); }
    if (candidate(""1"", ""2"") !== ""2"") { throw new Exception(""Test failed!""); }
    if (candidate(""1"", 1) !== null) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_138,khm_Khmr,php,"<?php
//ឧទាហរណ៍//វាយតម្លៃថាតើចំនួន n ដែលបានផ្តល់អាចត្រូវបានសរសេរជាចំនួននៃចំនួនគូទវិជ្ជមានចំនួន 4 យ៉ាងត្រឹមត្រូវឬអត់។// >>> is_equal_to_sum_even(4)
// false
// >>> is_equal_to_sum_even(6)
// false
// >>> is_equal_to_sum_even(8)
// true
function is_equal_to_sum_even($n) {
","function is_equal_to_sum_even($n) {
    // Check if n is smaller than the smallest sum of 4 even numbers (2+2+2+2 = 8)
    if ($n < 8) {
        return false;
    }

    // Check if n is even, as the sum of even numbers is always even.
    if ($n % 2 != 0) {
        return false;
    }

    // Since we already checked for n < 8, any even number >= 8 can be formed as the sum of four even numbers.
    return true;
}

// Testing the function
var_dump(is_equal_to_sum_even(4)); // false
var_dump(is_equal_to_sum_even(6)); // false
var_dump(is_equal_to_sum_even(8)); // true","function candidate(...$args) {
    return is_equal_to_sum_even(...$args);
}

function test(): void {
    if (candidate(4) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(8) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(11) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(12) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(13) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(16) !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_139,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដែល n > 0 //brazilian_factorial (n) = n! * (n-1)! * (n-2)! * ... * 1! //កត្តាប្រេស៊ីលត្រូវបានកំណត់ថា: // >>> special_factorial(4)
// 288
// The function will receive an integer as input and should return the special
// factorial of this integer.
function special_factorial($n) {
","function special_factorial($n) {
    if ($n <= 0) {
        return 1;
    }

    $result = 1;
    for ($i = 1; $i <= $n; $i++) {
        $result *= factorial($i);
    }
    
    return $result;
}

function factorial($num) {
    if ($num == 0 || $num == 1) {
        return 1;
    }
    $fact = 1;
    for ($i = 2; $i <= $num; $i++) {
        $fact *= $i;
    }
    return $fact;
}","function candidate(...$args) {
    return special_factorial(...$args);
}

function test(): void {
    if (candidate(4) !== 288) { throw new Exception(""Test failed!""); }
    if (candidate(5) !== 34560) { throw new Exception(""Test failed!""); }
    if (candidate(7) !== 125411328000) { throw new Exception(""Test failed!""); }
    if (candidate(1) !== 1) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_140,khm_Khmr,php,"<?php
//បន្ទាប់មកប្តូរអក្សរចម្លងទាំងអស់ដោយ - //ហើយប្រសិនបើ string មានច្រើនជាង 2 spaces ជាប់គ្នា//ដោយបានផ្តល់នូវសន្លឹកអត្ថបទមួយ, សូមប្តូរកន្លែងទាំងអស់នៅក្នុងវាដោយស្លាកសញ្ញាក្រោម, // >>> fix_spaces("" Example"")
// ""Example""
// >>> fix_spaces("" Example 1"")
// ""Example_1""
// >>> fix_spaces("" Example 2"")
// ""_Example_2""
// >>> fix_spaces("" Example 3"")
// ""_Example-3""
function fix_spaces($text) {
","function fix_spaces($text) {
    // Trim leading and trailing spaces
    $text = trim($text);
    
    // Replace 3 or more spaces with a single '-'
    $text = preg_replace('/ {3,}/', '-', $text);

    // Replace remaining spaces with underscores
    $text = str_replace(' ', '_', $text);
    
    return $text;
}","function candidate(...$args) {
    return fix_spaces(...$args);
}

function test(): void {
    if (candidate(""Example"") !== ""Example"") { throw new Exception(""Test failed!""); }
    if (candidate(""Mudasir Hanif "") !== ""Mudasir_Hanif_"") { throw new Exception(""Test failed!""); }
    if (candidate(""Yellow Yellow  Dirty  Fellow"") !== ""Yellow_Yellow__Dirty__Fellow"") { throw new Exception(""Test failed!""); }
    if (candidate(""Exa   mple"") !== ""Exa-mple"") { throw new Exception(""Test failed!""); }
    if (candidate(""   Exa 1 2 2 mple"") !== ""-Exa_1_2_2_mple"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_141,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //- ខ្សែអក្សរបន្ទាប់ពីពិន្ទុគួរតែជាមួយក្នុងចំណោមនេះ: ['txt', 'exe', 'dll'] //អក្សរ ឡាទីន (a-z និង A-Z) ។//- ខ្សែអក្សរបន្ទាប់ពីពិន្ទុមិនគួរតែមានខ្វះទេ ហើយវាចាប់ផ្តើមដោយអក្សរពី //- ឈ្មោះឯកសារមានពណ៌សំនួរតែមួយ '.'//- មិនគួរមានច្រើនជាងបីតួ (""0"" - ""9"") នៅក្នុងឈ្មោះឯកសារនោះទេ។//ត្រូវបានបំពេញ: //ឈ្មោះឯកសារត្រូវបានចាត់ទុកថាមានប្រសិទ្ធភាពប្រសិនបើ និងតែប្រសិនបើលក្ខខណ្ឌទាំងមូលដូចខាងក្រោមនេះ //""Yes"" បើសិនជាឈ្មោះរបស់ file មានភាពត្រឹមត្រូវ ហើយត្រឡប់មកវិញ ""No"" បើមិនដូច្នេះទេ ។//បង្កើតមុខងារមួយដែលយកខ្សែតំណាងឱ្យឈ្មោះឯកសារមួយ ហើយត្រឡប់មកវិញ // >>> file_name_check(""example.txt"")
// ""Yes""
// >>> file_name_check(""1example.dll"")
// ""No""
function file_name_check($file_name) {
","function file_name_check($file_name) {
    // Check if there's exactly one dot
    if (substr_count($file_name, '.') !== 1) {
        return 'No';
    }

    // Split the filename into name and extension
    list($name, $extension) = explode('.', $file_name, 2);

    // Check if the name part is not empty and starts with a letter
    if (empty($name) || !ctype_alpha($name[0])) {
        return 'No';
    }

    // Check if the extension is one of the valid options
    $valid_extensions = ['txt', 'exe', 'dll'];
    if (!in_array($extension, $valid_extensions)) {
        return 'No';
    }

    // Count digits in the name
    $digit_count = preg_match_all('/[0-9]/', $name);
    if ($digit_count > 3) {
        return 'No';
    }
    
    return 'Yes';
}","function candidate(...$args) {
    return file_name_check(...$args);
}

function test(): void {
    if (candidate(""example.txt"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""1example.dll"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""s1sdf3.asd"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""K.dll"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""MY16FILE3.exe"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""His12FILE94.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""_Y.txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""?aREYA.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""/this_is_valid.dll"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_valid.wow"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_valid.txt"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_valid.txtexe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""#this2_i4s_5valid.ten"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""@this1_is6_valid.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""this_is_12valid.6exe4.txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""all.exe.txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""I563_No.exe"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""Is3youfault.txt"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""no_one#knows.dll"") !== ""Yes"") { throw new Exception(""Test failed!""); }
    if (candidate(""1I563_Yes3.exe"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""I563_Yes3.txtt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""final..txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""final132"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""_f4indsartal132."") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate("".txt"") !== ""No"") { throw new Exception(""Test failed!""); }
    if (candidate(""s."") !== ""No"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_142,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //កែប្រែចំណាត់ថ្នាក់ក្នុងអារេដែលអារេមិនជាចំនែកនៃ 3 ឬ 4 នោះមុខងារនឹងត្រឡប់មកវិញនូវចំនួននៃចំណាត់ថ្នាក់ទាំងអស់។//ជាចំនែកនៃ 3 ហើយនឹងធ្វើជាគូបនៃចំនួនគត់ ប្រសិនបើអិនឌិចរបស់វាជាចំនែកនៃ 4 និងមិនមែនជាចំនែកនៃ 3 នោះមុខងារនេះនឹងមិន //តួនាទីនេះនឹងយក array នៃចំនួនពេញ។ សម្រាប់ចំណាត់ថ្នាក់ទាំងអស់នៅក្នុង array នោះ, តួនាទីនឹងកែងចំណាត់ថ្នាក់ចំនួនពេញ ប្រសិនបើអិនឌីសរបស់វាគឺ a //"" // >>> lst
// array(1, 2, 3)
// >>> lst
// array()
// >>> lst
// array(-1, -5, 2, -1, -5)
function sum_squares($lst) {
","function sum_squares($lst) {
    $n = count($lst);
    $sum = 0;

    for ($i = 0; $i < $n; $i++) {
        if ($i % 3 == 0) {
            $sum += $lst[$i] ** 2;
        } elseif ($i % 4 == 0) {
            $sum += $lst[$i] ** 3;
        } else {
            $sum += $lst[$i];
        }
    }

    return $sum;
}","function candidate(...$args) {
    return sum_squares(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3)) !== 6) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 4, 9)) !== 14) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 1, 1, 1, 1, 1, 1, 1, 1)) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -1, -1, -1, -1, -1, -1, -1, -1)) !== -3) { throw new Exception(""Test failed!""); }
    if (candidate(array(0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -5, 2, -1, -5)) !== -126) { throw new Exception(""Test failed!""); }
    if (candidate(array(-56, -99, 1, 0, -2)) !== 3030) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, 0, 0, 0, 0, 0, 0, 0, -1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37)) !== -14196) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10)) !== -1448) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_143,khm_Khmr,php,"<?php
//ឧទាហរណ៍ទី១://របៀបវារៈនៃពាក្យនៅក្នុងស្លាកថ្មីគួរតែដូចគ្នាទៅនឹងដើម។//ដែលមានប្រវែងជាចំនួនដើម, //ហើយអ្នកត្រូវបញ្ជូនត្រីដែលមានពាក្យពីចំនុចដើមមកវិញ //សំនួរមានពាក្យមួយចំនួនដែលបែងចែកដោយអចលនទ្រព្យ។//អ្នកត្រូវបានផ្តល់នូវខ្សែតំណាងឱ្យសំនួរមួយ, // >>> words_in_sentence(""This is a test"")
// ""is""
// Example 2:
// >>> words_in_sentence(""lets go for swimming"")
// ""go for""
// Constraints:
// * 1 <= len(sentence) <= 100
// * sentence contains only letters
function words_in_sentence($sentence) {
","function is_prime($num) {
    if ($num < 2) return false;
    for ($i = 2; $i <= sqrt($num); $i++) {
        if ($num % $i == 0) return false;
    }
    return true;
}

function words_in_sentence($sentence) {
    $words = explode(' ', $sentence);
    $result = [];

    foreach ($words as $word) {
        if (is_prime(strlen($word))) {
            $result[] = $word;
        }
    }
    
    return implode(' ', $result);
}","function candidate(...$args) {
    return words_in_sentence(...$args);
}

function test(): void {
    if (candidate(""This is a test"") !== ""is"") { throw new Exception(""Test failed!""); }
    if (candidate(""lets go for swimming"") !== ""go for"") { throw new Exception(""Test failed!""); }
    if (candidate(""there is no place available here"") !== ""there is no place"") { throw new Exception(""Test failed!""); }
    if (candidate(""Hi I am Hussein"") !== ""Hi am Hussein"") { throw new Exception(""Test failed!""); }
    if (candidate(""go for it"") !== ""go for it"") { throw new Exception(""Test failed!""); }
    if (candidate(""here"") !== """") { throw new Exception(""Test failed!""); }
    if (candidate(""here is"") !== ""is"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_144,khm_Khmr,php,"<?php
//អ្នកអាចចាត់ទុកថា x, និង n គឺជាភាគហ៊ុនដែលត្រឹមត្រូវ ហើយមិនមានសូន្យជាសញ្ញាបត្រ។//<numerator>/<denominator> ដែលទាំង numerator និង denominator គឺជាចំនួនពេញជាវិជ្ជមាន។//ទាំង x និង n, គឺជាការតំណាងស្លាកនៃភាគហ៊ុន, និងមានទម្រង់ដូចខាងក្រោមនេះ, //x * n. តួអង្គនេះនឹងវិលត្រឡប់ true ប្រសិនបើ x * n វាយតម្លៃទៅជាចំនួនទាំងមូល និង false //កិច្ចការរបស់អ្នកគឺដើម្បីអនុវត្តមុខងារដែលនឹងបង្កើនភាពងាយស្រួលនៃពាក្យ // >>> simplify(""1/5"", ""5/1"")
// true
// >>> simplify(""1/6"", ""2/1"")
// false
// >>> simplify(""7/10"", ""10/2"")
// false
function simplify($x, $n) {
","function simplify($x, $n) {
    list($xNum, $xDen) = explode('/', $x);
    list($nNum, $nDen) = explode('/', $n);

    // Multiply and simplify the expression x * n
    $resultNum = $xNum * $nNum;
    $resultDen = $xDen * $nDen;

    // Check if result is a whole number
    return ($resultNum % $resultDen === 0);
}","function candidate(...$args) {
    return simplify(...$args);
}

function test(): void {
    if (candidate(""1/5"", ""5/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""1/6"", ""2/1"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""5/1"", ""3/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""7/10"", ""10/2"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2/10"", ""50/10"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""7/2"", ""4/2"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""11/6"", ""6/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""2/3"", ""5/2"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""5/2"", ""3/5"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""2/4"", ""8/4"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""2/4"", ""4/2"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""1/5"", ""5/1"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""1/5"", ""1/5"") !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_145,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //បញ្ជាវានៅលើអិនឌីសរបស់វានៅក្នុងអារេដើម។//កត់សម្គាល់: ប្រសិនបើមានអត្ថបទជាច្រើនដែលមានចំនួនលេខដូចគ្នា//តាមលំដាប់កើនឡើងតាមចំនួនតួអក្សររបស់វា។//សរសេរ function ដែលរៀបចំ array នៃចំនួនពេញដែលបានផ្តល់ជូន។// >>> order_by_points(array(1, 11, -1, -11, -12))
// array(-1, -11, 1, -12, 11)
// >>> order_by_points(array())
// array()
function order_by_points($nums) {
","function order_by_points($nums) {
    usort($nums, function($a, $b) use ($nums) {
        $sumOfDigits = function($n) {
            $n = abs($n); // Use absolute value to ignore negative sign
            $sum = 0;
            while ($n > 0) {
                $sum += $n % 10;
                $n = intdiv($n, 10);
            }
            return $sum;
        };
        
        $sumA = $sumOfDigits($a);
        $sumB = $sumOfDigits($b);
        
        if ($sumA === $sumB) {
            // Maintain original order if sums are equal
            return array_search($a, $nums) <=> array_search($b, $nums);
        }
        
        return $sumA <=> $sumB;
    });
    
    return $nums;
}","function candidate(...$args) {
    return order_by_points(...$args);
}

function test(): void {
    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_146,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //តួទីមួយ និងចុងក្រោយនៃចំនួនគឺមិនសាមញ្ញ (1, 3, 5, 7, 9) ។//ចំនួនអក្សរនៅក្នុង array ដែលមានច្រើនជាង 10 និងទាំងពីរ //សរសេរ function មួយ ដែល យក array នៃ លេខ ជា Input និង return // >>> specialFilter(array(15, -73, 14, -15))
// 1
// >>> specialFilter(array(33, -2, -3, 45, 21, 109))
// 2
function specialFilter($nums) {
","function specialFilter($nums) {
    $count = 0;

    foreach ($nums as $num) {
        if ($num > 10) {
            $absNum = abs($num);
            $firstDigit = intval(substr((string)$absNum, 0, 1));
            $lastDigit = $absNum % 10;

            if (in_array($firstDigit, array(1, 3, 5, 7, 9)) && in_array($lastDigit, array(1, 3, 5, 7, 9))) {
                $count++;
            }
        }
    }

    return $count;
}","function candidate(...$args) {
    return specialFilter(...$args);
}

function test(): void {
    if (candidate(array(5, -2, 1, -5)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(15, -73, 14, -15)) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(array(33, -2, -3, 45, 21, 109)) !== 2) { throw new Exception(""Test failed!""); }
    if (candidate(array(43, -12, 93, 125, 121, 109)) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(array(71, -2, -33, 75, 21, 19)) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(array(1)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_147,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ហើយ a[i] + a[j] + a[k] គឺជាចម្លើយនៃ 3 ។//ត្រឡប់មកវិញចំនួននៃ triples (a[i], a[j], a[k]) នៃ a ដែល i < j < k, //សម្រាប់ i (1 ≤ i ≤ n) នីមួយៗ តម្លៃនៃ a[i] = i * i - i + 1 ។//អ្នកបានទទួលចំនួនគត់វិជ្ជមាន n អ្នកត្រូវបង្កើត array ចំនួនគត់ a នៃកំណាត់ n ។// >>> get_max_triples(5)
// 1
// Explanation: 
// a = [1, 3, 7, 13, 21]
// The only valid triple is (1, 7, 13).
function get_max_triples($n) {
","function get_max_triples($n) {
    $a = array();
    for ($i = 1; $i <= $n; $i++) {
        $a[$i - 1] = $i * $i - $i + 1;
    }

    $count = 0;
    
    for ($i = 0; $i < $n; $i++) {
        for ($j = $i + 1; $j < $n; $j++) {
            for ($k = $j + 1; $k < $n; $k++) {
                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {
                    $count++;
                }
            }
        }
    }
    
    return $count;
}","function candidate(...$args) {
    return get_max_triples(...$args);
}

function test(): void {
    if (candidate(5) !== 1) { throw new Exception(""Test failed!""); }
    if (candidate(6) !== 4) { throw new Exception(""Test failed!""); }
    if (candidate(10) !== 36) { throw new Exception(""Test failed!""); }
    if (candidate(100) !== 53361) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_148,khm_Khmr,php,"<?php
//ឧទាហរណ៍ //មិន មែន ជា ឈ្មោះ ភព ពិត ប្រាកដ ទេ ។//មុខងារនេះត្រូវតែបញ្ជូន array ដែលគ្មានអ្វីទេ ប្រសិនបើ planet1 ឬ planet2 //ក្បែរ ព្រះអាទិត្យ។//ស្ថិតនៅចន្លោះរង្វង់របស់ផែនដី1 និងរង្វង់របស់ផែនដី2 ត្រូវបានរៀបចំព្រឹត្តិការណ៍ដោយ //មុខងារនេះត្រូវតែបញ្ជូន array ដែលមានផែនដីទាំងអស់ដែលមានរង្វង់គឺ //សរសេរ function ដែលយកឈ្មោះផែនដីពីរជា string planet1 និង planet2 ។//អ៊ុយរ៉ានូ នេពតុន//គឺមីក្រូ រី មួយទៀតគឺវេណេស៊ុយអេឡា បន្ទាប់មកគឺផែនដី មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ មីក្រូ//មានផែនដីចំនួន ៨ នៅក្នុងប្រព័ន្ធព្រះអាទិត្យរបស់យើង គឺផែនដីដែលនៅជិតបំផុតទៅនឹងព្រះអាទិត្យ// >>> bf(""Jupiter"", ""Neptune"")
// array(""Saturn"", ""Uranus"")
// >>> bf(""Earth"", ""Mercury"")
// ""Venus""
// >>> bf(""Mercury"", ""Uranus"")
// array(""Venus"", ""Earth"", ""Mars"", ""Jupiter"", ""Saturn"")
function bf($planet1, $planet2) {
","function bf($planet1, $planet2) {
    $planets = [""Mercury"", ""Venus"", ""Earth"", ""Mars"", ""Jupiter"", ""Saturn"", ""Uranus"", ""Neptune""];

    $index1 = array_search($planet1, $planets);
    $index2 = array_search($planet2, $planets);

    if ($index1 === false || $index2 === false) {
        return [];
    }

    if ($index1 > $index2) {
        $temp = $index1;
        $index1 = $index2;
        $index2 = $temp;
    }

    return array_slice($planets, $index1 + 1, $index2 - $index1 - 1);
}","function candidate(...$args) {
    return bf(...$args);
}

function test(): void {
    if (candidate(""Jupiter"", ""Neptune"") !== array(""Saturn"", ""Uranus"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Earth"", ""Mercury"") !== array(""Venus"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Mercury"", ""Uranus"") !== array(""Venus"", ""Earth"", ""Mars"", ""Jupiter"", ""Saturn"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Neptune"", ""Venus"") !== array(""Earth"", ""Mars"", ""Jupiter"", ""Saturn"", ""Uranus"")) { throw new Exception(""Test failed!""); }
    if (candidate(""Earth"", ""Earth"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""Mars"", ""Earth"") !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(""Jupiter"", ""Makemake"") !== array()) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_149,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //អ្នកអាចគិតថាពាក្យទាំងអស់នឹងមានទំហំដូចគ្នា។//តួអង្គនេះត្រូវតែបញ្ជូន array នៃ string ក្នុងលំដាប់លំដាប់។//ប្រសិនបើពាក្យពីរមានកម្ពស់ដូចគ្នា សូមរៀបចំ array តាមអក្សរអក្សរ។//គួរតែបញ្ជូន array ដែលត្រូវបានរៀបចំតាមច្បាប់នោះ។//របៀបវារៈនៃ array គួរតែឡើងទៅតាមទំហំនៃពាក្យនីមួយៗ ហើយអ្នក//ហើយវាអាចមានផ្ទុកសារដងៗ//Array គឺជា array នៃ string ហើយមិនដែលជា array នៃលេខទេ,//និងបញ្ជូន array ដែលទទួលបានមកវិញ ជាមួយនឹងលំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់លំដាប់//លុបចោលខ្សែដែលមានទំហំមិនស្មើពីវា, //សរសេរ function មួយដែលទទួលយក array នៃ string ជា parameter, // >>> list_sort(array(""aa"", ""a"", ""aaa""))
// array(""aa"")
// >>> list_sort(array(""ab"", ""a"", ""aaa"", ""cd""))
// array(""ab"", ""cd"")
function sorted_list_sum($lst) {
","function sorted_list_sum($lst) {
    // Filter out strings with odd lengths
    $filtered = array_filter($lst, function($str) {
        return strlen($str) % 2 == 0;
    });
    
    // Sort the filtered array by length and then alphabetically
    usort($filtered, function($a, $b) {
        $lengthComparison = strlen($a) - strlen($b);
        if ($lengthComparison == 0) {
            return strcmp($a, $b);
        }
        return $lengthComparison;
    });

    return $filtered;
}","function candidate(...$args) {
    return sorted_list_sum(...$args);
}

function test(): void {
    if (candidate(array(""aa"", ""a"", ""aaa"")) !== array(""aa"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""school"", ""AI"", ""asdf"", ""b"")) !== array(""AI"", ""asdf"", ""school"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""d"", ""b"", ""c"", ""a"")) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""d"", ""dcba"", ""abcd"", ""a"")) !== array(""abcd"", ""dcba"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""AI"", ""ai"", ""au"")) !== array(""AI"", ""ai"", ""au"")) { throw new Exception(""Test failed!""); }
    if (candidate(array(""a"", ""b"", ""b"", ""c"", ""c"", ""a"")) !== array()) { throw new Exception(""Test failed!""); }
    if (candidate(array(""aaaa"", ""bbbb"", ""dd"", ""cc"")) !== array(""cc"", ""dd"", ""aaaa"", ""bbbb"")) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_150,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ជាចំនួនសាមញ្ញ ហើយត្រូវបញ្ជូនតម្លៃនៃ y បើមិនដូច្នេះទេ ។//កម្មវិធីសាមញ្ញមួយដែលត្រូវត្រឡប់មកវិញនូវតម្លៃនៃ x ប្រសិនបើ n គឺ // >>> x_or_y(7, 34, 12)
// 34
// >>> x_or_y(15, 8, 5)
// 5
function x_or_y($n, $x, $y) {
","function x_or_y($n, $x, $y) {
    if (is_prime($n)) {
        return $x;
    } else {
        return $y;
    }
}

function is_prime($num) {
    if ($num <= 1) {
        return false;
    }
    if ($num <= 3) {
        return true;
    }
    if ($num % 2 == 0 || $num % 3 == 0) {
        return false;
    }
    for ($i = 5; $i * $i <= $num; $i += 6) {
        if ($num % $i == 0 || $num % ($i + 2) == 0) {
            return false;
        }
    }
    return true;
}","function candidate(...$args) {
    return x_or_y(...$args);
}

function test(): void {
    if (candidate(7, 34, 12) !== 34) { throw new Exception(""Test failed!""); }
    if (candidate(15, 8, 5) !== 5) { throw new Exception(""Test failed!""); }
    if (candidate(3, 33, 5212) !== 33) { throw new Exception(""Test failed!""); }
    if (candidate(1259, 3, 52) !== 3) { throw new Exception(""Test failed!""); }
    if (candidate(7919, -1, 12) !== -1) { throw new Exception(""Test failed!""); }
    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(""Test failed!""); }
    if (candidate(91, 56, 129) !== 129) { throw new Exception(""Test failed!""); }
    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 0) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 0) !== 2) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_151,khm_Khmr,php,"<?php
//ក្នុង array ដែលមាន odd សូមបដិសេធចំនួនដែលមានអវិជ្ជមានឬមិនជា integer ។//ដោយបានផ្តល់នូវ array នៃចំនួន, សូមត្រឡប់មកវិញនូវចំនួននៃលេខនៃលេខ។// >>> double_the_difference(array(1, 3, 2, 0))
// 10
// >>> double_the_difference(array(-1, -2, 0))
// 0
// >>> double_the_difference(array(9, -2))
// 81
// >>> double_the_difference(array(0))
// 0
// If the input array is empty, return 0.
function double_the_difference($lst) {
","function double_the_difference($lst) {
    $sum = 0;
    foreach ($lst as $num) {
        if (is_int($num) && $num > 0 && $num % 2 !== 0) {
            $sum += $num * $num;
        }
    }
    return $sum;
}

// Example usage:
// echo double_the_difference(array(1, 3, 2, 0)); // 10
// echo double_the_difference(array(-1, -2, 0)); // 0
// echo double_the_difference(array(9, -2)); // 81
// echo double_the_difference(array(0)); // 0","function candidate(...$args) {
    return double_the_difference(...$args);
}

function test(): void {
    if (candidate(array()) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(5.0, 4.0)) !== 25) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.1, 0.2, 0.3)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-10.0, -20.0, -30.0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(-1.0, -2.0, 8.0)) !== 0) { throw new Exception(""Test failed!""); }
    if (candidate(array(0.2, 3.0, 5.0)) !== 34) { throw new Exception(""Test failed!""); }
    if (candidate(array(-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0)) !== 165) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_152,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //តម្លៃគឺ 0 ហើយប្រសិនបើមិនពិតទេតម្លៃគឺការខុសគ្នារវាងការប៉ាន់ស្មាននិងលទ្ធផល។//បញ្ជូន array នៃកំណាត់ដដែលដែលដែលបង្ហាញថាតើការប៉ាន់ស្មានមួយណាមានចម្ងាយប៉ុន្មាន។ ប្រសិនបើពួកគេបានប៉ាន់ស្មានត្រឹមត្រូវ, //អ្នកត្រូវបានផ្តល់នូវតារាងចំនួនពីរនៃលទ្ធផល និងការប៉ាន់ស្មាននៃកម្ពស់ស្មើគ្នា ដែលក្នុងនោះតារាងបញ្ចូលគ្នានោះបង្ហាញថាមានលក្ខណៈស្របគ្នា។//កិច្ចការរបស់អ្នកគឺដើម្បីកំណត់ថាតើមនុស្សម្នាក់បានសន្និដ្ឋានលទ្ធផលនៃការប្រកួតជាច្រើនយ៉ាងត្រឹមត្រូវឬទេ។//គួរតែកត់សម្គាល់ និងប្រៀបធៀប។//ហេតុការណ៍នេះត្រូវបានគេដឹងជាទីបំផុត។ អារម្មណ៍ និងគំនិតដែលអ្នកមាននៅពេលនោះគឺ//ខ្ញុំគិតថាយើងទាំងអស់គ្នាចាំបាននូវអារម្មណ៍នោះ នៅពេលដែលលទ្ធផលនៃការរង់ចាំយូរៗ// >>> compare(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2))
// array(0, 0, 0, 0, 3, 3)
// >>> compare(array(0, 5, 0, 0, 0, 4), array(4, 1, 1, 0, 0, -2))
// array(4, 4, 1, 0, 0, 6)
function compare($game, $guess) {
","function compare($game, $guess) {
    $result = array();
    for ($i = 0; $i < count($game); $i++) {
        $result[] = abs($game[$i] - $guess[$i]);
    }
    return $result;
}","function candidate(...$args) {
    return compare(...$args);
}

function test(): void {
    if (candidate(array(1, 2, 3, 4, 5, 1), array(1, 2, 3, 4, 2, -2)) !== array(0, 0, 0, 0, 3, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(array(0, 0, 0, 0, 0, 0), array(0, 0, 0, 0, 0, 0)) !== array(0, 0, 0, 0, 0, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3), array(-1, -2, -3)) !== array(2, 4, 6)) { throw new Exception(""Test failed!""); }
    if (candidate(array(1, 2, 3, 5), array(-1, 2, 3, 4)) !== array(2, 0, 0, 1)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_153,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //(កម្លាំងរបស់វាគឺ -1) ។//return ""Slices.SErviNGSliCes"" ព្រោះថា ""SErviNGSliCes"" គឺជាការពង្រីកដ៏ខ្លាំងបំផុត//extension: ['SErviNGSliCes', 'Cheese', 'StuFfed'] ពេលនោះអ្នកគួរតែ//ឧទាហរណ៍ប្រសិនបើអ្នកបានទទួល ""Slices"" ជាថ្នាក់និង array នៃ //ជ្រើសរើសមួយដែលមកមុនក្នុង array ។//ប្រសិនបើមានការពង្រីកពីរឬច្រើនជាងនេះដែលមានកម្លាំងដូចគ្នា, អ្នកគួរតែ//format: ClassName.StrongestExtensionName. //អ្នកត្រូវរកការពង្រីកដ៏ខ្លាំងបំផុត ហើយត្រឡប់ទៅសរសៃមួយនៅក្នុងនេះ//ក្នុងឈ្មោះនៃការពង្រីក, ភាពខ្លាំងត្រូវបានផ្តល់ដោយភាគ CAP - SM ។ //អក្សរនៅក្នុងឈ្មោះនៃ extension ហើយសូមអោយ SM ជាចំនួនអក្សរតូចៗ//ភាពខ្លាំងនៃការពង្រីកគឺដូចខាងក្រោម: CAP ត្រូវជាលេខនៃអក្សរធំ //ការពង្រីកនេះត្រូវបានប្រើដើម្បីផ្ទុកវគ្គបន្ថែមទៅលើវគ្គ។//អ្នកនឹងទទួលបានឈ្មោះនៃ class (a string) និង array នៃ extension ។// >>> Strongest_Extension(""my_class"", array(""AA"", ""Be"", ""CC""))
// ""my_class.AA""
function Strongest_Extension($class_name, $extensions) {
","function Strongest_Extension($class_name, $extensions) {
    $strongestExtension = '';
    $maxStrength = null;

    foreach ($extensions as $extension) {
        $cap = preg_match_all('/[A-Z]/', $extension);
        $sm = preg_match_all('/[a-z]/', $extension);
        $strength = $cap - $sm;

        if ($maxStrength === null || $strength > $maxStrength) {
            $maxStrength = $strength;
            $strongestExtension = $extension;
        }
    }

    return $class_name . '.' . $strongestExtension;
}","function candidate(...$args) {
    return Strongest_Extension(...$args);
}

function test(): void {
    if (candidate(""Watashi"", array(""tEN"", ""niNE"", ""eIGHt8OKe"")) !== ""Watashi.eIGHt8OKe"") { throw new Exception(""Test failed!""); }
    if (candidate(""Boku123"", array(""nani"", ""NazeDa"", ""YEs.WeCaNe"", ""32145tggg"")) !== ""Boku123.YEs.WeCaNe"") { throw new Exception(""Test failed!""); }
    if (candidate(""__YESIMHERE"", array(""t"", ""eMptY"", ""nothing"", ""zeR00"", ""NuLl__"", ""123NoooneB321"")) !== ""__YESIMHERE.NuLl__"") { throw new Exception(""Test failed!""); }
    if (candidate(""K"", array(""Ta"", ""TAR"", ""t234An"", ""cosSo"")) !== ""K.TAR"") { throw new Exception(""Test failed!""); }
    if (candidate(""__HAHA"", array(""Tab"", ""123"", ""781345"", ""-_-"")) !== ""__HAHA.123"") { throw new Exception(""Test failed!""); }
    if (candidate(""YameRore"", array(""HhAas"", ""okIWILL123"", ""WorkOut"", ""Fails"", ""-_-"")) !== ""YameRore.okIWILL123"") { throw new Exception(""Test failed!""); }
    if (candidate(""finNNalLLly"", array(""Die"", ""NowW"", ""Wow"", ""WoW"")) !== ""finNNalLLly.WoW"") { throw new Exception(""Test failed!""); }
    if (candidate(""_"", array(""Bb"", ""91245"")) !== ""_.Bb"") { throw new Exception(""Test failed!""); }
    if (candidate(""Sp"", array(""671235"", ""Bb"")) !== ""Sp.671235"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_154,khm_Khmr,php,"<?php
//អ្នកត្រូវបានផ្តល់ពាក្យ 2 ។ អ្នកត្រូវត្រឡប់ទៅ true ប្រសិនបើពាក្យទី 2 ឬការដូររបស់វាជាខ្សែសង្វាក់នៅពាក្យទី 1 ។// >>> cycpattern_check(""abcd"", ""abd"")
// false
// >>> cycpattern_check(""hello"", ""ell"")
// true
// >>> cycpattern_check(""whassup"", ""psus"")
// false
// >>> cycpattern_check(""abab"", ""baa"")
// true
// >>> cycpattern_check(""efef"", ""eeff"")
// false
// >>> cycpattern_check(""himenss"", ""simen"")
// true
function cycpattern_check($a, $b) {
","function cycpattern_check($a, $b) {
    $lenB = strlen($b);
    // Generate all rotations of the second word
    for ($i = 0; $i < $lenB; $i++) {
        $rotation = substr($b, $i) . substr($b, 0, $i);
        if (strpos($a, $rotation) !== false) {
            return true;
        }
    }
    return false;
}","function candidate(...$args) {
    return cycpattern_check(...$args);
}

function test(): void {
    if (candidate(""xyzw"", ""xyw"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""yello"", ""ell"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""whattup"", ""ptut"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""efef"", ""fee"") !== true) { throw new Exception(""Test failed!""); }
    if (candidate(""abab"", ""aabb"") !== false) { throw new Exception(""Test failed!""); }
    if (candidate(""winemtt"", ""tinem"") !== true) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_155,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ដោយបានផ្តល់ចំនួនគត់មួយ. return array ដែលមានចំនួនគត់ និងគត់ជារៀងរាល់។// >>> even_odd_count(-12)
// array(1, 1)
// >>> even_odd_count(123)
// array(1, 2)
function even_odd_count($num) {
","function even_odd_count($num) {
    $num = abs($num);
    $evenCount = 0;
    $oddCount = 0;

    while ($num > 0) {
        $digit = $num % 10;
        if ($digit % 2 == 0) {
            $evenCount++;
        } else {
            $oddCount++;
        }
        $num = intval($num / 10);
    }

    return array($evenCount, $oddCount);
}","function candidate(...$args) {
    return even_odd_count(...$args);
}

function test(): void {
    if (candidate(7) !== array(0, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(-78) !== array(1, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(3452) !== array(2, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(346211) !== array(3, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(-345821) !== array(3, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(-2) !== array(1, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(-45347) !== array(2, 3)) { throw new Exception(""Test failed!""); }
    if (candidate(0) !== array(1, 0)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_156,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ការរឹតត្បិត: 1 <= num <= 1000 //ហើយសរសេរវាជាអក្សរតូច។//ដោយបានផ្តល់ចំនួនគត់វិជ្ជមាន, ទទួលបានលេខរ៉ូម៉ាំងស្មើនឹងវាជាខ្សែ, // >>> int_to_mini_roman(19)
// ""xix""
// >>> int_to_mini_roman(152)
// ""clii""
// >>> int_to_mini_roman(426)
// ""cdxxvi""
function int_to_mini_roman($number) {
","function int_to_mini_roman($number) {
    $map = [
        1000 => 'm',
        900 => 'cm',
        500 => 'd',
        400 => 'cd',
        100 => 'c',
        90 => 'xc',
        50 => 'l',
        40 => 'xl',
        10 => 'x',
        9 => 'ix',
        5 => 'v',
        4 => 'iv',
        1 => 'i'
    ];

    $roman = '';
    while ($number > 0) {
        foreach ($map as $val => $symbol) {
            if ($number >= $val) {
                $roman .= $symbol;
                $number -= $val;
                break;
            }
        }
    }

    return $roman;
}","function candidate(...$args) {
    return int_to_mini_roman(...$args);
}

function test(): void {
    if (candidate(19) !== ""xix"") { throw new Exception(""Test failed!""); }
    if (candidate(152) !== ""clii"") { throw new Exception(""Test failed!""); }
    if (candidate(251) !== ""ccli"") { throw new Exception(""Test failed!""); }
    if (candidate(426) !== ""cdxxvi"") { throw new Exception(""Test failed!""); }
    if (candidate(500) !== ""d"") { throw new Exception(""Test failed!""); }
    if (candidate(1) !== ""i"") { throw new Exception(""Test failed!""); }
    if (candidate(4) !== ""iv"") { throw new Exception(""Test failed!""); }
    if (candidate(43) !== ""xliii"") { throw new Exception(""Test failed!""); }
    if (candidate(90) !== ""xc"") { throw new Exception(""Test failed!""); }
    if (candidate(94) !== ""xciv"") { throw new Exception(""Test failed!""); }
    if (candidate(532) !== ""dxxxii"") { throw new Exception(""Test failed!""); }
    if (candidate(900) !== ""cm"") { throw new Exception(""Test failed!""); }
    if (candidate(994) !== ""cmxciv"") { throw new Exception(""Test failed!""); }
    if (candidate(1000) !== ""m"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_157,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //90 ឌីជីថល//ត្រីកោណទិសត្រង់ គឺជាត្រីកោណដែលមានទិសមួយជាទិសត្រង់ ឬ //ផ្នែកទាំងពីរបង្កើតជាត្រីកោណទិសត្រង់, ខុសពីនេះ//បានផ្តល់នូវទទឹងនៃភាគីទាំងបីនៃត្រីកោណ។ ត្រឡប់ទៅ true ប្រសិនបើបី // >>> right_angle_triangle(3, 4, 5)
// true
// >>> right_angle_triangle(1, 2, 3)
// false
function right_angle_triangle($a, $b, $c) {
","function right_angle_triangle($a, $b, $c) {
    // Sort the sides to make it easier to apply the Pythagorean theorem
    $sides = [$a, $b, $c];
    sort($sides);
    
    // Apply the Pythagorean theorem to check for a right-angled triangle
    return $sides[0] ** 2 + $sides[1] ** 2 === $sides[2] ** 2;
}","function candidate(...$args) {
    return right_angle_triangle(...$args);
}

function test(): void {
    if (candidate(3, 4, 5) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1, 2, 3) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(10, 6, 8) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 2) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(7, 24, 25) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(10, 5, 7) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(5, 12, 13) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(15, 8, 17) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(48, 55, 73) !== true) { throw new Exception(""Test failed!""); }
    if (candidate(1, 1, 1) !== false) { throw new Exception(""Test failed!""); }
    if (candidate(2, 2, 10) !== false) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_158,khm_Khmr,php,"<?php
//តួអក្សរ, ត្រឡប់ទៅតួអក្សរដែលស្ថិតនៅលើកដំបូងក្នុងលំដាប់ lexicographical ។ //នៃអក្សរតែមួយគត់ ប្រសិនបើខ្សែជាច្រើនមានចំនួនអក្សរតែមួយគត់ //array មានពាក្យផ្សេងគ្នា។ បញ្ជូនពាក្យដែលមានចំនួនច្រើនបំផុត //សរសេរ function មួយដែលទទួលយក array នៃ string ។// >>> find_max(array(""name"", ""of"", ""string""))
// ""string""
// >>> find_max(array(""name"", ""enam"", ""game""))
// ""enam""
// >>> find_max(array(""aaaaaaa"", ""bb"", ""cc""))
// ""aaaaaaa""
function find_max($words) {
","function find_max($words) {
    $maxUniqueChars = 0;
    $result = '';
    
    foreach ($words as $word) {
        // Get unique characters count
        $uniqueCharsCount = count(array_unique(str_split($word)));
        
        // Determine if this word has more unique characters or comes first lexicographically
        if ($uniqueCharsCount > $maxUniqueChars || ($uniqueCharsCount === $maxUniqueChars && ($result === '' || strcmp($word, $result) < 0))) {
            $maxUniqueChars = $uniqueCharsCount;
            $result = $word;
        }
    }
    
    return $result;
}","function candidate(...$args) {
    return find_max(...$args);
}

function test(): void {
    if (candidate(array(""name"", ""of"", ""string"")) !== ""string"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""name"", ""enam"", ""game"")) !== ""enam"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""aaaaaaa"", ""bb"", ""cc"")) !== ""aaaaaaa"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""abc"", ""cba"")) !== ""abc"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""play"", ""this"", ""game"", ""of"", ""footbott"")) !== ""footbott"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""we"", ""are"", ""gonna"", ""rock"")) !== ""gonna"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""we"", ""are"", ""a"", ""mad"", ""nation"")) !== ""nation"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""this"", ""is"", ""a"", ""prrk"")) !== ""this"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""b"")) !== ""b"") { throw new Exception(""Test failed!""); }
    if (candidate(array(""play"", ""play"", ""play"")) !== ""play"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_159,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //ប្រសិនបើគ្មានគ្រាប់ស្វាយចន្ទីសល់ច្រើនទេ អ្នកនឹងបរិភោគគ្រាប់ស្វាយចន្ទីសល់ទាំងអស់ ប៉ុន្តែនៅតែអត់ឃ្លាន។//ចំនួនគ្រាប់ស្វាយចន្ទីដែលនៅសល់ក្រោយពេលបរិភោគអាហាររបស់អ្នក ] //អ្នកគួរតែយកត្រីមួយប្រភេទ [ចំនួនសរុបនៃគ្រាប់កន្ទុយលេខដែលអ្នកបានបរិភោគបន្ទាប់ពីអាហាររបស់អ្នក]//ប៉ុន្តែ ឥឡូវ នេះ អ្នក ត្រូវ តែ បរិភោគ ស្វាយចន្ទី បន្ថែម ទៀត ដើម្បី បំពេញ អាហារ ក្នុង មួយ ថ្ងៃ ។//អ្នកជាចៀមដែលអត់ឃ្លាន ហើយអ្នកបានបរិភោគស្វាយមួយចំនួនរួចទៅហើយ// >>> eat(5, 6, 10)
// array(11, 4)
// >>> eat(4, 8, 9)
// array(12, 1)
// >>> eat(1, 10, 10)
// array(11, 0)
// >>> eat(2, 11, 5)
// array(7, 0)
// Variables:
// @number : integer
// the number of carrots that you have eaten.
// @need : integer
// the number of carrots that you need to eat.
// @remaining : integer
// the number of remaining carrots thet exist in stock
// Constrain:
// * 0 <= number <= 1000
// * 0 <= need <= 1000
// * 0 <= remaining <= 1000
// Have fun :)
function eat($number, $need, $remaining) {
","function eat($number, $need, $remaining) {
    $totalEaten = $number + min($need, $remaining);
    $carrotsLeft = max(0, $remaining - $need);
    return array($totalEaten, $carrotsLeft);
}","function candidate(...$args) {
    return eat(...$args);
}

function test(): void {
    if (candidate(5, 6, 10) !== array(11, 4)) { throw new Exception(""Test failed!""); }
    if (candidate(4, 8, 9) !== array(12, 1)) { throw new Exception(""Test failed!""); }
    if (candidate(1, 10, 10) !== array(11, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(2, 11, 5) !== array(7, 0)) { throw new Exception(""Test failed!""); }
    if (candidate(4, 5, 7) !== array(9, 2)) { throw new Exception(""Test failed!""); }
    if (candidate(4, 5, 1) !== array(5, 0)) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_160,khm_Khmr,php,"<?php
//Operator array មាន operator យ៉ាងហោចណាស់មួយ ហើយ operand array មាន operands យ៉ាងហោចណាស់ពីរ។//Operand គឺជា array នៃចំនួនពេញដែលមិនមែនជាអវិជ្ជមាន។//ប្រវែងនៃប្រព័ន្ធប្រតិបត្តិការគឺស្មើនឹងប្រវែងនៃប្រព័ន្ធប្រតិបត្តិការអូសមួយ។//កត់សម្គាល់: //=> លទ្ធផល = 9 //លទ្ធផល = 2 + 3 * 4 - 5 //array = [2, 3, 4, 5] //អ្នកប្រតិបត្តិ ['+', '*', '-'] //ឧទាហរណ៍: //ការបង្កើន (**)//ការបែងចែកជាន់ ( // ) //ការចម្លង (*) //ការដកចេញ ( - ) //ការបន្ថែម (+) //ប្រតិបត្តិការ Algebra មូលដ្ឋាន: //expression និង return ការវាយតម្លៃនៃ expression នេះ។//array ទីពីរគឺជា array នៃចំនួនពេញ ប្រើ array ពីរដែលបានផ្តល់ដើម្បីសាងសង់ algebraic //ដោយបានផ្តល់ operator arrays ពីរ និង operand array ដំបូងមានប្រតិបត្តិការ algebra មូលដ្ឋាន និង function do_algebra($operator, $operand) {
","function do_algebra($operator, $operand) {
    $expression = $operand[0]; // Start with the first operand
    for ($i = 0; $i < count($operator); $i++) {
        $currentOperator = $operator[$i];
        $currentOperand = $operand[$i + 1];
        
        switch ($currentOperator) {
            case '+':
                $expression .= "" + $currentOperand"";
                break;
            case '-':
                $expression .= "" - $currentOperand"";
                break;
            case '*':
                $expression .= "" * $currentOperand"";
                break;
            case '//':
                $expression .= "" // $currentOperand"";
                break;
            case '**':
                $expression .= "" ** $currentOperand"";
                break;
        }
    }

    // Use eval to evaluate the constructed expression
    eval(""\$result = {$expression};"");

    // Return the result
    return $result;
}","function candidate(...$args) {
    return do_algebra(...$args);
}

function test(): void {
    if (candidate(array(""**"", ""*"", ""+""), array(2, 3, 4, 5)) !== 37) { throw new Exception(""Test failed!""); }
    if (candidate(array(""+"", ""*"", ""-""), array(2, 3, 4, 5)) !== 9) { throw new Exception(""Test failed!""); }
    if (candidate(array(""//"", ""*""), array(7, 3, 4)) !== 8) { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_161,khm_Khmr,php,"<?php
//ឧទាហរណ៍//តួអង្គនេះត្រូវតែបញ្ជូនលេខសញ្ញាបត្រដែលទទួលបាន។//ប្រសិនបើ string មិនមានអក្សរទេ, សូមបកប្រែ string ។//បើមិនដូច្នេះទេ ទុកវាដូចដែលវាមាន។//ប្រសិនបើ s[i] គឺជាអក្សរមួយ សូមបកប្រែ case របស់វាពីខាងក្រោមទៅខាងលើ ឬ vice versa ។//អ្នកត្រូវបានផ្តល់ string s ។// >>> solve(""1234"")
// ""4321""
// >>> solve(""ab"")
// ""AB""
// >>> solve(""#a@C"")
// ""#A@c""
function solve($s) {
","function solve($s) {
    // Check if the string contains any letter
    if (preg_match('/[a-zA-Z]/', $s)) {
        // Change the case for each character in the string
        $result = '';
        for ($i = 0; $i < strlen($s); $i++) {
            $char = $s[$i];
            if (ctype_alpha($char)) {
                // If the character is a letter, reverse its case
                if (ctype_lower($char)) {
                    $result .= strtoupper($char);
                } else {
                    $result .= strtolower($char);
                }
            } else {
                // Otherwise, keep it as it is
                $result .= $char;
            }
        }
        return $result;
    } else {
        // If the string contains no letters, reverse the string
        return strrev($s);
    }
}","function candidate(...$args) {
    return solve(...$args);
}

function test(): void {
    if (candidate(""AsDf"") !== ""aSdF"") { throw new Exception(""Test failed!""); }
    if (candidate(""1234"") !== ""4321"") { throw new Exception(""Test failed!""); }
    if (candidate(""ab"") !== ""AB"") { throw new Exception(""Test failed!""); }
    if (candidate(""#a@C"") !== ""#A@c"") { throw new Exception(""Test failed!""); }
    if (candidate(""#AsdfW^45"") !== ""#aSDFw^45"") { throw new Exception(""Test failed!""); }
    if (candidate(""#6@2"") !== ""2@6#"") { throw new Exception(""Test failed!""); }
    if (candidate(""#$a^D"") !== ""#$A^d"") { throw new Exception(""Test failed!""); }
    if (candidate(""#ccc"") !== ""#CCC"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_162,khm_Khmr,php,"<?php
//ប្រសិនបើ 'text' គឺជា string ដែលគ្មានអ្វីទេ, return null ។//ដោយបានផ្តល់នូវ string 'text', សូមត្រឡប់ទៅ string ស្មើនឹង md5 hash របស់វាវិញ។// >>> string_to_md5(""Hello world"")
// ""3e25960a79dbc69b674cd4ec67a72c62""
function string_to_md5($text) {
","function string_to_md5($text) {
    if ($text === '') {
        return null;
    }
    return md5($text);
}","function candidate(...$args) {
    return string_to_md5(...$args);
}

function test(): void {
    if (candidate(""Hello world"") !== ""3e25960a79dbc69b674cd4ec67a72c62"") { throw new Exception(""Test failed!""); }
    if (candidate("""") !== null) { throw new Exception(""Test failed!""); }
    if (candidate(""A B C"") !== ""0ef78513b0cb8cef12743f5aeb35f888"") { throw new Exception(""Test failed!""); }
    if (candidate(""password"") !== ""5f4dcc3b5aa765d61d8327deb882cf99"") { throw new Exception(""Test failed!""); }
}

test();"
HumanEval_163,khm_Khmr,php,"<?php
//ឧទាហរណ៍: //និង b, ក្នុងលំដាប់កើនឡើង។//ដោយបានផ្តល់ចំនួនគត់វិជ្ជមានចំនួនពីរ a និង b, សូមត្រឡប់ទៅលេខគត់រវាង a // >>> generate_integers(2, 8)
// array(2, 4, 6, 8)
// >>> generate_integers(8, 2)
// array(2, 4, 6, 8)
// >>> generate_integers(10, 14)
// array()
function generate_integers($a, $b) {
","function generate_integers($a, $b) {
    $evenNumbers = [];
    $start = min($a, $b);
    $end = max($a, $b);
    for ($i = $start; $i <= $end; $i++) {
        if ($i % 2 == 0) {
            $evenNumbers[] = $i;
        }
    }
    return $evenNumbers;
}","function candidate(...$args) {
    return generate_integers(...$args);
}

function test(): void {
    if (candidate(2, 10) !== array(2, 4, 6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(10, 2) !== array(2, 4, 6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(132, 2) !== array(2, 4, 6, 8)) { throw new Exception(""Test failed!""); }
    if (candidate(17, 89) !== array()) { throw new Exception(""Test failed!""); }
}

test();"
